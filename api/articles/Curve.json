{"title":"Analysis of Curve","uid":"1146d1d2628e1e9294dd0b11fc71e317","slug":"Curve","date":"2022-08-03T06:32:47.718Z","updated":"2022-08-03T06:32:47.718Z","comments":true,"path":"api/articles/Curve.json","keywords":null,"cover":[],"content":"<img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207301543286.png\" alt=\"\" style=\"zoom:20%;\" />\n\n<span id=\"more\"></span>\n\n<h1 id=\"Flow-chart\"><a href=\"#Flow-chart\" class=\"headerlink\" title=\"Flow chart\"></a>Flow chart</h1><p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202208031432535.png\"></p>\n<h1 id=\"Curve-Token\"><a href=\"#Curve-Token\" class=\"headerlink\" title=\"Curve Token\"></a>Curve Token</h1><h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># @version 0.2.4</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\n@title Curve DAO Token\n@author Curve Finance\n@license MIT\n@notice ERC20 with piecewise-linear mining supply.\n@dev Based on the ERC-20 token standard as defined at\n     https://eips.ethereum.org/EIPS/eip-20\n\"\"\"</span>\n\n<span class=\"token keyword\">from</span> vyper<span class=\"token punctuation\">.</span>interfaces <span class=\"token keyword\">import</span> ERC20\n\nimplements<span class=\"token punctuation\">:</span> ERC20\n\n\nevent Transfer<span class=\"token punctuation\">:</span>\n    _from<span class=\"token punctuation\">:</span> indexed<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n    _to<span class=\"token punctuation\">:</span> indexed<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n    _value<span class=\"token punctuation\">:</span> uint256\n\nevent Approval<span class=\"token punctuation\">:</span>\n    _owner<span class=\"token punctuation\">:</span> indexed<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n    _spender<span class=\"token punctuation\">:</span> indexed<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n    _value<span class=\"token punctuation\">:</span> uint256\n\nevent UpdateMiningParameters<span class=\"token punctuation\">:</span>\n    time<span class=\"token punctuation\">:</span> uint256\n    rate<span class=\"token punctuation\">:</span> uint256\n    supply<span class=\"token punctuation\">:</span> uint256\n\nevent SetMinter<span class=\"token punctuation\">:</span>\n    minter<span class=\"token punctuation\">:</span> address\n\nevent SetAdmin<span class=\"token punctuation\">:</span>\n    admin<span class=\"token punctuation\">:</span> address\n\n\nname<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nsymbol<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndecimals<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\n\nbalanceOf<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nallowances<span class=\"token punctuation\">:</span> HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\ntotal_supply<span class=\"token punctuation\">:</span> uint256\n\nminter<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\nadmin<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># General constants</span>\nYEAR<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">86400</span> <span class=\"token operator\">*</span> <span class=\"token number\">365</span>\n\n<span class=\"token comment\"># Allocation:</span>\n<span class=\"token comment\"># =========</span>\n<span class=\"token comment\"># * shareholders - 30%</span>\n<span class=\"token comment\"># * emplyees - 3%</span>\n<span class=\"token comment\"># * DAO-controlled reserve - 5%</span>\n<span class=\"token comment\"># * Early users - 5%</span>\n<span class=\"token comment\"># == 43% ==</span>\n<span class=\"token comment\"># left for inflation: 57%</span>\n\n<span class=\"token comment\"># Supply parameters</span>\nINITIAL_SUPPLY<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">1_303_030_303</span>\nINITIAL_RATE<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">274_815_283</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span> <span class=\"token operator\">/</span> YEAR  <span class=\"token comment\"># leading to 43% premine</span>\nRATE_REDUCTION_TIME<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> YEAR\nRATE_REDUCTION_COEFFICIENT<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">1189207115002721024</span>  <span class=\"token comment\"># 2 ** (1/4) * 1e18</span>\nRATE_DENOMINATOR<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span>\nINFLATION_DELAY<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">86400</span>\n\n<span class=\"token comment\"># Supply variables</span>\nmining_epoch<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>int128<span class=\"token punctuation\">)</span>\nstart_epoch_time<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\nrate<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\n\nstart_epoch_supply<span class=\"token punctuation\">:</span> uint256\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> _symbol<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> _decimals<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Contract constructor\n    @param _name Token full name\n    @param _symbol Token symbol\n    @param _decimals Number of decimals for token\n    \"\"\"</span>\n    init_supply<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> INITIAL_SUPPLY <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> _decimals\n    self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> _name\n    self<span class=\"token punctuation\">.</span>symbol <span class=\"token operator\">=</span> _symbol\n    self<span class=\"token punctuation\">.</span>decimals <span class=\"token operator\">=</span> _decimals\n    self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> init_supply\n    self<span class=\"token punctuation\">.</span>total_supply <span class=\"token operator\">=</span> init_supply\n    self<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender\n    log Transfer<span class=\"token punctuation\">(</span>ZERO_ADDRESS<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> init_supply<span class=\"token punctuation\">)</span>\n\n    self<span class=\"token punctuation\">.</span>start_epoch_time <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">+</span> INFLATION_DELAY <span class=\"token operator\">-</span> RATE_REDUCTION_TIME\n    self<span class=\"token punctuation\">.</span>mining_epoch <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    self<span class=\"token punctuation\">.</span>rate <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    self<span class=\"token punctuation\">.</span>start_epoch_supply <span class=\"token operator\">=</span> init_supply\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_update_mining_parameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @dev Update mining rate and supply at the start of the epoch\n         Any modifying mining call must also call this\n    \"\"\"</span>\n    _rate<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>rate\n    _start_epoch_supply<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>start_epoch_supply\n\n    self<span class=\"token punctuation\">.</span>start_epoch_time <span class=\"token operator\">+=</span> RATE_REDUCTION_TIME\n    self<span class=\"token punctuation\">.</span>mining_epoch <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">if</span> _rate <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        _rate <span class=\"token operator\">=</span> INITIAL_RATE\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        _start_epoch_supply <span class=\"token operator\">+=</span> _rate <span class=\"token operator\">*</span> RATE_REDUCTION_TIME\n        self<span class=\"token punctuation\">.</span>start_epoch_supply <span class=\"token operator\">=</span> _start_epoch_supply\n        _rate <span class=\"token operator\">=</span> _rate <span class=\"token operator\">*</span> RATE_DENOMINATOR <span class=\"token operator\">/</span> RATE_REDUCTION_COEFFICIENT\n\n    self<span class=\"token punctuation\">.</span>rate <span class=\"token operator\">=</span> _rate\n\n    log UpdateMiningParameters<span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> _rate<span class=\"token punctuation\">,</span> _start_epoch_supply<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">update_mining_parameters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Update mining rate and supply at the start of the epoch\n    @dev Callable by any address, but only once per epoch\n         Total supply becomes slightly larger if this function is called late\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">>=</span> self<span class=\"token punctuation\">.</span>start_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME  <span class=\"token comment\"># dev: too soon!</span>\n    self<span class=\"token punctuation\">.</span>_update_mining_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">start_epoch_time_write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get timestamp of the current mining epoch start\n            while simultaneously updating mining parameters\n    @return Timestamp of the epoch\n    \"\"\"</span>\n    _start_epoch_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>start_epoch_time\n    <span class=\"token keyword\">if</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">>=</span> _start_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_update_mining_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>start_epoch_time\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> _start_epoch_time\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">future_epoch_time_write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get timestamp of the next mining epoch start\n            while simultaneously updating mining parameters\n    @return Timestamp of the next epoch\n    \"\"\"</span>\n    _start_epoch_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>start_epoch_time\n    <span class=\"token keyword\">if</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">>=</span> _start_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_update_mining_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>start_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> _start_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_available_supply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>start_epoch_supply <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>start_epoch_time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>rate\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">available_supply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Current number of tokens in existence (claimed or unclaimed)\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_available_supply<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">mintable_in_timeframe</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice How much supply is mintable from start timestamp till end timestamp\n    @param start Start of the time interval (timestamp)\n    @param end End of the time interval (timestamp)\n    @return Tokens mintable from `start` till `end`\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> start <span class=\"token operator\">&lt;=</span> end  <span class=\"token comment\"># dev: start > end</span>\n    to_mint<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    current_epoch_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>start_epoch_time\n    current_rate<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>rate\n\n    <span class=\"token comment\"># Special case if end is in future (not yet minted) epoch</span>\n    <span class=\"token keyword\">if</span> end <span class=\"token operator\">></span> current_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n        current_epoch_time <span class=\"token operator\">+=</span> RATE_REDUCTION_TIME\n        current_rate <span class=\"token operator\">=</span> current_rate <span class=\"token operator\">*</span> RATE_DENOMINATOR <span class=\"token operator\">/</span> RATE_REDUCTION_COEFFICIENT\n\n    <span class=\"token keyword\">assert</span> end <span class=\"token operator\">&lt;=</span> current_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME  <span class=\"token comment\"># dev: too far in future</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Curve will not work in 1000 years. Darn!</span>\n        <span class=\"token keyword\">if</span> end <span class=\"token operator\">>=</span> current_epoch_time<span class=\"token punctuation\">:</span>\n            current_end<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> end\n            <span class=\"token keyword\">if</span> current_end <span class=\"token operator\">></span> current_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n                current_end <span class=\"token operator\">=</span> current_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME\n\n            current_start<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> start\n            <span class=\"token keyword\">if</span> current_start <span class=\"token operator\">>=</span> current_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>  <span class=\"token comment\"># We should never get here but what if...</span>\n            <span class=\"token keyword\">elif</span> current_start <span class=\"token operator\">&lt;</span> current_epoch_time<span class=\"token punctuation\">:</span>\n                current_start <span class=\"token operator\">=</span> current_epoch_time\n\n            to_mint <span class=\"token operator\">+=</span> current_rate <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>current_end <span class=\"token operator\">-</span> current_start<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> start <span class=\"token operator\">>=</span> current_epoch_time<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n        current_epoch_time <span class=\"token operator\">-=</span> RATE_REDUCTION_TIME\n        current_rate <span class=\"token operator\">=</span> current_rate <span class=\"token operator\">*</span> RATE_REDUCTION_COEFFICIENT <span class=\"token operator\">/</span> RATE_DENOMINATOR  <span class=\"token comment\"># double-division with rounding made rate a bit less => good</span>\n        <span class=\"token keyword\">assert</span> current_rate <span class=\"token operator\">&lt;=</span> INITIAL_RATE  <span class=\"token comment\"># This should never happen</span>\n\n    <span class=\"token keyword\">return</span> to_mint\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">set_minter</span><span class=\"token punctuation\">(</span>_minter<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Set the minter address\n    @dev Only callable once, when minter has not yet been set\n    @param _minter Address of the minter\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin  <span class=\"token comment\"># dev: admin only</span>\n    <span class=\"token keyword\">assert</span> self<span class=\"token punctuation\">.</span>minter <span class=\"token operator\">==</span> ZERO_ADDRESS  <span class=\"token comment\"># dev: can set the minter only once, at creation</span>\n    self<span class=\"token punctuation\">.</span>minter <span class=\"token operator\">=</span> _minter\n    log SetMinter<span class=\"token punctuation\">(</span>_minter<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">set_admin</span><span class=\"token punctuation\">(</span>_admin<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Set the new admin.\n    @dev After all is set up, admin only can change the token name\n    @param _admin New admin address\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin  <span class=\"token comment\"># dev: admin only</span>\n    self<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> _admin\n    log SetAdmin<span class=\"token punctuation\">(</span>_admin<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Total number of tokens in existence.\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>total_supply\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span>_owner <span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _spender <span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Check the amount of tokens that an owner allowed to a spender\n    @param _owner The address which owns the funds\n    @param _spender The address which will spend the funds\n    @return uint256 specifying the amount of tokens still available for the spender\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>allowances<span class=\"token punctuation\">[</span>_owner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_spender<span class=\"token punctuation\">]</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>_to <span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _value <span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Transfer `_value` tokens from `msg.sender` to `_to`\n    @dev Vyper does not allow underflows, so the subtraction in\n         this function will revert on an insufficient balance\n    @param _to The address to transfer to\n    @param _value The amount to be transferred\n    @return bool success\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> _to <span class=\"token operator\">!=</span> ZERO_ADDRESS  <span class=\"token comment\"># dev: transfers to 0x0 are not allowed</span>\n    self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _value\n    self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> _value\n    log Transfer<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _to<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>_from <span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _to <span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _value <span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n     @notice Transfer `_value` tokens from `_from` to `_to`\n     @param _from address The address which you want to send tokens from\n     @param _to address The address which you want to transfer to\n     @param _value uint256 the amount of tokens to be transferred\n     @return bool success\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> _to <span class=\"token operator\">!=</span> ZERO_ADDRESS  <span class=\"token comment\"># dev: transfers to 0x0 are not allowed</span>\n    <span class=\"token comment\"># NOTE: vyper does not allow underflows</span>\n    <span class=\"token comment\">#       so the following subtraction would revert on insufficient balance</span>\n    self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _value\n    self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> _value\n    self<span class=\"token punctuation\">.</span>allowances<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _value\n    log Transfer<span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">,</span> _to<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>_spender <span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _value <span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Approve `_spender` to transfer `_value` tokens on behalf of `msg.sender`\n    @dev Approval may only be from zero -> nonzero or from nonzero -> zero in order\n        to mitigate the potential race condition described here:\n        https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param _spender The address which will spend the funds\n    @param _value The amount of tokens to be spent\n    @return bool success\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> _value <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> self<span class=\"token punctuation\">.</span>allowances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_spender<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n    self<span class=\"token punctuation\">.</span>allowances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_spender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _value\n    log Approval<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _spender<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Mint `_value` tokens and assign them to `_to`\n    @dev Emits a Transfer event originating from 0x00\n    @param _to The account that will receive the created tokens\n    @param _value The amount that will be created\n    @return bool success\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>minter  <span class=\"token comment\"># dev: minter only</span>\n    <span class=\"token keyword\">assert</span> _to <span class=\"token operator\">!=</span> ZERO_ADDRESS  <span class=\"token comment\"># dev: zero address</span>\n\n    <span class=\"token keyword\">if</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">>=</span> self<span class=\"token punctuation\">.</span>start_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_update_mining_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    _total_supply<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>total_supply <span class=\"token operator\">+</span> _value\n    <span class=\"token keyword\">assert</span> _total_supply <span class=\"token operator\">&lt;=</span> self<span class=\"token punctuation\">.</span>_available_supply<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># dev: exceeds allowable mint amount</span>\n    self<span class=\"token punctuation\">.</span>total_supply <span class=\"token operator\">=</span> _total_supply\n\n    self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> _value\n    log Transfer<span class=\"token punctuation\">(</span>ZERO_ADDRESS<span class=\"token punctuation\">,</span> _to<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">burn</span><span class=\"token punctuation\">(</span>_value<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Burn `_value` tokens belonging to `msg.sender`\n    @dev Emits a Transfer event with a destination of 0x00\n    @param _value The amount that will be burned\n    @return bool success\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _value\n    self<span class=\"token punctuation\">.</span>total_supply <span class=\"token operator\">-=</span> _value\n\n    log Transfer<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> ZERO_ADDRESS<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">set_name</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> _symbol<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Change the token name and symbol to `_name` and `_symbol`\n    @dev Only callable by the admin account\n    @param _name New token name\n    @param _symbol New token symbol\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Only admin is allowed to change name\"</span>\n    self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> _name\n    self<span class=\"token punctuation\">.</span>symbol <span class=\"token operator\">=</span> _symbol<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze\"><a href=\"#Analyze\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207241729041.png\"></p>\n<p><strong>The total supply of 3.03b is distributed as such:</strong></p>\n<ul>\n<li>62% to community liquidity providers</li>\n<li>30% to shareholders (team and investors) with 2-4 years vesting</li>\n<li>3% to employees with 2 years vesting</li>\n<li>5% to the community reserve</li>\n</ul>\n<p><strong>The initial supply of around 1.3b (~43%) is distributed as such:</strong></p>\n<ul>\n<li>5% to pre-CRV liquidity providers with 1 year vesting</li>\n<li>30% to shareholders (team and investors) with 2-4 years vesting</li>\n<li>3% to employees with 2 years vesting</li>\n<li>5% to the community reserve</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">start_epoch_time_write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get timestamp of the current mining epoch start\n            while simultaneously updating mining parameters\n    @return Timestamp of the epoch\n    \"\"\"</span>\n    _start_epoch_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>start_epoch_time\n    <span class=\"token keyword\">if</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">>=</span> _start_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_update_mining_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>start_epoch_time\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> _start_epoch_time\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">future_epoch_time_write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get timestamp of the next mining epoch start\n            while simultaneously updating mining parameters\n    @return Timestamp of the next epoch\n    \"\"\"</span>\n    _start_epoch_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>start_epoch_time\n    <span class=\"token keyword\">if</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">>=</span> _start_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_update_mining_parameters<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>start_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> _start_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>两个函数分别获取当前和下一个挖掘阶段开始的时间戳，并同时调用_update_mining_parameters函数更新参数</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">_available_supply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>start_epoch_supply <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>start_epoch_time<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>rate\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">available_supply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Current number of tokens in existence (claimed or unclaimed)\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_available_supply<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>获得全部的token，包括认领以及未认领的全部</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">mintable_in_timeframe</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice How much supply is mintable from start timestamp till end timestamp\n    @param start Start of the time interval (timestamp)\n    @param end End of the time interval (timestamp)\n    @return Tokens mintable from `start` till `end`\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> start <span class=\"token operator\">&lt;=</span> end  <span class=\"token comment\"># dev: start > end</span>\n    to_mint<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    current_epoch_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>start_epoch_time\n    current_rate<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>rate\n\n    <span class=\"token comment\"># Special case if end is in future (not yet minted) epoch</span>\n    <span class=\"token keyword\">if</span> end <span class=\"token operator\">></span> current_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n        current_epoch_time <span class=\"token operator\">+=</span> RATE_REDUCTION_TIME\n        current_rate <span class=\"token operator\">=</span> current_rate <span class=\"token operator\">*</span> RATE_DENOMINATOR <span class=\"token operator\">/</span> RATE_REDUCTION_COEFFICIENT\n\n    <span class=\"token keyword\">assert</span> end <span class=\"token operator\">&lt;=</span> current_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME  <span class=\"token comment\"># dev: too far in future</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Curve will not work in 1000 years. Darn!</span>\n        <span class=\"token keyword\">if</span> end <span class=\"token operator\">>=</span> current_epoch_time<span class=\"token punctuation\">:</span>\n            current_end<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> end\n            <span class=\"token keyword\">if</span> current_end <span class=\"token operator\">></span> current_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n                current_end <span class=\"token operator\">=</span> current_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME\n\n            current_start<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> start\n            <span class=\"token keyword\">if</span> current_start <span class=\"token operator\">>=</span> current_epoch_time <span class=\"token operator\">+</span> RATE_REDUCTION_TIME<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>  <span class=\"token comment\"># We should never get here but what if...</span>\n            <span class=\"token keyword\">elif</span> current_start <span class=\"token operator\">&lt;</span> current_epoch_time<span class=\"token punctuation\">:</span>\n                current_start <span class=\"token operator\">=</span> current_epoch_time\n\n            to_mint <span class=\"token operator\">+=</span> current_rate <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>current_end <span class=\"token operator\">-</span> current_start<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> start <span class=\"token operator\">>=</span> current_epoch_time<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n        current_epoch_time <span class=\"token operator\">-=</span> RATE_REDUCTION_TIME\n        current_rate <span class=\"token operator\">=</span> current_rate <span class=\"token operator\">*</span> RATE_REDUCTION_COEFFICIENT <span class=\"token operator\">/</span> RATE_DENOMINATOR  <span class=\"token comment\"># double-division with rounding made rate a bit less => good</span>\n        <span class=\"token keyword\">assert</span> current_rate <span class=\"token operator\">&lt;=</span> INITIAL_RATE  <span class=\"token comment\"># This should never happen</span>\n\n    <span class=\"token keyword\">return</span> to_mint<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>以上函数计算从开始时间到结束时间的供应量</p>\n<p>case 1</p>\n<ul>\n<li>end&gt; current_epoch_time(will update) + RATE_REDUCTION_TIME<ul>\n<li>start&lt;&#x3D;current_epoch_time(updated)——&gt;return current_rate * (period)</li>\n<li>if start1 equal to updated start1(in case 1)，the same result</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207241912936.png\"></p>\n<p>case 2</p>\n<ul>\n<li><p>current_epoch_time&lt;end&lt;&#x3D;current_epoch_time(will update) + RATE_REDUCTION_TIME</p>\n</li>\n<li><p>start&lt;&#x3D;current_epoch_time(updated)——&gt;return current_rate * (period)</p>\n</li>\n<li><p>if start1 equal to updated start1(in case 1)，the same result</p>\n</li>\n</ul>\n<p>  <img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207241923081.png\"></p>\n<p>case 3</p>\n<ul>\n<li>end&lt; current_epoch_time<ul>\n<li>start&lt;&#x3D;current_epoch_time(updated)——&gt;return current_rate * (period)</li>\n<li>if star1 equal to updated start1(in case 1)，the same result</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207241934612.png\"></p>\n<p>case 4</p>\n<ul>\n<li>end*n&lt;current_epoch_time<ul>\n<li>for 循环，逻辑相同</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Voting-Escrow\"><a href=\"#Voting-Escrow\" class=\"headerlink\" title=\"Voting Escrow\"></a>Voting Escrow</h1><h2 id=\"Code-1\"><a href=\"#Code-1\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># @version 0.2.4</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\n@title Voting Escrow\n@author Curve Finance\n@license MIT\n@notice Votes have a weight depending on time, so that users are\n        committed to the future of (whatever they are voting for)\n@dev Vote weight decays linearly over time. Lock time cannot be\n     more than `MAXTIME` (4 years).\n\"\"\"</span>\n\n<span class=\"token comment\"># Voting escrow to have time-weighted votes</span>\n<span class=\"token comment\"># Votes have a weight depending on time, so that users are committed</span>\n<span class=\"token comment\"># to the future of (whatever they are voting for).</span>\n<span class=\"token comment\"># The weight in this implementation is linear, and lock cannot be more than maxtime:</span>\n<span class=\"token comment\"># w ^</span>\n<span class=\"token comment\"># 1 +        /</span>\n<span class=\"token comment\">#   |      /</span>\n<span class=\"token comment\">#   |    /</span>\n<span class=\"token comment\">#   |  /</span>\n<span class=\"token comment\">#   |/</span>\n<span class=\"token comment\"># 0 +--------+------> time</span>\n<span class=\"token comment\">#       maxtime (4 years?)</span>\n\nstruct Point<span class=\"token punctuation\">:</span>\n    bias<span class=\"token punctuation\">:</span> int128\n    slope<span class=\"token punctuation\">:</span> int128  <span class=\"token comment\"># - dweight / dt</span>\n    ts<span class=\"token punctuation\">:</span> uint256\n    blk<span class=\"token punctuation\">:</span> uint256  <span class=\"token comment\"># block</span>\n<span class=\"token comment\"># We cannot really do block numbers per se b/c slope is per time, not per block</span>\n<span class=\"token comment\"># and per block could be fairly bad b/c Ethereum changes blocktimes.</span>\n<span class=\"token comment\"># What we can do is to extrapolate ***At functions</span>\n\nstruct LockedBalance<span class=\"token punctuation\">:</span>\n    amount<span class=\"token punctuation\">:</span> int128\n    end<span class=\"token punctuation\">:</span> uint256\n\n\ninterface ERC20<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">decimals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> String<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> String<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span> nonpayable\n    <span class=\"token keyword\">def</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>spender<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span> nonpayable\n\n\n<span class=\"token comment\"># Interface for checking whether address belongs to a whitelisted</span>\n<span class=\"token comment\"># type of a smart wallet.</span>\n<span class=\"token comment\"># When new types are added - the whole contract is changed</span>\n<span class=\"token comment\"># The check() method is modifying to be able to use caching</span>\n<span class=\"token comment\"># for individual wallet addresses</span>\ninterface SmartWalletChecker<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span> nonpayable\n\nDEPOSIT_FOR_TYPE<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>int128<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nCREATE_LOCK_TYPE<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>int128<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\nINCREASE_LOCK_AMOUNT<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>int128<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\nINCREASE_UNLOCK_TIME<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>int128<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n\n\nevent CommitOwnership<span class=\"token punctuation\">:</span>\n    admin<span class=\"token punctuation\">:</span> address\nevent ApplyOwnership<span class=\"token punctuation\">:</span>\n    admin<span class=\"token punctuation\">:</span> address\nevent Deposit<span class=\"token punctuation\">:</span>\n    provider<span class=\"token punctuation\">:</span> indexed<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n    value<span class=\"token punctuation\">:</span> uint256\n    locktime<span class=\"token punctuation\">:</span> indexed<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\n    <span class=\"token builtin\">type</span><span class=\"token punctuation\">:</span> int128\n    ts<span class=\"token punctuation\">:</span> uint256\nevent Withdraw<span class=\"token punctuation\">:</span>\n    provider<span class=\"token punctuation\">:</span> indexed<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n    value<span class=\"token punctuation\">:</span> uint256\n    ts<span class=\"token punctuation\">:</span> uint256\nevent Supply<span class=\"token punctuation\">:</span>\n    prevSupply<span class=\"token punctuation\">:</span> uint256\n    supply<span class=\"token punctuation\">:</span> uint256\n\n\nWEEK<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">86400</span>  <span class=\"token comment\"># all future times are rounded by week</span>\nMAXTIME<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token number\">365</span> <span class=\"token operator\">*</span> <span class=\"token number\">86400</span>  <span class=\"token comment\"># 4 years</span>\nMULTIPLIER<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span>\n\ntoken<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\nsupply<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\n\nlocked<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> LockedBalance<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nepoch<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\npoint_history<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>Point<span class=\"token punctuation\">[</span><span class=\"token number\">100000000000000000000000000000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># epoch -> unsigned point</span>\nuser_point_history<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> Point<span class=\"token punctuation\">[</span><span class=\"token number\">1000000000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># user -> Point[user_epoch]</span>\nuser_point_epoch<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nslope_changes<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>uint256<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># time -> signed slope change</span>\n\n<span class=\"token comment\"># Aragon's view methods for compatibility</span>\ncontroller<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\ntransfersEnabled<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>\n\nname<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nsymbol<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nversion<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndecimals<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Checker for whitelisted (smart contract) wallets which are allowed to deposit</span>\n<span class=\"token comment\"># The goal is to prevent tokenizing the escrow</span>\nfuture_smart_wallet_checker<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\nsmart_wallet_checker<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n\nadmin<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Can and will be a smart contract</span>\nfuture_admin<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>token_addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _name<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> _symbol<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> _version<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Contract constructor\n    @param token_addr `ERC20CRV` token address\n    @param _name Token name\n    @param _symbol Token symbol\n    @param _version Contract version - required for Aragon compatibility\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender\n    self<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token_addr\n    self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>blk <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>number\n    self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ts <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n    self<span class=\"token punctuation\">.</span>controller <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender\n    self<span class=\"token punctuation\">.</span>transfersEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n\n    _decimals<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> ERC20<span class=\"token punctuation\">(</span>token_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decimals<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">assert</span> _decimals <span class=\"token operator\">&lt;=</span> <span class=\"token number\">255</span>\n    self<span class=\"token punctuation\">.</span>decimals <span class=\"token operator\">=</span> _decimals\n\n    self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> _name\n    self<span class=\"token punctuation\">.</span>symbol <span class=\"token operator\">=</span> _symbol\n    self<span class=\"token punctuation\">.</span>version <span class=\"token operator\">=</span> _version\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">commit_transfer_ownership</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Transfer ownership of VotingEscrow contract to `addr`\n    @param addr Address to have ownership transferred to\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin  <span class=\"token comment\"># dev: admin only</span>\n    self<span class=\"token punctuation\">.</span>future_admin <span class=\"token operator\">=</span> addr\n    log CommitOwnership<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">apply_transfer_ownership</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Apply ownership transfer\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin  <span class=\"token comment\"># dev: admin only</span>\n    _admin<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>future_admin\n    <span class=\"token keyword\">assert</span> _admin <span class=\"token operator\">!=</span> ZERO_ADDRESS  <span class=\"token comment\"># dev: admin not set</span>\n    self<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> _admin\n    log ApplyOwnership<span class=\"token punctuation\">(</span>_admin<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">commit_smart_wallet_checker</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Set an external contract to check for approved smart contract wallets\n    @param addr Address of Smart contract checker\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin\n    self<span class=\"token punctuation\">.</span>future_smart_wallet_checker <span class=\"token operator\">=</span> addr\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">apply_smart_wallet_checker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Apply setting external contract to check approved smart contract wallets\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin\n    self<span class=\"token punctuation\">.</span>smart_wallet_checker <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>future_smart_wallet_checker\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">assert_not_contract</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Check if the call is from a whitelisted smart contract, revert if not\n    @param addr Address to be checked\n    \"\"\"</span>\n    <span class=\"token keyword\">if</span> addr <span class=\"token operator\">!=</span> tx<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">:</span>\n        checker<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>smart_wallet_checker\n        <span class=\"token keyword\">if</span> checker <span class=\"token operator\">!=</span> ZERO_ADDRESS<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> SmartWalletChecker<span class=\"token punctuation\">(</span>checker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>check<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span>\n        <span class=\"token keyword\">raise</span> <span class=\"token string\">\"Smart contract depositors not allowed\"</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_last_user_slope</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> int128<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get the most recently recorded rate of voting power decrease for `addr`\n    @param addr Address of the user wallet\n    @return Value of the slope\n    \"\"\"</span>\n    uepoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>user_point_epoch<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>user_point_history<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>uepoch<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>slope\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">user_point_history__ts</span><span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _idx<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get the timestamp for checkpoint `_idx` for `_addr`\n    @param _addr User wallet address\n    @param _idx User epoch number\n    @return Epoch time of the checkpoint\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>user_point_history<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ts\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">locked__end</span><span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get timestamp when `_addr`'s lock finishes\n    @param _addr User wallet\n    @return Epoch time of the lock end\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>end\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_checkpoint</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> old_locked<span class=\"token punctuation\">:</span> LockedBalance<span class=\"token punctuation\">,</span> new_locked<span class=\"token punctuation\">:</span> LockedBalance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Record global and per-user data to checkpoint\n    @param addr User's wallet address. No user checkpoint if 0x0\n    @param old_locked Pevious locked amount / end lock time for the user\n    @param new_locked New locked amount / end lock time for the user\n    \"\"\"</span>\n    u_old<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> empty<span class=\"token punctuation\">(</span>Point<span class=\"token punctuation\">)</span>\n    u_new<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> empty<span class=\"token punctuation\">(</span>Point<span class=\"token punctuation\">)</span>\n    old_dslope<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    new_dslope<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    _epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>epoch\n\n    <span class=\"token keyword\">if</span> addr <span class=\"token operator\">!=</span> ZERO_ADDRESS<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># Calculate slopes and biases</span>\n        <span class=\"token comment\"># Kept at zero when they have to</span>\n        <span class=\"token keyword\">if</span> old_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token keyword\">and</span> old_locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            u_old<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> old_locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">/</span> MAXTIME\n            u_old<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> u_old<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> convert<span class=\"token punctuation\">(</span>old_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">-</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token keyword\">and</span> new_locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            u_new<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> new_locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">/</span> MAXTIME\n            u_new<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> u_new<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> convert<span class=\"token punctuation\">(</span>new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">-</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># Read values of scheduled changes in the slope</span>\n        <span class=\"token comment\"># old_locked.end can be in the past and in the future</span>\n        <span class=\"token comment\"># new_locked.end can ONLY by in the FUTURE unless everything expired: than zeros</span>\n        old_dslope <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>old_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">==</span> old_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">:</span>\n                new_dslope <span class=\"token operator\">=</span> old_dslope\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                new_dslope <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>new_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span>\n\n    last_point<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> Point<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>bias<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> slope<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ts<span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> blk<span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> _epoch <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        last_point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_epoch<span class=\"token punctuation\">]</span>\n    last_checkpoint<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> last_point<span class=\"token punctuation\">.</span>ts\n    <span class=\"token comment\"># initial_last_point is used for extrapolation to calculate block number</span>\n    <span class=\"token comment\"># (approximately, for *At methods) and save them</span>\n    <span class=\"token comment\"># as we cannot figure that out exactly from inside the contract</span>\n    initial_last_point<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> last_point\n    block_slope<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># dblock/dt</span>\n    <span class=\"token keyword\">if</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">></span> last_point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">:</span>\n        block_slope <span class=\"token operator\">=</span> MULTIPLIER <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>number <span class=\"token operator\">-</span> last_point<span class=\"token punctuation\">.</span>blk<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">-</span> last_point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># If last point is already recorded in this block, slope=0</span>\n    <span class=\"token comment\"># But that's ok b/c we know the block in such case</span>\n\n    <span class=\"token comment\"># Go over weeks to fill history and calculate what the current point is</span>\n    t_i<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>last_checkpoint <span class=\"token operator\">/</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> WEEK\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># Hopefully it won't happen that this won't get used in 5 years!</span>\n        <span class=\"token comment\"># If it does, users will be able to withdraw but vote weight will be broken</span>\n        t_i <span class=\"token operator\">+=</span> WEEK\n        d_slope<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> t_i <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n            t_i <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            d_slope <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>t_i<span class=\"token punctuation\">]</span>\n        last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">-=</span> last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> convert<span class=\"token punctuation\">(</span>t_i <span class=\"token operator\">-</span> last_checkpoint<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n        last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">+=</span> d_slope\n        <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># This can happen</span>\n            last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># This cannot happen - just in case</span>\n            last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        last_checkpoint <span class=\"token operator\">=</span> t_i\n        last_point<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">=</span> t_i\n        last_point<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">=</span> initial_last_point<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">+</span> block_slope <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>t_i <span class=\"token operator\">-</span> initial_last_point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> MULTIPLIER\n        _epoch <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> t_i <span class=\"token operator\">==</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n            last_point<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>number\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_epoch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> last_point\n\n    self<span class=\"token punctuation\">.</span>epoch <span class=\"token operator\">=</span> _epoch\n    <span class=\"token comment\"># Now point_history is filled until t=now</span>\n\n    <span class=\"token keyword\">if</span> addr <span class=\"token operator\">!=</span> ZERO_ADDRESS<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># If last point was in this block, the slope change has been applied already</span>\n        <span class=\"token comment\"># But in such case we have 0 slope(s)</span>\n        last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>u_new<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">-</span> u_old<span class=\"token punctuation\">.</span>slope<span class=\"token punctuation\">)</span>\n        last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>u_new<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">-</span> u_old<span class=\"token punctuation\">.</span>bias<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token comment\"># Record the changed point into history</span>\n    self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_epoch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> last_point\n\n    <span class=\"token keyword\">if</span> addr <span class=\"token operator\">!=</span> ZERO_ADDRESS<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># Schedule the slope changes (slope is going down)</span>\n        <span class=\"token comment\"># We subtract new_user_slope from [new_locked.end]</span>\n        <span class=\"token comment\"># and add old_user_slope to [old_locked.end]</span>\n        <span class=\"token keyword\">if</span> old_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># old_dslope was &lt;something> - u_old.slope, so we cancel that</span>\n            old_dslope <span class=\"token operator\">+=</span> u_old<span class=\"token punctuation\">.</span>slope\n            <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">==</span> old_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">:</span>\n                old_dslope <span class=\"token operator\">-=</span> u_new<span class=\"token punctuation\">.</span>slope  <span class=\"token comment\"># It was a new deposit, not extension</span>\n            self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>old_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> old_dslope\n\n        <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> old_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">:</span>\n                new_dslope <span class=\"token operator\">-=</span> u_new<span class=\"token punctuation\">.</span>slope  <span class=\"token comment\"># old slope disappeared at this point</span>\n                self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>new_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> new_dslope\n            <span class=\"token comment\"># else: we recorded it already in old_dslope</span>\n\n        <span class=\"token comment\"># Now handle user history</span>\n        user_epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>user_point_epoch<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\n        self<span class=\"token punctuation\">.</span>user_point_epoch<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user_epoch\n        u_new<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n        u_new<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>number\n        self<span class=\"token punctuation\">.</span>user_point_history<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user_epoch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> u_new\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_deposit_for</span><span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> unlock_time<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> locked_balance<span class=\"token punctuation\">:</span> LockedBalance<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Deposit and lock tokens for a user\n    @param _addr User's wallet address\n    @param _value Amount to deposit\n    @param unlock_time New time when to unlock the tokens, or 0 if unchanged\n    @param locked_balance Previous locked amount / timestamp\n    \"\"\"</span>\n    _locked<span class=\"token punctuation\">:</span> LockedBalance <span class=\"token operator\">=</span> locked_balance\n    supply_before<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>supply\n\n    self<span class=\"token punctuation\">.</span>supply <span class=\"token operator\">=</span> supply_before <span class=\"token operator\">+</span> _value\n    old_locked<span class=\"token punctuation\">:</span> LockedBalance <span class=\"token operator\">=</span> _locked\n    <span class=\"token comment\"># Adding to existing lock, or if a lock is expired - creating a new one</span>\n    _locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">+=</span> convert<span class=\"token punctuation\">(</span>_value<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> unlock_time <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        _locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">=</span> unlock_time\n    self<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _locked\n\n    <span class=\"token comment\"># Possibilities:</span>\n    <span class=\"token comment\"># Both old_locked.end could be current or expired (>/&lt; block.timestamp)</span>\n    <span class=\"token comment\"># value == 0 (extend lock) or value > 0 (add to lock or extend lock)</span>\n    <span class=\"token comment\"># _locked.end > block.timestamp (always)</span>\n    self<span class=\"token punctuation\">.</span>_checkpoint<span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">,</span> old_locked<span class=\"token punctuation\">,</span> _locked<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> _value <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">assert</span> ERC20<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>transferFrom<span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n\n    log Deposit<span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">,</span> _locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span>\n    log Supply<span class=\"token punctuation\">(</span>supply_before<span class=\"token punctuation\">,</span> supply_before <span class=\"token operator\">+</span> _value<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">checkpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Record global data to checkpoint\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>_checkpoint<span class=\"token punctuation\">(</span>ZERO_ADDRESS<span class=\"token punctuation\">,</span> empty<span class=\"token punctuation\">(</span>LockedBalance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> empty<span class=\"token punctuation\">(</span>LockedBalance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@nonreentrant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lock'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">deposit_for</span><span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Deposit `_value` tokens for `_addr` and add to the lock\n    @dev Anyone (even a smart contract) can deposit for someone else, but\n         cannot extend their locktime and deposit for a brand new user\n    @param _addr User's wallet address\n    @param _value Amount to add to user's lock\n    \"\"\"</span>\n    _locked<span class=\"token punctuation\">:</span> LockedBalance <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">assert</span> _value <span class=\"token operator\">></span> <span class=\"token number\">0</span>  <span class=\"token comment\"># dev: need non-zero value</span>\n    <span class=\"token keyword\">assert</span> _locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"No existing lock found\"</span>\n    <span class=\"token keyword\">assert</span> _locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cannot add to expired lock. Withdraw\"</span>\n\n    self<span class=\"token punctuation\">.</span>_deposit_for<span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> DEPOSIT_FOR_TYPE<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@nonreentrant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lock'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">create_lock</span><span class=\"token punctuation\">(</span>_value<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> _unlock_time<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Deposit `_value` tokens for `msg.sender` and lock until `_unlock_time`\n    @param _value Amount to deposit\n    @param _unlock_time Epoch time when tokens unlock, rounded down to whole weeks\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>assert_not_contract<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span>\n    unlock_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_unlock_time <span class=\"token operator\">/</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> WEEK  <span class=\"token comment\"># Locktime is rounded down to weeks</span>\n    _locked<span class=\"token punctuation\">:</span> LockedBalance <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">assert</span> _value <span class=\"token operator\">></span> <span class=\"token number\">0</span>  <span class=\"token comment\"># dev: need non-zero value</span>\n    <span class=\"token keyword\">assert</span> _locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Withdraw old tokens first\"</span>\n    <span class=\"token keyword\">assert</span> unlock_time <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can only lock until time in the future\"</span>\n    <span class=\"token keyword\">assert</span> unlock_time <span class=\"token operator\">&lt;=</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">+</span> MAXTIME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Voting lock can be 4 years max\"</span>\n\n    self<span class=\"token punctuation\">.</span>_deposit_for<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">,</span> unlock_time<span class=\"token punctuation\">,</span> _locked<span class=\"token punctuation\">,</span> CREATE_LOCK_TYPE<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@nonreentrant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lock'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">increase_amount</span><span class=\"token punctuation\">(</span>_value<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Deposit `_value` additional tokens for `msg.sender`\n            without modifying the unlock time\n    @param _value Amount of tokens to deposit and add to the lock\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>assert_not_contract<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span>\n    _locked<span class=\"token punctuation\">:</span> LockedBalance <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">assert</span> _value <span class=\"token operator\">></span> <span class=\"token number\">0</span>  <span class=\"token comment\"># dev: need non-zero value</span>\n    <span class=\"token keyword\">assert</span> _locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"No existing lock found\"</span>\n    <span class=\"token keyword\">assert</span> _locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cannot add to expired lock. Withdraw\"</span>\n\n    self<span class=\"token punctuation\">.</span>_deposit_for<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _locked<span class=\"token punctuation\">,</span> INCREASE_LOCK_AMOUNT<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@nonreentrant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lock'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">increase_unlock_time</span><span class=\"token punctuation\">(</span>_unlock_time<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Extend the unlock time for `msg.sender` to `_unlock_time`\n    @param _unlock_time New epoch time for unlocking\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>assert_not_contract<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span>\n    _locked<span class=\"token punctuation\">:</span> LockedBalance <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span>\n    unlock_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_unlock_time <span class=\"token operator\">/</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> WEEK  <span class=\"token comment\"># Locktime is rounded down to weeks</span>\n\n    <span class=\"token keyword\">assert</span> _locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock expired\"</span>\n    <span class=\"token keyword\">assert</span> _locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Nothing is locked\"</span>\n    <span class=\"token keyword\">assert</span> unlock_time <span class=\"token operator\">></span> _locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can only increase lock duration\"</span>\n    <span class=\"token keyword\">assert</span> unlock_time <span class=\"token operator\">&lt;=</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">+</span> MAXTIME<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Voting lock can be 4 years max\"</span>\n\n    self<span class=\"token punctuation\">.</span>_deposit_for<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> unlock_time<span class=\"token punctuation\">,</span> _locked<span class=\"token punctuation\">,</span> INCREASE_UNLOCK_TIME<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@nonreentrant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lock'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Withdraw all tokens for `msg.sender`\n    @dev Only possible if the lock has expired\n    \"\"\"</span>\n    _locked<span class=\"token punctuation\">:</span> LockedBalance <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">assert</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">>=</span> _locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">,</span> <span class=\"token string\">\"The lock didn't expire\"</span>\n    value<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> convert<span class=\"token punctuation\">(</span>_locked<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">)</span>\n\n    old_locked<span class=\"token punctuation\">:</span> LockedBalance <span class=\"token operator\">=</span> _locked\n    _locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    _locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    self<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _locked\n    supply_before<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>supply\n    self<span class=\"token punctuation\">.</span>supply <span class=\"token operator\">=</span> supply_before <span class=\"token operator\">-</span> value\n\n    <span class=\"token comment\"># old_locked can have either expired &lt;= timestamp or zero end</span>\n    <span class=\"token comment\"># _locked has only 0 end</span>\n    <span class=\"token comment\"># Both can have >= 0 amount</span>\n    self<span class=\"token punctuation\">.</span>_checkpoint<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> old_locked<span class=\"token punctuation\">,</span> _locked<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">assert</span> ERC20<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>transfer<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n\n    log Withdraw<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span>\n    log Supply<span class=\"token punctuation\">(</span>supply_before<span class=\"token punctuation\">,</span> supply_before <span class=\"token operator\">-</span> value<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># The following ERC20/minime-compatible methods are not real balanceOf and supply!</span>\n<span class=\"token comment\"># They measure the weights for the purpose of voting, so they don't represent</span>\n<span class=\"token comment\"># real coins.</span>\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">find_block_epoch</span><span class=\"token punctuation\">(</span>_block<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> max_epoch<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Binary search to estimate timestamp for block number\n    @param _block Block to find\n    @param max_epoch Don't go beyond this epoch\n    @return Approximate timestamp for block\n    \"\"\"</span>\n    <span class=\"token comment\"># Binary search</span>\n    _min<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    _max<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> max_epoch\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Will be always enough for 128-bit numbers</span>\n        <span class=\"token keyword\">if</span> _min <span class=\"token operator\">>=</span> _max<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        _mid<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_min <span class=\"token operator\">+</span> _max <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>blk <span class=\"token operator\">&lt;=</span> _block<span class=\"token punctuation\">:</span>\n            _min <span class=\"token operator\">=</span> _mid\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            _max <span class=\"token operator\">=</span> _mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> _min\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _t<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get the current voting power for `msg.sender`\n    @dev Adheres to the ERC20 `balanceOf` interface for Aragon compatibility\n    @param addr User wallet address\n    @param _t Epoch time to return voting power at\n    @return User voting power\n    \"\"\"</span>\n    _epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>user_point_epoch<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> _epoch <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        last_point<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>user_point_history<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_epoch<span class=\"token punctuation\">]</span>\n        last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">-=</span> last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> convert<span class=\"token punctuation\">(</span>_t <span class=\"token operator\">-</span> last_point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">return</span> convert<span class=\"token punctuation\">(</span>last_point<span class=\"token punctuation\">.</span>bias<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">balanceOfAt</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _block<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Measure voting power of `addr` at block height `_block`\n    @dev Adheres to MiniMe `balanceOfAt` interface: https://github.com/Giveth/minime\n    @param addr User's wallet address\n    @param _block Block to calculate the voting power at\n    @return Voting power\n    \"\"\"</span>\n    <span class=\"token comment\"># Copying and pasting totalSupply code because Vyper cannot pass by</span>\n    <span class=\"token comment\"># reference yet</span>\n    <span class=\"token keyword\">assert</span> _block <span class=\"token operator\">&lt;=</span> block<span class=\"token punctuation\">.</span>number\n\n    <span class=\"token comment\"># Binary search</span>\n    _min<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    _max<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>user_point_epoch<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Will be always enough for 128-bit numbers</span>\n        <span class=\"token keyword\">if</span> _min <span class=\"token operator\">>=</span> _max<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        _mid<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_min <span class=\"token operator\">+</span> _max <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>user_point_history<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>blk <span class=\"token operator\">&lt;=</span> _block<span class=\"token punctuation\">:</span>\n            _min <span class=\"token operator\">=</span> _mid\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            _max <span class=\"token operator\">=</span> _mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n    upoint<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>user_point_history<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_min<span class=\"token punctuation\">]</span>\n\n    max_epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>epoch\n    _epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>find_block_epoch<span class=\"token punctuation\">(</span>_block<span class=\"token punctuation\">,</span> max_epoch<span class=\"token punctuation\">)</span>\n    point_0<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_epoch<span class=\"token punctuation\">]</span>\n    d_block<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    d_t<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">if</span> _epoch <span class=\"token operator\">&lt;</span> max_epoch<span class=\"token punctuation\">:</span>\n        point_1<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_epoch <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        d_block <span class=\"token operator\">=</span> point_1<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">-</span> point_0<span class=\"token punctuation\">.</span>blk\n        d_t <span class=\"token operator\">=</span> point_1<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">-</span> point_0<span class=\"token punctuation\">.</span>ts\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        d_block <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>number <span class=\"token operator\">-</span> point_0<span class=\"token punctuation\">.</span>blk\n        d_t <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">-</span> point_0<span class=\"token punctuation\">.</span>ts\n    block_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> point_0<span class=\"token punctuation\">.</span>ts\n    <span class=\"token keyword\">if</span> d_block <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        block_time <span class=\"token operator\">+=</span> d_t <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>_block <span class=\"token operator\">-</span> point_0<span class=\"token punctuation\">.</span>blk<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> d_block\n\n    upoint<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">-=</span> upoint<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> convert<span class=\"token punctuation\">(</span>block_time <span class=\"token operator\">-</span> upoint<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> upoint<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> convert<span class=\"token punctuation\">(</span>upoint<span class=\"token punctuation\">.</span>bias<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">supply_at</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">:</span> Point<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Calculate total voting power at some point in the past\n    @param point The point (bias/slope) to start search from\n    @param t Time to calculate the total voting power at\n    @return Total voting power at that time\n    \"\"\"</span>\n    last_point<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> point\n    t_i<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>last_point<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">/</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> WEEK\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        t_i <span class=\"token operator\">+=</span> WEEK\n        d_slope<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> t_i <span class=\"token operator\">></span> t<span class=\"token punctuation\">:</span>\n            t_i <span class=\"token operator\">=</span> t\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            d_slope <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>t_i<span class=\"token punctuation\">]</span>\n        last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">-=</span> last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> convert<span class=\"token punctuation\">(</span>t_i <span class=\"token operator\">-</span> last_point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> t_i <span class=\"token operator\">==</span> t<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">+=</span> d_slope\n        last_point<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">=</span> t_i\n\n    <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">return</span> convert<span class=\"token punctuation\">(</span>last_point<span class=\"token punctuation\">.</span>bias<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Calculate total voting power\n    @dev Adheres to the ERC20 `totalSupply` interface for Aragon compatibility\n    @return Total voting power\n    \"\"\"</span>\n    _epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>epoch\n    last_point<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_epoch<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>supply_at<span class=\"token punctuation\">(</span>last_point<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">totalSupplyAt</span><span class=\"token punctuation\">(</span>_block<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Calculate total voting power at some point in the past\n    @param _block Block to calculate the total voting power at\n    @return Total voting power at `_block`\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> _block <span class=\"token operator\">&lt;=</span> block<span class=\"token punctuation\">.</span>number\n    _epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>epoch\n    target_epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>find_block_epoch<span class=\"token punctuation\">(</span>_block<span class=\"token punctuation\">,</span> _epoch<span class=\"token punctuation\">)</span>\n\n    point<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>target_epoch<span class=\"token punctuation\">]</span>\n    dt<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">if</span> target_epoch <span class=\"token operator\">&lt;</span> _epoch<span class=\"token punctuation\">:</span>\n        point_next<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>target_epoch <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> point<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">!=</span> point_next<span class=\"token punctuation\">.</span>blk<span class=\"token punctuation\">:</span>\n            dt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_block <span class=\"token operator\">-</span> point<span class=\"token punctuation\">.</span>blk<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>point_next<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">-</span> point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>point_next<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">-</span> point<span class=\"token punctuation\">.</span>blk<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> point<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">!=</span> block<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">:</span>\n            dt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_block <span class=\"token operator\">-</span> point<span class=\"token punctuation\">.</span>blk<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">-</span> point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>number <span class=\"token operator\">-</span> point<span class=\"token punctuation\">.</span>blk<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># Now dt contains info on how far are we beyond point</span>\n\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>supply_at<span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">+</span> dt<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># Dummy methods for compatibility with Aragon</span>\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">changeController</span><span class=\"token punctuation\">(</span>_newController<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @dev Dummy method required for Aragon compatibility\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>controller\n    self<span class=\"token punctuation\">.</span>controller <span class=\"token operator\">=</span> _newController<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-1\"><a href=\"#Analyze-1\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>deposit_for，create_lock，increase_amount，increase_unlock_time，withdraw函数分别是存，创建（结束上一次lock并取出token），增加，延长，取款函数，核心函数为：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_deposit_for</span><span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> unlock_time<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> locked_balance<span class=\"token punctuation\">:</span> LockedBalance<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Deposit and lock tokens for a user\n    @param _addr User's wallet address\n    @param _value Amount to deposit\n    @param unlock_time New time when to unlock the tokens, or 0 if unchanged\n    @param locked_balance Previous locked amount / timestamp\n    \"\"\"</span>\n    _locked<span class=\"token punctuation\">:</span> LockedBalance <span class=\"token operator\">=</span> locked_balance\n    supply_before<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>supply\n\n    self<span class=\"token punctuation\">.</span>supply <span class=\"token operator\">=</span> supply_before <span class=\"token operator\">+</span> _value\n    old_locked<span class=\"token punctuation\">:</span> LockedBalance <span class=\"token operator\">=</span> _locked\n    <span class=\"token comment\"># Adding to existing lock, or if a lock is expired - creating a new one</span>\n    _locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">+=</span> convert<span class=\"token punctuation\">(</span>_value<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> unlock_time <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        _locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">=</span> unlock_time\n    self<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _locked\n\n    <span class=\"token comment\"># Possibilities:</span>\n    <span class=\"token comment\"># Both old_locked.end could be current or expired (>/&lt; block.timestamp)</span>\n    <span class=\"token comment\"># value == 0 (extend lock) or value > 0 (add to lock or extend lock)</span>\n    <span class=\"token comment\"># _locked.end > block.timestamp (always)</span>\n    self<span class=\"token punctuation\">.</span>_checkpoint<span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">,</span> old_locked<span class=\"token punctuation\">,</span> _locked<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> _value <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">assert</span> ERC20<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>transferFrom<span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n\n    log Deposit<span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">,</span> _locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span>\n    log Supply<span class=\"token punctuation\">(</span>supply_before<span class=\"token punctuation\">,</span> supply_before <span class=\"token operator\">+</span> _value<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>更新合约的supply以及addr对应的locked amount以及unlock tome同时转账对应金额到合约内，每次被调用都会触发_checkpoint函数：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">_checkpoint</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> old_locked<span class=\"token punctuation\">:</span> LockedBalance<span class=\"token punctuation\">,</span> new_locked<span class=\"token punctuation\">:</span> LockedBalance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Record global and per-user data to checkpoint\n    @param addr User's wallet address. No user checkpoint if 0x0\n    @param old_locked Pevious locked amount / end lock time for the user\n    @param new_locked New locked amount / end lock time for the user\n    \"\"\"</span>\n    u_old<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> empty<span class=\"token punctuation\">(</span>Point<span class=\"token punctuation\">)</span>\n    u_new<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> empty<span class=\"token punctuation\">(</span>Point<span class=\"token punctuation\">)</span>\n    old_dslope<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    new_dslope<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    _epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>epoch\n\n    <span class=\"token keyword\">if</span> addr <span class=\"token operator\">!=</span> ZERO_ADDRESS<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># Calculate slopes and biases</span>\n        <span class=\"token comment\"># Kept at zero when they have to</span>\n        <span class=\"token keyword\">if</span> old_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token keyword\">and</span> old_locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            u_old<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> old_locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">/</span> MAXTIME\n            u_old<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> u_old<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> convert<span class=\"token punctuation\">(</span>old_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">-</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token keyword\">and</span> new_locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            u_new<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> new_locked<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">/</span> MAXTIME\n            u_new<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> u_new<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> convert<span class=\"token punctuation\">(</span>new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">-</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># Read values of scheduled changes in the slope</span>\n        <span class=\"token comment\"># old_locked.end can be in the past and in the future</span>\n        <span class=\"token comment\"># new_locked.end can ONLY by in the FUTURE unless everything expired: than zeros</span>\n        old_dslope <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>old_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">==</span> old_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">:</span>\n                new_dslope <span class=\"token operator\">=</span> old_dslope\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                new_dslope <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>new_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span>\n\n    last_point<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> Point<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>bias<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> slope<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ts<span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> blk<span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> _epoch <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        last_point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_epoch<span class=\"token punctuation\">]</span>\n    last_checkpoint<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> last_point<span class=\"token punctuation\">.</span>ts\n    <span class=\"token comment\"># initial_last_point is used for extrapolation to calculate block number</span>\n    <span class=\"token comment\"># (approximately, for *At methods) and save them</span>\n    <span class=\"token comment\"># as we cannot figure that out exactly from inside the contract</span>\n    initial_last_point<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> last_point\n    block_slope<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># dblock/dt</span>\n    <span class=\"token keyword\">if</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">></span> last_point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">:</span>\n        block_slope <span class=\"token operator\">=</span> MULTIPLIER <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>number <span class=\"token operator\">-</span> last_point<span class=\"token punctuation\">.</span>blk<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">-</span> last_point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># If last point is already recorded in this block, slope=0</span>\n    <span class=\"token comment\"># But that's ok b/c we know the block in such case</span>\n\n    <span class=\"token comment\"># Go over weeks to fill history and calculate what the current point is</span>\n    t_i<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>last_checkpoint <span class=\"token operator\">/</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> WEEK\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># Hopefully it won't happen that this won't get used in 5 years!</span>\n        <span class=\"token comment\"># If it does, users will be able to withdraw but vote weight will be broken</span>\n        t_i <span class=\"token operator\">+=</span> WEEK\n        d_slope<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> t_i <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n            t_i <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            d_slope <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>t_i<span class=\"token punctuation\">]</span>\n        last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">-=</span> last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> convert<span class=\"token punctuation\">(</span>t_i <span class=\"token operator\">-</span> last_checkpoint<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n        last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">+=</span> d_slope\n        <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># This can happen</span>\n            last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># This cannot happen - just in case</span>\n            last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        last_checkpoint <span class=\"token operator\">=</span> t_i\n        last_point<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">=</span> t_i\n        last_point<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">=</span> initial_last_point<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">+</span> block_slope <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>t_i <span class=\"token operator\">-</span> initial_last_point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> MULTIPLIER\n        _epoch <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">if</span> t_i <span class=\"token operator\">==</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n            last_point<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>number\n            <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_epoch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> last_point\n\n    self<span class=\"token punctuation\">.</span>epoch <span class=\"token operator\">=</span> _epoch\n    <span class=\"token comment\"># Now point_history is filled until t=now</span>\n\n    <span class=\"token keyword\">if</span> addr <span class=\"token operator\">!=</span> ZERO_ADDRESS<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># If last point was in this block, the slope change has been applied already</span>\n        <span class=\"token comment\"># But in such case we have 0 slope(s)</span>\n        last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>u_new<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">-</span> u_old<span class=\"token punctuation\">.</span>slope<span class=\"token punctuation\">)</span>\n        last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>u_new<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">-</span> u_old<span class=\"token punctuation\">.</span>bias<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token comment\"># Record the changed point into history</span>\n    self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_epoch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> last_point\n\n    <span class=\"token keyword\">if</span> addr <span class=\"token operator\">!=</span> ZERO_ADDRESS<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># Schedule the slope changes (slope is going down)</span>\n        <span class=\"token comment\"># We subtract new_user_slope from [new_locked.end]</span>\n        <span class=\"token comment\"># and add old_user_slope to [old_locked.end]</span>\n        <span class=\"token keyword\">if</span> old_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># old_dslope was &lt;something> - u_old.slope, so we cancel that</span>\n            old_dslope <span class=\"token operator\">+=</span> u_old<span class=\"token punctuation\">.</span>slope\n            <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">==</span> old_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">:</span>\n                old_dslope <span class=\"token operator\">-=</span> u_new<span class=\"token punctuation\">.</span>slope  <span class=\"token comment\"># It was a new deposit, not extension</span>\n            self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>old_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> old_dslope\n\n        <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> new_locked<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> old_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">:</span>\n                new_dslope <span class=\"token operator\">-=</span> u_new<span class=\"token punctuation\">.</span>slope  <span class=\"token comment\"># old slope disappeared at this point</span>\n                self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>new_locked<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> new_dslope\n            <span class=\"token comment\"># else: we recorded it already in old_dslope</span>\n\n        <span class=\"token comment\"># Now handle user history</span>\n        user_epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>user_point_epoch<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\n        self<span class=\"token punctuation\">.</span>user_point_epoch<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> user_epoch\n        u_new<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n        u_new<span class=\"token punctuation\">.</span>blk <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>number\n        self<span class=\"token punctuation\">.</span>user_point_history<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>user_epoch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> u_new\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>该函数用于将全局和每个用户数据记录到point每一次选择语句都注释了进行的操作以及目的，逻辑比较复杂，需要仔细分析</p>\n<p>find_block_epoch函数使用折半查找检索近似block对应的point，进而在balanceAt以及totalsupplyAt函数中估计block对应的时间戳</p>\n<p>balanceOf计算在某一时间点时候对应的vote weight，balanceOf计算在对应block下的vote weight</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207271912397.png\"></p>\n<p>case 1</p>\n<ul>\n<li><p>_epoch&lt;max_epoch</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207251534214.png\"></p>\n</li>\n</ul>\n<p>case 2</p>\n<ul>\n<li><p>_epoch&gt;&#x3D;max_epoch</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207251548868.png\"></p>\n</li>\n</ul>\n<p>totalsupply计算在某一时间点时候对应的total vote weight，totalsupplyAt计算在对应block下的total vote weight</p>\n<p>其辅助函数为：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">find_block_epoch</span><span class=\"token punctuation\">(</span>_block<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> max_epoch<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Binary search to estimate timestamp for block number\n    @param _block Block to find\n    @param max_epoch Don't go beyond this epoch\n    @return Approximate timestamp for block\n    \"\"\"</span>\n    <span class=\"token comment\"># Binary search</span>\n    _min<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    _max<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> max_epoch\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># Will be always enough for 128-bit numbers</span>\n        <span class=\"token keyword\">if</span> _min <span class=\"token operator\">>=</span> _max<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        _mid<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_min <span class=\"token operator\">+</span> _max <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>point_history<span class=\"token punctuation\">[</span>_mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>blk <span class=\"token operator\">&lt;=</span> _block<span class=\"token punctuation\">:</span>\n            _min <span class=\"token operator\">=</span> _mid\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            _max <span class=\"token operator\">=</span> _mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> _min<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>case 1</p>\n<ul>\n<li><p>target_epoch &lt; _epoch</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207251705283.png\"></p>\n</li>\n</ul>\n<p>case 2</p>\n<ul>\n<li><p>target_epoch &gt;&#x3D; _epoch</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207251702586.png\"></p>\n</li>\n</ul>\n<p>其核心函数为：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">supply_at</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">:</span> Point<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Calculate total voting power at some point in the past\n    @param point The point (bias/slope) to start search from\n    @param t Time to calculate the total voting power at\n    @return Total voting power at that time\n    \"\"\"</span>\n    last_point<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> point\n    t_i<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>last_point<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">/</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> WEEK\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        t_i <span class=\"token operator\">+=</span> WEEK\n        d_slope<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">if</span> t_i <span class=\"token operator\">></span> t<span class=\"token punctuation\">:</span>\n            t_i <span class=\"token operator\">=</span> t\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            d_slope <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>slope_changes<span class=\"token punctuation\">[</span>t_i<span class=\"token punctuation\">]</span>\n        last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">-=</span> last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> convert<span class=\"token punctuation\">(</span>t_i <span class=\"token operator\">-</span> last_point<span class=\"token punctuation\">.</span>ts<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> t_i <span class=\"token operator\">==</span> t<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        last_point<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">+=</span> d_slope\n        last_point<span class=\"token punctuation\">.</span>ts <span class=\"token operator\">=</span> t_i\n\n    <span class=\"token keyword\">if</span> last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        last_point<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">return</span> convert<span class=\"token punctuation\">(</span>last_point<span class=\"token punctuation\">.</span>bias<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>取最近一次point，对应ts四舍五入为周，遍历所有WEEK，以最新一次的bias累加计算</p>\n<h1 id=\"Gauge-Controller\"><a href=\"#Gauge-Controller\" class=\"headerlink\" title=\"Gauge Controller\"></a>Gauge Controller</h1><h2 id=\"Code-2\"><a href=\"#Code-2\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># @version 0.2.4</span>\n\n<span class=\"token triple-quoted-string string\">\"\"\"\n@title Gauge Controller\n@author Curve Finance\n@license MIT\n@notice Controls liquidity gauges and the issuance of coins through the gauges\n\"\"\"</span>\n\n<span class=\"token comment\"># 7 * 86400 seconds - all future times are rounded by week</span>\nWEEK<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">604800</span>\n\n<span class=\"token comment\"># Cannot change weight votes more often than once in 10 days</span>\nWEIGHT_VOTE_DELAY<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">86400</span>\n\n\nstruct Point<span class=\"token punctuation\">:</span>\n    bias<span class=\"token punctuation\">:</span> uint256\n    slope<span class=\"token punctuation\">:</span> uint256\n\nstruct VotedSlope<span class=\"token punctuation\">:</span>\n    slope<span class=\"token punctuation\">:</span> uint256\n    power<span class=\"token punctuation\">:</span> uint256\n    end<span class=\"token punctuation\">:</span> uint256\n\n\ninterface VotingEscrow<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_last_user_slope</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> int128<span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">locked__end</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span> view\n\n\nevent CommitOwnership<span class=\"token punctuation\">:</span>\n    admin<span class=\"token punctuation\">:</span> address\n\nevent ApplyOwnership<span class=\"token punctuation\">:</span>\n    admin<span class=\"token punctuation\">:</span> address\n\nevent AddType<span class=\"token punctuation\">:</span>\n    name<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span>\n    type_id<span class=\"token punctuation\">:</span> int128\n\nevent NewTypeWeight<span class=\"token punctuation\">:</span>\n    type_id<span class=\"token punctuation\">:</span> int128\n    time<span class=\"token punctuation\">:</span> uint256\n    weight<span class=\"token punctuation\">:</span> uint256\n    total_weight<span class=\"token punctuation\">:</span> uint256\n\nevent NewGaugeWeight<span class=\"token punctuation\">:</span>\n    gauge_address<span class=\"token punctuation\">:</span> address\n    time<span class=\"token punctuation\">:</span> uint256\n    weight<span class=\"token punctuation\">:</span> uint256\n    total_weight<span class=\"token punctuation\">:</span> uint256\n\nevent VoteForGauge<span class=\"token punctuation\">:</span>\n    time<span class=\"token punctuation\">:</span> uint256\n    user<span class=\"token punctuation\">:</span> address\n    gauge_addr<span class=\"token punctuation\">:</span> address\n    weight<span class=\"token punctuation\">:</span> uint256\n\nevent NewGauge<span class=\"token punctuation\">:</span>\n    addr<span class=\"token punctuation\">:</span> address\n    gauge_type<span class=\"token punctuation\">:</span> int128\n    weight<span class=\"token punctuation\">:</span> uint256\n\n\nMULTIPLIER<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span>\n\nadmin<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Can and will be a smart contract</span>\nfuture_admin<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Can and will be a smart contract</span>\n\ntoken<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># CRV token</span>\nvoting_escrow<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Voting escrow</span>\n\n<span class=\"token comment\"># Gauge parameters</span>\n<span class=\"token comment\"># All numbers are \"fixed point\" on the basis of 1e18</span>\nn_gauge_types<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>int128<span class=\"token punctuation\">)</span>\nn_gauges<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>int128<span class=\"token punctuation\">)</span>\ngauge_type_names<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>int128<span class=\"token punctuation\">,</span> String<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Needed for enumeration</span>\ngauges<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">[</span><span class=\"token number\">1000000000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># we increment values by 1 prior to storing them here so we can rely on a value</span>\n<span class=\"token comment\"># of zero as meaning the gauge has not been set</span>\ngauge_types_<span class=\"token punctuation\">:</span> HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> int128<span class=\"token punctuation\">]</span>\n\nvote_user_slopes<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> VotedSlope<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># user -> gauge_addr -> VotedSlope</span>\nvote_user_power<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Total vote power used by user</span>\nlast_user_vote<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Last user vote's timestamp for each gauge address</span>\n\n<span class=\"token comment\"># Past and scheduled points for gauge weight, sum of weights per type, total weight</span>\n<span class=\"token comment\"># Point is for bias+slope</span>\n<span class=\"token comment\"># changes_* are for changes in slope</span>\n<span class=\"token comment\"># time_* are for the last change timestamp</span>\n<span class=\"token comment\"># timestamps are rounded to whole weeks</span>\n\npoints_weight<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> HashMap<span class=\"token punctuation\">[</span>uint256<span class=\"token punctuation\">,</span> Point<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># gauge_addr -> time -> Point</span>\nchanges_weight<span class=\"token punctuation\">:</span> HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> HashMap<span class=\"token punctuation\">[</span>uint256<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># gauge_addr -> time -> slope</span>\ntime_weight<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># gauge_addr -> last scheduled time (next week)</span>\n\npoints_sum<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>int128<span class=\"token punctuation\">,</span> HashMap<span class=\"token punctuation\">[</span>uint256<span class=\"token punctuation\">,</span> Point<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># type_id -> time -> Point</span>\nchanges_sum<span class=\"token punctuation\">:</span> HashMap<span class=\"token punctuation\">[</span>int128<span class=\"token punctuation\">,</span> HashMap<span class=\"token punctuation\">[</span>uint256<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># type_id -> time -> slope</span>\ntime_sum<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">[</span><span class=\"token number\">1000000000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># type_id -> last scheduled time (next week)</span>\n\npoints_total<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>uint256<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># time -> total weight</span>\ntime_total<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># last scheduled time</span>\n\npoints_type_weight<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>int128<span class=\"token punctuation\">,</span> HashMap<span class=\"token punctuation\">[</span>uint256<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># type_id -> time -> type weight</span>\ntime_type_weight<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">[</span><span class=\"token number\">1000000000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># type_id -> last scheduled time (next week)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _voting_escrow<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Contract constructor\n    @param _token `ERC20CRV` contract address\n    @param _voting_escrow `VotingEscrow` contract address\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> _token <span class=\"token operator\">!=</span> ZERO_ADDRESS\n    <span class=\"token keyword\">assert</span> _voting_escrow <span class=\"token operator\">!=</span> ZERO_ADDRESS\n\n    self<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender\n    self<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> _token\n    self<span class=\"token punctuation\">.</span>voting_escrow <span class=\"token operator\">=</span> _voting_escrow\n    self<span class=\"token punctuation\">.</span>time_total <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">commit_transfer_ownership</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Transfer ownership of GaugeController to `addr`\n    @param addr Address to have ownership transferred to\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin  <span class=\"token comment\"># dev: admin only</span>\n    self<span class=\"token punctuation\">.</span>future_admin <span class=\"token operator\">=</span> addr\n    log CommitOwnership<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">apply_transfer_ownership</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Apply pending ownership transfer\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin  <span class=\"token comment\"># dev: admin only</span>\n    _admin<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>future_admin\n    <span class=\"token keyword\">assert</span> _admin <span class=\"token operator\">!=</span> ZERO_ADDRESS  <span class=\"token comment\"># dev: admin not set</span>\n    self<span class=\"token punctuation\">.</span>admin <span class=\"token operator\">=</span> _admin\n    log ApplyOwnership<span class=\"token punctuation\">(</span>_admin<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">gauge_types</span><span class=\"token punctuation\">(</span>_addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> int128<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get gauge type for address\n    @param _addr Gauge address\n    @return Gauge type id\n    \"\"\"</span>\n    gauge_type<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>gauge_types_<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">assert</span> gauge_type <span class=\"token operator\">!=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">return</span> gauge_type <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_get_type_weight</span><span class=\"token punctuation\">(</span>gauge_type<span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Fill historic type weights week-over-week for missed checkins\n            and return the type weight for the future week\n    @param gauge_type Gauge type id\n    @return Type weight\n    \"\"\"</span>\n    t<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>time_type_weight<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        w<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_type_weight<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            t <span class=\"token operator\">+=</span> WEEK\n            self<span class=\"token punctuation\">.</span>points_type_weight<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> w\n            <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>time_type_weight<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t\n        <span class=\"token keyword\">return</span> w\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_get_sum</span><span class=\"token punctuation\">(</span>gauge_type<span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Fill sum of gauge weights for the same type week-over-week for\n            missed checkins and return the sum for the future week\n    @param gauge_type Gauge type id\n    @return Sum of weights\n    \"\"\"</span>\n    t<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>time_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        pt<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            t <span class=\"token operator\">+=</span> WEEK\n            d_bias<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> pt<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> WEEK\n            <span class=\"token keyword\">if</span> pt<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">></span> d_bias<span class=\"token punctuation\">:</span>\n                pt<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">-=</span> d_bias\n                d_slope<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>changes_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n                pt<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">-=</span> d_slope\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                pt<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                pt<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            self<span class=\"token punctuation\">.</span>points_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pt\n            <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>time_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t\n        <span class=\"token keyword\">return</span> pt<span class=\"token punctuation\">.</span>bias\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_get_total</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Fill historic total weights week-over-week for missed checkins\n            and return the total for the future week\n    @return Total weight\n    \"\"\"</span>\n    t<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>time_total\n    _n_gauge_types<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>n_gauge_types\n    <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># If we have already checkpointed - still need to change the value</span>\n        t <span class=\"token operator\">-=</span> WEEK\n    pt<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_total<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> gauge_type <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> gauge_type <span class=\"token operator\">==</span> _n_gauge_types<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        self<span class=\"token punctuation\">.</span>_get_sum<span class=\"token punctuation\">(</span>gauge_type<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>_get_type_weight<span class=\"token punctuation\">(</span>gauge_type<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n        t <span class=\"token operator\">+=</span> WEEK\n        pt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token comment\"># Scales as n_types * n_unchecked_weeks (hopefully 1 at most)</span>\n        <span class=\"token keyword\">for</span> gauge_type <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> gauge_type <span class=\"token operator\">==</span> _n_gauge_types<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            type_sum<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias\n            type_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_type_weight<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n            pt <span class=\"token operator\">+=</span> type_sum <span class=\"token operator\">*</span> type_weight\n        self<span class=\"token punctuation\">.</span>points_total<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pt\n\n        <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>time_total <span class=\"token operator\">=</span> t\n    <span class=\"token keyword\">return</span> pt\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_get_weight</span><span class=\"token punctuation\">(</span>gauge_addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Fill historic gauge weights week-over-week for missed checkins\n            and return the total for the future week\n    @param gauge_addr Address of the gauge\n    @return Gauge weight\n    \"\"\"</span>\n    t<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>time_weight<span class=\"token punctuation\">[</span>gauge_addr<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        pt<span class=\"token punctuation\">:</span> Point <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_weight<span class=\"token punctuation\">[</span>gauge_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            t <span class=\"token operator\">+=</span> WEEK\n            d_bias<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> pt<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> WEEK\n            <span class=\"token keyword\">if</span> pt<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">></span> d_bias<span class=\"token punctuation\">:</span>\n                pt<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">-=</span> d_bias\n                d_slope<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>changes_weight<span class=\"token punctuation\">[</span>gauge_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n                pt<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">-=</span> d_slope\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                pt<span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                pt<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n            self<span class=\"token punctuation\">.</span>points_weight<span class=\"token punctuation\">[</span>gauge_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pt\n            <span class=\"token keyword\">if</span> t <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n                self<span class=\"token punctuation\">.</span>time_weight<span class=\"token punctuation\">[</span>gauge_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t\n        <span class=\"token keyword\">return</span> pt<span class=\"token punctuation\">.</span>bias\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add_gauge</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> gauge_type<span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Add gauge `addr` of type `gauge_type` with weight `weight`\n    @param addr Gauge address\n    @param gauge_type Gauge type\n    @param weight Gauge weight\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin\n    <span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>gauge_type <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>gauge_type <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>n_gauge_types<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">assert</span> self<span class=\"token punctuation\">.</span>gauge_types_<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>  <span class=\"token comment\"># dev: cannot add the same gauge twice</span>\n\n    n<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>n_gauges\n    self<span class=\"token punctuation\">.</span>n_gauges <span class=\"token operator\">=</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    self<span class=\"token punctuation\">.</span>gauges<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> addr\n\n    self<span class=\"token punctuation\">.</span>gauge_types_<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> gauge_type <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    next_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">+</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK\n\n    <span class=\"token keyword\">if</span> weight <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        _type_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_type_weight<span class=\"token punctuation\">(</span>gauge_type<span class=\"token punctuation\">)</span>\n        _old_sum<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_sum<span class=\"token punctuation\">(</span>gauge_type<span class=\"token punctuation\">)</span>\n        _old_total<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_total<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        self<span class=\"token punctuation\">.</span>points_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> weight <span class=\"token operator\">+</span> _old_sum\n        self<span class=\"token punctuation\">.</span>time_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_time\n        self<span class=\"token punctuation\">.</span>points_total<span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _old_total <span class=\"token operator\">+</span> _type_weight <span class=\"token operator\">*</span> weight\n        self<span class=\"token punctuation\">.</span>time_total <span class=\"token operator\">=</span> next_time\n\n        self<span class=\"token punctuation\">.</span>points_weight<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> weight\n\n    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>time_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>time_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_time\n    self<span class=\"token punctuation\">.</span>time_weight<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_time\n\n    log NewGauge<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> gauge_type<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">checkpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Checkpoint to fill data common for all gauges\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>_get_total<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">checkpoint_gauge</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Checkpoint to fill data for both a specific gauge and common for all gauges\n    @param addr Gauge address\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>_get_weight<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>_get_total<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_gauge_relative_weight</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get Gauge relative weight (not more than 1.0) normalized to 1e18\n            (e.g. 1.0 == 1e18). Inflation which will be received by it is\n            inflation_rate * relative_weight / 1e18\n    @param addr Gauge address\n    @param time Relative weight at the specified timestamp in the past or present\n    @return Value of relative weight normalized to 1e18\n    \"\"\"</span>\n    t<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> time <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK\n    _total_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_total<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">if</span> _total_weight <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        gauge_type<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>gauge_types_<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        _type_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_type_weight<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span>\n        _gauge_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_weight<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias\n        <span class=\"token keyword\">return</span> MULTIPLIER <span class=\"token operator\">*</span> _type_weight <span class=\"token operator\">*</span> _gauge_weight <span class=\"token operator\">/</span> _total_weight\n\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">gauge_relative_weight</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get Gauge relative weight (not more than 1.0) normalized to 1e18\n            (e.g. 1.0 == 1e18). Inflation which will be received by it is\n            inflation_rate * relative_weight / 1e18\n    @param addr Gauge address\n    @param time Relative weight at the specified timestamp in the past or present\n    @return Value of relative weight normalized to 1e18\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_gauge_relative_weight<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">gauge_relative_weight_write</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get gauge weight normalized to 1e18 and also fill all the unfilled\n            values for type and gauge records\n    @dev Any address can call, however nothing is recorded if the values are filled already\n    @param addr Gauge address\n    @param time Relative weight at the specified timestamp in the past or present\n    @return Value of relative weight normalized to 1e18\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>_get_weight<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>_get_total<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># Also calculates get_sum</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_gauge_relative_weight<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span>\n\n\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_change_type_weight</span><span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Change type weight\n    @param type_id Type id\n    @param weight New type weight\n    \"\"\"</span>\n    old_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_type_weight<span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">)</span>\n    old_sum<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_sum<span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">)</span>\n    _total_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_total<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    next_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">+</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK\n\n    _total_weight <span class=\"token operator\">=</span> _total_weight <span class=\"token operator\">+</span> old_sum <span class=\"token operator\">*</span> weight <span class=\"token operator\">-</span> old_sum <span class=\"token operator\">*</span> old_weight\n    self<span class=\"token punctuation\">.</span>points_total<span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _total_weight\n    self<span class=\"token punctuation\">.</span>points_type_weight<span class=\"token punctuation\">[</span>type_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> weight\n    self<span class=\"token punctuation\">.</span>time_total <span class=\"token operator\">=</span> next_time\n    self<span class=\"token punctuation\">.</span>time_type_weight<span class=\"token punctuation\">[</span>type_id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_time\n\n    log NewTypeWeight<span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">,</span> next_time<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> _total_weight<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">add_type</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Add gauge type with name `_name` and weight `weight`\n    @param _name Name of gauge type\n    @param weight Weight of gauge type\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin\n    type_id<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>n_gauge_types\n    self<span class=\"token punctuation\">.</span>gauge_type_names<span class=\"token punctuation\">[</span>type_id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _name\n    self<span class=\"token punctuation\">.</span>n_gauge_types <span class=\"token operator\">=</span> type_id <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> weight <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_change_type_weight<span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span>\n        log AddType<span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">,</span> type_id<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">change_type_weight</span><span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Change gauge type `type_id` weight to `weight`\n    @param type_id Gauge type id\n    @param weight New Gauge weight\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin\n    self<span class=\"token punctuation\">.</span>_change_type_weight<span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_change_gauge_weight</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># Change gauge weight</span>\n    <span class=\"token comment\"># Only needed when testing in reality</span>\n    gauge_type<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>gauge_types_<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    old_gauge_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_weight<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n    type_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_type_weight<span class=\"token punctuation\">(</span>gauge_type<span class=\"token punctuation\">)</span>\n    old_sum<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_sum<span class=\"token punctuation\">(</span>gauge_type<span class=\"token punctuation\">)</span>\n    _total_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_total<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    next_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">+</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK\n\n    self<span class=\"token punctuation\">.</span>points_weight<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> weight\n    self<span class=\"token punctuation\">.</span>time_weight<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_time\n\n    new_sum<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> old_sum <span class=\"token operator\">+</span> weight <span class=\"token operator\">-</span> old_gauge_weight\n    self<span class=\"token punctuation\">.</span>points_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> new_sum\n    self<span class=\"token punctuation\">.</span>time_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_time\n\n    _total_weight <span class=\"token operator\">=</span> _total_weight <span class=\"token operator\">+</span> new_sum <span class=\"token operator\">*</span> type_weight <span class=\"token operator\">-</span> old_sum <span class=\"token operator\">*</span> type_weight\n    self<span class=\"token punctuation\">.</span>points_total<span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _total_weight\n    self<span class=\"token punctuation\">.</span>time_total <span class=\"token operator\">=</span> next_time\n\n    log NewGaugeWeight<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> _total_weight<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">change_gauge_weight</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Change weight of gauge `addr` to `weight`\n    @param addr `GaugeController` contract address\n    @param weight New Gauge weight\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>admin\n    self<span class=\"token punctuation\">.</span>_change_gauge_weight<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">vote_for_gauge_weights</span><span class=\"token punctuation\">(</span>_gauge_addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _user_weight<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Allocate voting power for changing pool weights\n    @param _gauge_addr Gauge which `msg.sender` votes for\n    @param _user_weight Weight for a gauge in bps (units of 0.01%). Minimal is 0.01%. Ignored if 0\n    \"\"\"</span>\n    escrow<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>voting_escrow\n    slope<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> convert<span class=\"token punctuation\">(</span>VotingEscrow<span class=\"token punctuation\">(</span>escrow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>get_last_user_slope<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">)</span>\n    lock_end<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> VotingEscrow<span class=\"token punctuation\">(</span>escrow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>locked__end<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span>\n    _n_gauges<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>n_gauges\n    next_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">+</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK\n    <span class=\"token keyword\">assert</span> lock_end <span class=\"token operator\">></span> next_time<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Your token lock expires too soon\"</span>\n    <span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>_user_weight <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>_user_weight <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"You used all your voting power\"</span>\n    <span class=\"token keyword\">assert</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">>=</span> self<span class=\"token punctuation\">.</span>last_user_vote<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> WEIGHT_VOTE_DELAY<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cannot vote so often\"</span>\n\n    gauge_type<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>gauge_types_<span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">assert</span> gauge_type <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Gauge not added\"</span>\n    <span class=\"token comment\"># Prepare slopes and biases in memory</span>\n    old_slope<span class=\"token punctuation\">:</span> VotedSlope <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>vote_user_slopes<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span>\n    old_dt<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">if</span> old_slope<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> next_time<span class=\"token punctuation\">:</span>\n        old_dt <span class=\"token operator\">=</span> old_slope<span class=\"token punctuation\">.</span>end <span class=\"token operator\">-</span> next_time\n    old_bias<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> old_slope<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> old_dt\n    new_slope<span class=\"token punctuation\">:</span> VotedSlope <span class=\"token operator\">=</span> VotedSlope<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        slope<span class=\"token punctuation\">:</span> slope <span class=\"token operator\">*</span> _user_weight <span class=\"token operator\">/</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span>\n        end<span class=\"token punctuation\">:</span> lock_end<span class=\"token punctuation\">,</span>\n        power<span class=\"token punctuation\">:</span> _user_weight\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    new_dt<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> lock_end <span class=\"token operator\">-</span> next_time  <span class=\"token comment\"># dev: raises when expired</span>\n    new_bias<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> new_slope<span class=\"token punctuation\">.</span>slope <span class=\"token operator\">*</span> new_dt\n\n    <span class=\"token comment\"># Check and update powers (weights) used</span>\n    power_used<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>vote_user_power<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span>\n    power_used <span class=\"token operator\">=</span> power_used <span class=\"token operator\">+</span> new_slope<span class=\"token punctuation\">.</span>power <span class=\"token operator\">-</span> old_slope<span class=\"token punctuation\">.</span>power\n    self<span class=\"token punctuation\">.</span>vote_user_power<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> power_used\n    <span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>power_used <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>power_used <span class=\"token operator\">&lt;=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Used too much power'</span>\n\n    <span class=\"token comment\">## Remove old and schedule new slope changes</span>\n    <span class=\"token comment\"># Remove slope changes for old slopes</span>\n    <span class=\"token comment\"># Schedule recording of initial slope for next_time</span>\n    old_weight_bias<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_weight<span class=\"token punctuation\">(</span>_gauge_addr<span class=\"token punctuation\">)</span>\n    old_weight_slope<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_weight<span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>slope\n    old_sum_bias<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_sum<span class=\"token punctuation\">(</span>gauge_type<span class=\"token punctuation\">)</span>\n    old_sum_slope<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>points_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>slope\n\n    self<span class=\"token punctuation\">.</span>points_weight<span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>old_weight_bias <span class=\"token operator\">+</span> new_bias<span class=\"token punctuation\">,</span> old_bias<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> old_bias\n    self<span class=\"token punctuation\">.</span>points_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>old_sum_bias <span class=\"token operator\">+</span> new_bias<span class=\"token punctuation\">,</span> old_bias<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> old_bias\n    <span class=\"token keyword\">if</span> old_slope<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> next_time<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>points_weight<span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>old_weight_slope <span class=\"token operator\">+</span> new_slope<span class=\"token punctuation\">.</span>slope<span class=\"token punctuation\">,</span> old_slope<span class=\"token punctuation\">.</span>slope<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> old_slope<span class=\"token punctuation\">.</span>slope\n        self<span class=\"token punctuation\">.</span>points_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>slope <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>old_sum_slope <span class=\"token operator\">+</span> new_slope<span class=\"token punctuation\">.</span>slope<span class=\"token punctuation\">,</span> old_slope<span class=\"token punctuation\">.</span>slope<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> old_slope<span class=\"token punctuation\">.</span>slope\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>points_weight<span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>slope <span class=\"token operator\">+=</span> new_slope<span class=\"token punctuation\">.</span>slope\n        self<span class=\"token punctuation\">.</span>points_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>slope <span class=\"token operator\">+=</span> new_slope<span class=\"token punctuation\">.</span>slope\n    <span class=\"token keyword\">if</span> old_slope<span class=\"token punctuation\">.</span>end <span class=\"token operator\">></span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># Cancel old slope changes if they still didn't happen</span>\n        self<span class=\"token punctuation\">.</span>changes_weight<span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>old_slope<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> old_slope<span class=\"token punctuation\">.</span>slope\n        self<span class=\"token punctuation\">.</span>changes_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>old_slope<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> old_slope<span class=\"token punctuation\">.</span>slope\n    <span class=\"token comment\"># Add slope changes for new slopes</span>\n    self<span class=\"token punctuation\">.</span>changes_weight<span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_slope<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> new_slope<span class=\"token punctuation\">.</span>slope\n    self<span class=\"token punctuation\">.</span>changes_sum<span class=\"token punctuation\">[</span>gauge_type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_slope<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> new_slope<span class=\"token punctuation\">.</span>slope\n\n    self<span class=\"token punctuation\">.</span>_get_total<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    self<span class=\"token punctuation\">.</span>vote_user_slopes<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> new_slope\n\n    <span class=\"token comment\"># Record last action time</span>\n    self<span class=\"token punctuation\">.</span>last_user_vote<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_gauge_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n\n    log VoteForGauge<span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _gauge_addr<span class=\"token punctuation\">,</span> _user_weight<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_gauge_weight</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get current gauge weight\n    @param addr Gauge address\n    @return Gauge weight\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>points_weight<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>time_weight<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_type_weight</span><span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get current type weight\n    @param type_id Type id\n    @return Type weight\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>points_type_weight<span class=\"token punctuation\">[</span>type_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>time_type_weight<span class=\"token punctuation\">[</span>type_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_total_weight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get current total (type-weighted) weight\n    @return Total weight\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>points_total<span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>time_total<span class=\"token punctuation\">]</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_weights_sum_per_type</span><span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get sum of gauge weights per type\n    @param type_id Type id\n    @return Sum of gauge weights\n    \"\"\"</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>points_sum<span class=\"token punctuation\">[</span>type_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>time_sum<span class=\"token punctuation\">[</span>type_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bias<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-2\"><a href=\"#Analyze-2\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>Gauge—-Curve的专用名词，意为储蓄池子</p>\n<p>变量名称在行后给出了比较详细的解释，函数开头也做出了功能解释</p>\n<p>_get_type_weight，_get_sum，_get_total函数逻辑性同，填补历史数据并且返回未来一周的数据</p>\n<p>_gauge_relative_weight函数返回*1e18的相对权重值，在Gauge合约内参与reward的计算</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207281439614.png\"></p>\n<p>_change_type_weight函数为add_type函数以及change_type_weight函数的核心函数实现type的增加以及更改type_weight的功能</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">_change_type_weight</span><span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Change type weight\n    @param type_id Type id\n    @param weight New type weight\n    \"\"\"</span>\n    old_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_type_weight<span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">)</span>\n    old_sum<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_sum<span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">)</span>\n    _total_weight<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>_get_total<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    next_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">+</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK\n\n    _total_weight <span class=\"token operator\">=</span> _total_weight <span class=\"token operator\">+</span> old_sum <span class=\"token operator\">*</span> weight <span class=\"token operator\">-</span> old_sum <span class=\"token operator\">*</span> old_weight\n    self<span class=\"token punctuation\">.</span>points_total<span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _total_weight\n    self<span class=\"token punctuation\">.</span>points_type_weight<span class=\"token punctuation\">[</span>type_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_time<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> weight\n    self<span class=\"token punctuation\">.</span>time_total <span class=\"token operator\">=</span> next_time\n    self<span class=\"token punctuation\">.</span>time_type_weight<span class=\"token punctuation\">[</span>type_id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> next_time\n\n    log NewTypeWeight<span class=\"token punctuation\">(</span>type_id<span class=\"token punctuation\">,</span> next_time<span class=\"token punctuation\">,</span> weight<span class=\"token punctuation\">,</span> _total_weight<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"One-Gauge-Gauge-0\"><a href=\"#One-Gauge-Gauge-0\" class=\"headerlink\" title=\"One Gauge(Gauge[0])\"></a>One Gauge(Gauge[0])</h1><h2 id=\"Code-3\"><a href=\"#Code-3\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token comment\"># @version 0.2.4</span>\n<span class=\"token triple-quoted-string string\">\"\"\"\n@title Liquidity Gauge\n@author Curve Finance\n@license MIT\n@notice Used for measuring liquidity and insurance\n\"\"\"</span>\n\n<span class=\"token keyword\">from</span> vyper<span class=\"token punctuation\">.</span>interfaces <span class=\"token keyword\">import</span> ERC20\n\ninterface CRV20<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">future_epoch_time_write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span> nonpayable\n    <span class=\"token keyword\">def</span> <span class=\"token function\">rate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span> view\n\ninterface Controller<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">period</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> int128<span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">period_write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> int128<span class=\"token punctuation\">:</span> nonpayable\n    <span class=\"token keyword\">def</span> <span class=\"token function\">period_timestamp</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">:</span> int128<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">gauge_relative_weight</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">voting_escrow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> address<span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">checkpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> nonpayable\n    <span class=\"token keyword\">def</span> <span class=\"token function\">checkpoint_gauge</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> nonpayable\n\ninterface Minter<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">token</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> address<span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">controller</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> address<span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">minted</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> gauge<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span> view\n\ninterface VotingEscrow<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">user_point_epoch</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span> view\n    <span class=\"token keyword\">def</span> <span class=\"token function\">user_point_history__ts</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> epoch<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span> view\n\n\nevent Deposit<span class=\"token punctuation\">:</span>\n    provider<span class=\"token punctuation\">:</span> indexed<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n    value<span class=\"token punctuation\">:</span> uint256\n\nevent Withdraw<span class=\"token punctuation\">:</span>\n    provider<span class=\"token punctuation\">:</span> indexed<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\n    value<span class=\"token punctuation\">:</span> uint256\n\nevent UpdateLiquidityLimit<span class=\"token punctuation\">:</span>\n    user<span class=\"token punctuation\">:</span> address\n    original_balance<span class=\"token punctuation\">:</span> uint256\n    original_supply<span class=\"token punctuation\">:</span> uint256\n    working_balance<span class=\"token punctuation\">:</span> uint256\n    working_supply<span class=\"token punctuation\">:</span> uint256\n\n\nTOKENLESS_PRODUCTION<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">40</span>\nBOOST_WARMUP<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token number\">7</span> <span class=\"token operator\">*</span> <span class=\"token number\">86400</span>\nWEEK<span class=\"token punctuation\">:</span> constant<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">604800</span>\n\nminter<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\ncrv_token<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\nlp_token<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\ncontroller<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\nvoting_escrow<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>address<span class=\"token punctuation\">)</span>\nbalanceOf<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ntotalSupply<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\nfuture_epoch_time<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># caller -> recipient -> can deposit?</span>\napproved_to_deposit<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\nworking_balances<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nworking_supply<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># The goal is to be able to calculate ∫(rate * balance / totalSupply dt) from 0 till checkpoint</span>\n<span class=\"token comment\"># All values are kept in units of being multiplied by 1e18</span>\nperiod<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>int128<span class=\"token punctuation\">)</span>\nperiod_timestamp<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">[</span><span class=\"token number\">100000000000000000000000000000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 1e18 * ∫(rate(t) / totalSupply(t) dt) from 0 till checkpoint</span>\nintegrate_inv_supply<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">[</span><span class=\"token number\">100000000000000000000000000000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># bump epoch when rate() changes</span>\n\n<span class=\"token comment\"># 1e18 * ∫(rate(t) / totalSupply(t) dt) from (last_action) till checkpoint</span>\nintegrate_inv_supply_of<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nintegrate_checkpoint_of<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># ∫(balance * rate(t) / totalSupply(t) dt) from 0 till checkpoint</span>\n<span class=\"token comment\"># Units: rate * t = already number of coins per address to issue</span>\nintegrate_fraction<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>HashMap<span class=\"token punctuation\">[</span>address<span class=\"token punctuation\">,</span> uint256<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ninflation_rate<span class=\"token punctuation\">:</span> public<span class=\"token punctuation\">(</span>uint256<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>lp_addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> _minter<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Contract constructor\n    @param lp_addr Liquidity Pool contract address\n    @param _minter Minter contract address\n    \"\"\"</span>\n\n    <span class=\"token keyword\">assert</span> lp_addr <span class=\"token operator\">!=</span> ZERO_ADDRESS\n    <span class=\"token keyword\">assert</span> _minter <span class=\"token operator\">!=</span> ZERO_ADDRESS\n\n    self<span class=\"token punctuation\">.</span>lp_token <span class=\"token operator\">=</span> lp_addr\n    self<span class=\"token punctuation\">.</span>minter <span class=\"token operator\">=</span> _minter\n    crv_addr<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> Minter<span class=\"token punctuation\">(</span>_minter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>crv_token <span class=\"token operator\">=</span> crv_addr\n    controller_addr<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> Minter<span class=\"token punctuation\">(</span>_minter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>controller<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>controller <span class=\"token operator\">=</span> controller_addr\n    self<span class=\"token punctuation\">.</span>voting_escrow <span class=\"token operator\">=</span> Controller<span class=\"token punctuation\">(</span>controller_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>voting_escrow<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>period_timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n    self<span class=\"token punctuation\">.</span>inflation_rate <span class=\"token operator\">=</span> CRV20<span class=\"token punctuation\">(</span>crv_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>future_epoch_time <span class=\"token operator\">=</span> CRV20<span class=\"token punctuation\">(</span>crv_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>future_epoch_time_write<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_update_liquidity_limit</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Calculate limits which depend on the amount of CRV token per-user.\n            Effectively it calculates working balances to apply amplification\n            of CRV production by CRV\n    @param addr User address\n    @param l User's amount of liquidity (LP tokens)\n    @param L Total amount of liquidity (LP tokens)\n    \"\"\"</span>\n    <span class=\"token comment\"># To be called after totalSupply is updated</span>\n    _voting_escrow<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>voting_escrow\n    voting_balance<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> ERC20<span class=\"token punctuation\">(</span>_voting_escrow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n    voting_total<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> ERC20<span class=\"token punctuation\">(</span>_voting_escrow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>totalSupply<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    lim<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> l <span class=\"token operator\">*</span> TOKENLESS_PRODUCTION <span class=\"token operator\">/</span> <span class=\"token number\">100</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>voting_total <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>period_timestamp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> BOOST_WARMUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        lim <span class=\"token operator\">+=</span> L <span class=\"token operator\">*</span> voting_balance <span class=\"token operator\">/</span> voting_total <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">-</span> TOKENLESS_PRODUCTION<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">100</span>\n\n    lim <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> lim<span class=\"token punctuation\">)</span>\n    old_bal<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>working_balances<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span>\n    self<span class=\"token punctuation\">.</span>working_balances<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> lim\n    _working_supply<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>working_supply <span class=\"token operator\">+</span> lim <span class=\"token operator\">-</span> old_bal\n    self<span class=\"token punctuation\">.</span>working_supply <span class=\"token operator\">=</span> _working_supply\n\n    log UpdateLiquidityLimit<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">,</span> lim<span class=\"token punctuation\">,</span> _working_supply<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@internal</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">_checkpoint</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Checkpoint for a user\n    @param addr User address\n    \"\"\"</span>\n    _token<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>crv_token\n    _controller<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>controller\n    _period<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>period\n    _period_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>period_timestamp<span class=\"token punctuation\">[</span>_period<span class=\"token punctuation\">]</span>\n    _integrate_inv_supply<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>integrate_inv_supply<span class=\"token punctuation\">[</span>_period<span class=\"token punctuation\">]</span>\n    rate<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>inflation_rate\n    new_rate<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> rate\n    prev_future_epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>future_epoch_time\n    <span class=\"token keyword\">if</span> prev_future_epoch <span class=\"token operator\">>=</span> _period_time<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>future_epoch_time <span class=\"token operator\">=</span> CRV20<span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>future_epoch_time_write<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        new_rate <span class=\"token operator\">=</span> CRV20<span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>inflation_rate <span class=\"token operator\">=</span> new_rate\n    Controller<span class=\"token punctuation\">(</span>_controller<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>checkpoint_gauge<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n\n    _working_balance<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>working_balances<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span>\n    _working_supply<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>working_supply\n\n    <span class=\"token comment\"># Update integral of 1/supply</span>\n    <span class=\"token keyword\">if</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">></span> _period_time<span class=\"token punctuation\">:</span>\n        prev_week_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> _period_time\n        week_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_period_time <span class=\"token operator\">+</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK<span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            dt<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> week_time <span class=\"token operator\">-</span> prev_week_time\n            w<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> Controller<span class=\"token punctuation\">(</span>_controller<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>gauge_relative_weight<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> prev_week_time <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> _working_supply <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> prev_future_epoch <span class=\"token operator\">>=</span> prev_week_time <span class=\"token keyword\">and</span> prev_future_epoch <span class=\"token operator\">&lt;</span> week_time<span class=\"token punctuation\">:</span>\n                    <span class=\"token comment\"># If we went across one or multiple epochs, apply the rate</span>\n                    <span class=\"token comment\"># of the first epoch until it ends, and then the rate of</span>\n                    <span class=\"token comment\"># the last epoch.</span>\n                    <span class=\"token comment\"># If more than one epoch is crossed - the gauge gets less,</span>\n                    <span class=\"token comment\"># but that'd meen it wasn't called for more than 1 year</span>\n                    _integrate_inv_supply <span class=\"token operator\">+=</span> rate <span class=\"token operator\">*</span> w <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>prev_future_epoch <span class=\"token operator\">-</span> prev_week_time<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _working_supply\n                    rate <span class=\"token operator\">=</span> new_rate\n                    _integrate_inv_supply <span class=\"token operator\">+=</span> rate <span class=\"token operator\">*</span> w <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>week_time <span class=\"token operator\">-</span> prev_future_epoch<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _working_supply\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    _integrate_inv_supply <span class=\"token operator\">+=</span> rate <span class=\"token operator\">*</span> w <span class=\"token operator\">*</span> dt <span class=\"token operator\">/</span> _working_supply\n                <span class=\"token comment\"># On precisions of the calculation</span>\n                <span class=\"token comment\"># rate ~= 10e18</span>\n                <span class=\"token comment\"># last_weight > 0.01 * 1e18 = 1e16 (if pool weight is 1%)</span>\n                <span class=\"token comment\"># _working_supply ~= TVL * 1e18 ~= 1e26 ($100M for example)</span>\n                <span class=\"token comment\"># The largest loss is at dt = 1</span>\n                <span class=\"token comment\"># Loss is 1e-9 - acceptable</span>\n\n            <span class=\"token keyword\">if</span> week_time <span class=\"token operator\">==</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            prev_week_time <span class=\"token operator\">=</span> week_time\n            week_time <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>week_time <span class=\"token operator\">+</span> WEEK<span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span>\n\n    _period <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    self<span class=\"token punctuation\">.</span>period <span class=\"token operator\">=</span> _period\n    self<span class=\"token punctuation\">.</span>period_timestamp<span class=\"token punctuation\">[</span>_period<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n    self<span class=\"token punctuation\">.</span>integrate_inv_supply<span class=\"token punctuation\">[</span>_period<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _integrate_inv_supply\n\n    <span class=\"token comment\"># Update user-specific integrals</span>\n    self<span class=\"token punctuation\">.</span>integrate_fraction<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> _working_balance <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>_integrate_inv_supply <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>integrate_inv_supply_of<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span>\n    self<span class=\"token punctuation\">.</span>integrate_inv_supply_of<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _integrate_inv_supply\n    self<span class=\"token punctuation\">.</span>integrate_checkpoint_of<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">user_checkpoint</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Record a checkpoint for `addr`\n    @param addr User address\n    @return bool success\n    \"\"\"</span>\n    <span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> addr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> self<span class=\"token punctuation\">.</span>minter<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># dev: unauthorized</span>\n    self<span class=\"token punctuation\">.</span>_checkpoint<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>_update_liquidity_limit<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>totalSupply<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">claimable_tokens</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Get the number of claimable tokens per user\n    @dev This function should be manually changed to \"view\" in the ABI\n    @return uint256 number of claimable tokens per user\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>_checkpoint<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>integrate_fraction<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> Minter<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>minter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>minted<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">kick</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Kick `addr` for abusing their boost\n    @dev Only if either they had another voting event, or their voting escrow lock expired\n    @param addr Address to kick\n    \"\"\"</span>\n    _voting_escrow<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>voting_escrow\n    t_last<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>integrate_checkpoint_of<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span>\n    t_ve<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> VotingEscrow<span class=\"token punctuation\">(</span>_voting_escrow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>user_point_history__ts<span class=\"token punctuation\">(</span>\n        addr<span class=\"token punctuation\">,</span> VotingEscrow<span class=\"token punctuation\">(</span>_voting_escrow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>user_point_epoch<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    _balance<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">assert</span> ERC20<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>voting_escrow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> t_ve <span class=\"token operator\">></span> t_last <span class=\"token comment\"># dev: kick not allowed</span>\n    <span class=\"token keyword\">assert</span> self<span class=\"token punctuation\">.</span>working_balances<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> _balance <span class=\"token operator\">*</span> TOKENLESS_PRODUCTION <span class=\"token operator\">/</span> <span class=\"token number\">100</span>  <span class=\"token comment\"># dev: kick not needed</span>\n\n    self<span class=\"token punctuation\">.</span>_checkpoint<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>_update_liquidity_limit<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>totalSupply<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">set_approve_deposit</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">,</span> can_deposit<span class=\"token punctuation\">:</span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Set whether `addr` can deposit tokens for `msg.sender`\n    @param addr Address to set approval on\n    @param can_deposit bool - can this account deposit for `msg.sender`?\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>approved_to_deposit<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> can_deposit\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@nonreentrant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lock'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span>_value<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Deposit `_value` LP tokens\n    @param _value Number of tokens to deposit\n    @param addr Address to deposit for\n    \"\"\"</span>\n    <span class=\"token keyword\">if</span> addr <span class=\"token operator\">!=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">assert</span> self<span class=\"token punctuation\">.</span>approved_to_deposit<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not approved\"</span>\n\n    self<span class=\"token punctuation\">.</span>_checkpoint<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> _value <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        _balance<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> _value\n        _supply<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>totalSupply <span class=\"token operator\">+</span> _value\n        self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _balance\n        self<span class=\"token punctuation\">.</span>totalSupply <span class=\"token operator\">=</span> _supply\n\n        self<span class=\"token punctuation\">.</span>_update_liquidity_limit<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> _balance<span class=\"token punctuation\">,</span> _supply<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">assert</span> ERC20<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lp_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>transferFrom<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n\n    log Deposit<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@nonreentrant</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lock'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>_value<span class=\"token punctuation\">:</span> uint256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Withdraw `_value` LP tokens\n    @param _value Number of tokens to withdraw\n    \"\"\"</span>\n    self<span class=\"token punctuation\">.</span>_checkpoint<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span>\n\n    _balance<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _value\n    _supply<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>totalSupply <span class=\"token operator\">-</span> _value\n    self<span class=\"token punctuation\">.</span>balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _balance\n    self<span class=\"token punctuation\">.</span>totalSupply <span class=\"token operator\">=</span> _supply\n\n    self<span class=\"token punctuation\">.</span>_update_liquidity_limit<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _balance<span class=\"token punctuation\">,</span> _supply<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">assert</span> ERC20<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>lp_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>transfer<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n\n    log Withdraw<span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token decorator annotation punctuation\">@external</span>\n<span class=\"token decorator annotation punctuation\">@view</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">integrate_checkpoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> uint256<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>period_timestamp<span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>period<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-3\"><a href=\"#Analyze-3\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>boost计算公式：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207271651248.png\"></p>\n<p>代码实现方式：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207271652242.png\"></p>\n<p>最终用户获得的奖励在_checkpoint函数中确定：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">_checkpoint</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">:</span> address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    @notice Checkpoint for a user\n    @param addr User address\n    \"\"\"</span>\n    _token<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>crv_token\n    _controller<span class=\"token punctuation\">:</span> address <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>controller\n    _period<span class=\"token punctuation\">:</span> int128 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>period\n    _period_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>period_timestamp<span class=\"token punctuation\">[</span>_period<span class=\"token punctuation\">]</span>\n    _integrate_inv_supply<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>integrate_inv_supply<span class=\"token punctuation\">[</span>_period<span class=\"token punctuation\">]</span>\n    rate<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>inflation_rate\n    new_rate<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> rate\n    prev_future_epoch<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>future_epoch_time\n    <span class=\"token keyword\">if</span> prev_future_epoch <span class=\"token operator\">>=</span> _period_time<span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>future_epoch_time <span class=\"token operator\">=</span> CRV20<span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>future_epoch_time_write<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        new_rate <span class=\"token operator\">=</span> CRV20<span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>inflation_rate <span class=\"token operator\">=</span> new_rate\n    Controller<span class=\"token punctuation\">(</span>_controller<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>checkpoint_gauge<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n\n    _working_balance<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>working_balances<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span>\n    _working_supply<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>working_supply\n\n    <span class=\"token comment\"># Update integral of 1/supply</span>\n    <span class=\"token keyword\">if</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">></span> _period_time<span class=\"token punctuation\">:</span>\n        prev_week_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> _period_time\n        week_time<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_period_time <span class=\"token operator\">+</span> WEEK<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK<span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            dt<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> week_time <span class=\"token operator\">-</span> prev_week_time\n            w<span class=\"token punctuation\">:</span> uint256 <span class=\"token operator\">=</span> Controller<span class=\"token punctuation\">(</span>_controller<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>gauge_relative_weight<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> prev_week_time <span class=\"token operator\">/</span> WEEK <span class=\"token operator\">*</span> WEEK<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> _working_supply <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> prev_future_epoch <span class=\"token operator\">>=</span> prev_week_time <span class=\"token keyword\">and</span> prev_future_epoch <span class=\"token operator\">&lt;</span> week_time<span class=\"token punctuation\">:</span>\n                    <span class=\"token comment\"># If we went across one or multiple epochs, apply the rate</span>\n                    <span class=\"token comment\"># of the first epoch until it ends, and then the rate of</span>\n                    <span class=\"token comment\"># the last epoch.</span>\n                    <span class=\"token comment\"># If more than one epoch is crossed - the gauge gets less,</span>\n                    <span class=\"token comment\"># but that'd meen it wasn't called for more than 1 year</span>\n                    _integrate_inv_supply <span class=\"token operator\">+=</span> rate <span class=\"token operator\">*</span> w <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>prev_future_epoch <span class=\"token operator\">-</span> prev_week_time<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _working_supply\n                    rate <span class=\"token operator\">=</span> new_rate\n                    _integrate_inv_supply <span class=\"token operator\">+=</span> rate <span class=\"token operator\">*</span> w <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>week_time <span class=\"token operator\">-</span> prev_future_epoch<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _working_supply\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    _integrate_inv_supply <span class=\"token operator\">+=</span> rate <span class=\"token operator\">*</span> w <span class=\"token operator\">*</span> dt <span class=\"token operator\">/</span> _working_supply\n                <span class=\"token comment\"># On precisions of the calculation</span>\n                <span class=\"token comment\"># rate ~= 10e18</span>\n                <span class=\"token comment\"># last_weight > 0.01 * 1e18 = 1e16 (if pool weight is 1%)</span>\n                <span class=\"token comment\"># _working_supply ~= TVL * 1e18 ~= 1e26 ($100M for example)</span>\n                <span class=\"token comment\"># The largest loss is at dt = 1</span>\n                <span class=\"token comment\"># Loss is 1e-9 - acceptable</span>\n\n            <span class=\"token keyword\">if</span> week_time <span class=\"token operator\">==</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            prev_week_time <span class=\"token operator\">=</span> week_time\n            week_time <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>week_time <span class=\"token operator\">+</span> WEEK<span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span>\n\n    _period <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    self<span class=\"token punctuation\">.</span>period <span class=\"token operator\">=</span> _period\n    self<span class=\"token punctuation\">.</span>period_timestamp<span class=\"token punctuation\">[</span>_period<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n    self<span class=\"token punctuation\">.</span>integrate_inv_supply<span class=\"token punctuation\">[</span>_period<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _integrate_inv_supply\n\n    <span class=\"token comment\"># Update user-specific integrals</span>\n    self<span class=\"token punctuation\">.</span>integrate_fraction<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> _working_balance <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>_integrate_inv_supply <span class=\"token operator\">-</span> self<span class=\"token punctuation\">.</span>integrate_inv_supply_of<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span>\n    self<span class=\"token punctuation\">.</span>integrate_inv_supply_of<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _integrate_inv_supply\n    self<span class=\"token punctuation\">.</span>integrate_checkpoint_of<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>以week做计算，由lock时间和lock amount共同决定</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207271906357.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207271905334.png\"></p>\n<p>在进行增加，记录奖励数量，计算增加总量减去用户余额即为增量，结合minter合约进行奖励发放，核心函数如下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207271905595.png\"></p>\n<p>当用户的lock token为0 || lock过期||奖励token大于实际token*40%即可被kick掉</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207271905962.png\"></p>\n<p>即在此处将lim更新为0，则不再参与奖励分发</p>\n<h1 id=\"Voting\"><a href=\"#Voting\" class=\"headerlink\" title=\"Voting\"></a>Voting</h1><h2 id=\"Code-4\"><a href=\"#Code-4\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">Voting</span> <span class=\"token keyword\">is</span> IForwarder<span class=\"token punctuation\">,</span> AragonApp <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath64</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint64</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint128</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> MAX_UINT_128 <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token number\">128</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint128</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> MAX_UINT_64 <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token number\">64</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> CREATE_VOTES_ROLE <span class=\"token operator\">=</span> <span class=\"token number\">0xe7dcd7275292e064d090fbc5f3bd7995be23b502c1fed5cd94cfddbbdcd32bbc</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//keccak256(\"CREATE_VOTES_ROLE\");</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MODIFY_SUPPORT_ROLE <span class=\"token operator\">=</span> <span class=\"token number\">0xda3972983e62bdf826c4b807c4c9c2b8a941e1f83dfa76d53d6aeac11e1be650</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//keccak256(\"MODIFY_SUPPORT_ROLE\");</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MODIFY_QUORUM_ROLE <span class=\"token operator\">=</span> <span class=\"token number\">0xad15e7261800b4bb73f1b69d3864565ffb1fd00cb93cf14fe48da8f1f2149f39</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//keccak256(\"MODIFY_QUORUM_ROLE\");</span>\n\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> SET_MIN_BALANCE_ROLE <span class=\"token operator\">=</span> <span class=\"token number\">0xb1f3f26f63ad27cd630737a426f990492f5c674208299d6fb23bb2b0733d3d66</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//keccak256(\"SET_MIN_BALANCE_ROLE\")</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> SET_MIN_TIME_ROLE <span class=\"token operator\">=</span> <span class=\"token number\">0xe7ab0252519cd959720b328191bed7fe61b8e25f77613877be7070646d12daf0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//keccak256(\"SET_MIN_TIME_ROLE\")</span>\n\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> ENABLE_VOTE_CREATION <span class=\"token operator\">=</span> <span class=\"token number\">0xecb50dc3e77ba8a59697a3cc090a29b4cbd3c1f2b6b3aea524e0d166969592b9</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//keccak256(\"ENABLE_VOTE_CREATION\")</span>\n\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> DISABLE_VOTE_CREATION <span class=\"token operator\">=</span> <span class=\"token number\">0x40b01f8b31b51596de2eeab8c325ff77cc3695c1c1875d66ff31176e7148d2a1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//keccack256(\"DISABLE_VOTE_CREATION\")</span>\n\n    <span class=\"token builtin\">uint64</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> PCT_BASE <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0% = 0; 1% = 10^16; 100% = 10^18</span>\n\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_NO_VOTE <span class=\"token operator\">=</span> <span class=\"token string\">\"VOTING_NO_VOTE\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_INIT_PCTS <span class=\"token operator\">=</span> <span class=\"token string\">\"VOTING_INIT_PCTS\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_CHANGE_SUPPORT_PCTS <span class=\"token operator\">=</span> <span class=\"token string\">\"VOTING_CHANGE_SUPPORT_PCTS\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_CHANGE_QUORUM_PCTS <span class=\"token operator\">=</span> <span class=\"token string\">\"VOTING_CHANGE_QUORUM_PCTS\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_INIT_SUPPORT_TOO_BIG <span class=\"token operator\">=</span> <span class=\"token string\">\"VOTING_INIT_SUPPORT_TOO_BIG\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_CHANGE_SUPPORT_TOO_BIG <span class=\"token operator\">=</span> <span class=\"token string\">\"VOTING_CHANGE_SUPP_TOO_BIG\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_CAN_NOT_VOTE <span class=\"token operator\">=</span> <span class=\"token string\">\"VOTING_CAN_NOT_VOTE\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_MALFORMED_CONTINUOUS_VOTE <span class=\"token operator\">=</span> <span class=\"token string\">\"MALFORMED_CONTINUOUS_VOTE\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_CAN_NOT_EXECUTE <span class=\"token operator\">=</span> <span class=\"token string\">\"VOTING_CAN_NOT_EXECUTE\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_CAN_NOT_FORWARD <span class=\"token operator\">=</span> <span class=\"token string\">\"VOTING_CAN_NOT_FORWARD\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> ERROR_NO_VOTING_POWER <span class=\"token operator\">=</span> <span class=\"token string\">\"VOTING_NO_VOTING_POWER\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">VoterState</span> <span class=\"token punctuation\">&#123;</span> Absent<span class=\"token punctuation\">,</span> Yea<span class=\"token punctuation\">,</span> Nay<span class=\"token punctuation\">,</span> Even <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Vote</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">bool</span> executed<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint64</span> startDate<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint64</span> snapshotBlock<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint64</span> supportRequiredPct<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint64</span> minAcceptQuorumPct<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> yea<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> nay<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> votingPower<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">bytes</span> executionScript<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> VoterState<span class=\"token punctuation\">)</span> voters<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    MiniMeToken <span class=\"token keyword\">public</span> token<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint64</span> <span class=\"token keyword\">public</span> supportRequiredPct<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint64</span> <span class=\"token keyword\">public</span> minAcceptQuorumPct<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint64</span> <span class=\"token keyword\">public</span> voteTime<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//2500000000000000000000</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> minBalanceLowerLimit<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> minBalanceUpperLimit<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//43200</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> minTimeLowerLimit<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//1209600</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> minTimeUpperLimit<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> minBalance<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> minTime<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">bool</span> <span class=\"token keyword\">public</span> enableVoteCreation<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// We are mimicing an array, we use a mapping instead to make app upgrade more graceful</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> <span class=\"token operator\">=></span> Vote<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> votes<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> votesLength<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> lastCreateVoteTimes<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">StartVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> <span class=\"token keyword\">indexed</span> voteId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> creator<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> metadata<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> minBalance<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> minTime<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> totalSupply<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> creatorVotingPower<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">CastVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> <span class=\"token keyword\">indexed</span> voteId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> voter<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> supports<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> stake<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">ExecuteVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> <span class=\"token keyword\">indexed</span> voteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">ChangeSupportRequired</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span> supportRequiredPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">ChangeMinQuorum</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span> minAcceptQuorumPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">MinimumBalanceSet</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> minBalance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">MinimumTimeSet</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> minTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">voteExists</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_voteId <span class=\"token operator\">&lt;</span> votesLength<span class=\"token punctuation\">,</span> ERROR_NO_VOTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">minBalanceCheck</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _minBalance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//_minBalance to be at least the equivalent of 10k locked for a year (1e18 precision)</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_minBalance <span class=\"token operator\">>=</span> minBalanceLowerLimit <span class=\"token operator\">&amp;&amp;</span> _minBalance <span class=\"token operator\">&lt;=</span> minBalanceUpperLimit<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Min balance should be within initialization hardcoded limits\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">minTimeCheck</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _minTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_minTime <span class=\"token operator\">>=</span> minTimeLowerLimit <span class=\"token operator\">&amp;&amp;</span> _minTime <span class=\"token operator\">&lt;=</span> minTimeUpperLimit<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Min time should be within initialization hardcoded limits\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n        * @notice Initialize Voting app with `_token.symbol(): string` for governance, minimum support of `@formatPct(_supportRequiredPct)`%, minimum acceptance quorum of `@formatPct(_minAcceptQuorumPct)`%, and a voting duration of `@transformTime(_voteTime)`\n        * @param _token MiniMeToken Address that will be used as governance token\n        * @param _supportRequiredPct Percentage of yeas in casted votes for a vote to succeed (expressed as a percentage of 10^18; eg. 10^16 = 1%, 10^18 = 100%)\n        * @param _minAcceptQuorumPct Percentage of yeas in total possible votes for a vote to succeed (expressed as a percentage of 10^18; eg. 10^16 = 1%, 10^18 = 100%)\n        * @param _voteTime Seconds that a vote will be open for token holders to vote (unless enough yeas or nays have been cast to make an early decision)\n        * @param _minBalance Minumum balance that a token holder should have to create a new vote\n        * @param _minTime Minimum time between a user's previous vote and creating a new vote\n        * @param _minBalanceLowerLimit Hardcoded lower limit for _minBalance on initialization\n        * @param _minTimeLowerLimit Hardcoded lower limit for _minTime on initialization\n        * @param _minTimeUpperLimit Hardcoded upper limit for _minTime on initialization\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span>MiniMeToken _token<span class=\"token punctuation\">,</span> \n        <span class=\"token builtin\">uint64</span> _supportRequiredPct<span class=\"token punctuation\">,</span> \n        <span class=\"token builtin\">uint64</span> _minAcceptQuorumPct<span class=\"token punctuation\">,</span> \n        <span class=\"token builtin\">uint64</span> _voteTime<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _minBalance<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _minTime<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _minBalanceLowerLimit<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _minBalanceUpperLimit<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _minTimeLowerLimit<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _minTimeUpperLimit\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> onlyInit <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>CREATE_VOTES_ROLE <span class=\"token operator\">==</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CREATE_VOTES_ROLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>MODIFY_SUPPORT_ROLE <span class=\"token operator\">==</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MODIFY_SUPPORT_ROLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>MODIFY_QUORUM_ROLE <span class=\"token operator\">==</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MODIFY_QUORUM_ROLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>SET_MIN_BALANCE_ROLE <span class=\"token operator\">==</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SET_MIN_BALANCE_ROLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>SET_MIN_TIME_ROLE <span class=\"token operator\">==</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SET_MIN_TIME_ROLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>DISABLE_VOTE_CREATION <span class=\"token operator\">==</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DISABLE_VOTE_CREATION\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>ENABLE_VOTE_CREATION <span class=\"token operator\">==</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ENABLE_VOTE_CREATION\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">initialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_minAcceptQuorumPct <span class=\"token operator\">&lt;=</span> _supportRequiredPct<span class=\"token punctuation\">,</span> ERROR_INIT_PCTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_supportRequiredPct <span class=\"token operator\">&lt;</span> PCT_BASE<span class=\"token punctuation\">,</span> ERROR_INIT_SUPPORT_TOO_BIG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_minBalance <span class=\"token operator\">>=</span> _minBalanceLowerLimit <span class=\"token operator\">&amp;&amp;</span> _minBalance <span class=\"token operator\">&lt;=</span> _minBalanceUpperLimit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_minTime <span class=\"token operator\">>=</span> _minTimeLowerLimit <span class=\"token operator\">&amp;&amp;</span> _minTime <span class=\"token operator\">&lt;=</span> _minTimeUpperLimit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        token <span class=\"token operator\">=</span> _token<span class=\"token punctuation\">;</span>\n        supportRequiredPct <span class=\"token operator\">=</span> _supportRequiredPct<span class=\"token punctuation\">;</span>\n        minAcceptQuorumPct <span class=\"token operator\">=</span> _minAcceptQuorumPct<span class=\"token punctuation\">;</span>\n        voteTime <span class=\"token operator\">=</span> _voteTime<span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> decimalsMul <span class=\"token operator\">=</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">decimals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        minBalance <span class=\"token operator\">=</span> _minBalance<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>decimalsMul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        minTime <span class=\"token operator\">=</span> _minTime<span class=\"token punctuation\">;</span>\n\n        minBalanceLowerLimit <span class=\"token operator\">=</span> _minBalanceLowerLimit<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>decimalsMul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        minBalanceUpperLimit <span class=\"token operator\">=</span> _minBalanceUpperLimit<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>decimalsMul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        minTimeLowerLimit <span class=\"token operator\">=</span> _minTimeLowerLimit<span class=\"token punctuation\">;</span>\n        minTimeUpperLimit <span class=\"token operator\">=</span> _minTimeUpperLimit<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">MinimumBalanceSet</span><span class=\"token punctuation\">(</span>minBalance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">MinimumTimeSet</span><span class=\"token punctuation\">(</span>minTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        enableVoteCreation <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @notice Change required support to `@formatPct(_supportRequiredPct)`%\n    * @param _supportRequiredPct New required support\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">changeSupportRequiredPct</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span> _supportRequiredPct<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        <span class=\"token function\">authP</span><span class=\"token punctuation\">(</span>MODIFY_SUPPORT_ROLE<span class=\"token punctuation\">,</span> <span class=\"token function\">arr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span>_supportRequiredPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span>supportRequiredPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>minAcceptQuorumPct <span class=\"token operator\">&lt;=</span> _supportRequiredPct<span class=\"token punctuation\">,</span> ERROR_CHANGE_SUPPORT_PCTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_supportRequiredPct <span class=\"token operator\">&lt;</span> PCT_BASE<span class=\"token punctuation\">,</span> ERROR_CHANGE_SUPPORT_TOO_BIG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        supportRequiredPct <span class=\"token operator\">=</span> _supportRequiredPct<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">ChangeSupportRequired</span><span class=\"token punctuation\">(</span>_supportRequiredPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @notice Change minimum acceptance quorum to `@formatPct(_minAcceptQuorumPct)`%\n    * @param _minAcceptQuorumPct New acceptance quorum\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">changeMinAcceptQuorumPct</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span> _minAcceptQuorumPct<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        <span class=\"token function\">authP</span><span class=\"token punctuation\">(</span>MODIFY_QUORUM_ROLE<span class=\"token punctuation\">,</span> <span class=\"token function\">arr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span>_minAcceptQuorumPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span>minAcceptQuorumPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_minAcceptQuorumPct <span class=\"token operator\">&lt;=</span> supportRequiredPct<span class=\"token punctuation\">,</span> ERROR_CHANGE_QUORUM_PCTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        minAcceptQuorumPct <span class=\"token operator\">=</span> _minAcceptQuorumPct<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">ChangeMinQuorum</span><span class=\"token punctuation\">(</span>_minAcceptQuorumPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @notice Change minimum balance needed to create a vote to `_minBalance`\n    * @param _minBalance New minimum balance\n    */</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setMinBalance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _minBalance<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span>SET_MIN_BALANCE_ROLE<span class=\"token punctuation\">)</span> <span class=\"token function\">minBalanceCheck</span><span class=\"token punctuation\">(</span>_minBalance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//min balance can't be set to lower than 10k * 1 year</span>\n        minBalance <span class=\"token operator\">=</span> _minBalance<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">MinimumBalanceSet</span><span class=\"token punctuation\">(</span>_minBalance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @notice Change minimum time needed to pass between user's previous vote and a user creating a new vote\n    * @param _minTime New minumum time\n    */</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setMinTime</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _minTime<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span>SET_MIN_TIME_ROLE<span class=\"token punctuation\">)</span> <span class=\"token function\">minTimeCheck</span><span class=\"token punctuation\">(</span>_minTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//min time should be within initialized hardcoded limits</span>\n        minTime <span class=\"token operator\">=</span> _minTime<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">MinimumTimeSet</span><span class=\"token punctuation\">(</span>_minTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//later role will be set to 0x0 - noone</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">disableVoteCreationOnce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span>DISABLE_VOTE_CREATION<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        enableVoteCreation <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">enableVoteCreationOnce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span>ENABLE_VOTE_CREATION<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        enableVoteCreation <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @notice Create a new vote about \"`_metadata`\"\n    * @param _executionScript EVM script to be executed on approval\n    * @param _metadata Vote metadata\n    * @return voteId Id for newly created vote\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">newVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> _executionScript<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> _metadata<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span>CREATE_VOTES_ROLE<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> voteId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_newVote</span><span class=\"token punctuation\">(</span>_executionScript<span class=\"token punctuation\">,</span> _metadata<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @notice Create a new vote about \"`_metadata`\"\n    * @param _executionScript EVM script to be executed on approval\n    * @param _metadata Vote metadata\n    * @param _castVote Whether to also cast newly created vote\n    * @param _executesIfDecided Whether to also immediately execute newly created vote if decided\n    * @return voteId id for newly created vote\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">newVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> _executionScript<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> _metadata<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> _castVote<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> _executesIfDecided<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        <span class=\"token function\">auth</span><span class=\"token punctuation\">(</span>CREATE_VOTES_ROLE<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> voteId<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_newVote</span><span class=\"token punctuation\">(</span>_executionScript<span class=\"token punctuation\">,</span> _metadata<span class=\"token punctuation\">,</span> _castVote<span class=\"token punctuation\">,</span> _executesIfDecided<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @notice Vote a percentage value in favor of a vote\n    * @dev Initialization check is implicitly provided by `voteExists()` as new votes can only be\n    *      created via `newVote(),` which requires initialization\n    * @param _voteData Packed vote data containing both voteId and the vote in favor percentage (where 0 is no, and 1e18 is yes)\n    *          Vote data packing\n    * |  yeaPct  |  nayPct  |   voteId  |\n    * |  64b     |  64b     |   128b    |\n    * @param _supports Whether voter supports the vote (preserved for backward compatibility purposes)\n    * @param _executesIfDecided Whether the vote should execute its action if it becomes decided\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">vote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteData<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> _supports<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> _executesIfDecided<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token function\">voteExists</span><span class=\"token punctuation\">(</span><span class=\"token function\">_decodeData</span><span class=\"token punctuation\">(</span>_voteData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MAX_UINT_128<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> voteId <span class=\"token operator\">=</span> <span class=\"token function\">_decodeData</span><span class=\"token punctuation\">(</span>_voteData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> MAX_UINT_128<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> nayPct <span class=\"token operator\">=</span> <span class=\"token function\">_decodeData</span><span class=\"token punctuation\">(</span>_voteData<span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">,</span> MAX_UINT_64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> yeaPct <span class=\"token operator\">=</span> <span class=\"token function\">_decodeData</span><span class=\"token punctuation\">(</span>_voteData<span class=\"token punctuation\">,</span> <span class=\"token number\">192</span><span class=\"token punctuation\">,</span> MAX_UINT_64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//256位，前128为voteid，后128中的前64为否定票，后64为支持票</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">_canVote</span><span class=\"token punctuation\">(</span>voteId<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ERROR_CAN_NOT_VOTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>yeaPct <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> nayPct <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Keep backwards compatibility</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_supports<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                yeaPct <span class=\"token operator\">=</span> PCT_BASE<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                nayPct <span class=\"token operator\">=</span> PCT_BASE<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_supports <span class=\"token operator\">&amp;&amp;</span> yeaPct<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>nayPct<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> PCT_BASE<span class=\"token punctuation\">,</span> ERROR_MALFORMED_CONTINUOUS_VOTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token function\">_vote</span><span class=\"token punctuation\">(</span>voteId<span class=\"token punctuation\">,</span> yeaPct<span class=\"token punctuation\">,</span> nayPct<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _executesIfDecided<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n        * @notice Vote `@formatPct(_yeaPct)`% in favor and `@formatPct(_nayPct)`% against of vote #`_voteId`\n        * @dev Initialization check is implicitly provided by `voteExists()` as new votes can only be\n        *      created via `newVote(),` which requires initialization\n        * @param _voteId Id for vote\n        * @param _yeaPct Percentage of support, where 0 is no support, and 1e18 is total support\n        * @param _nayPct Percentage of opposition, where 0 is no oposition, and 1e18 is total oposition\n        * @param _executesIfDecided Whether the vote should execute its action if it becomes decided\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">votePct</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _yeaPct<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _nayPct<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> _executesIfDecided<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token function\">voteExists</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">_canVote</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ERROR_CAN_NOT_VOTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_yeaPct<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>_nayPct<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> PCT_BASE<span class=\"token punctuation\">,</span> ERROR_MALFORMED_CONTINUOUS_VOTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_vote</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">,</span> _yeaPct<span class=\"token punctuation\">,</span> _nayPct<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _executesIfDecided<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @notice Execute vote #`_voteId`\n    * @dev Initialization check is implicitly provided by `voteExists()` as new votes can only be\n    *      created via `newVote(),` which requires initialization\n    * @param _voteId Id for vote\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">executeVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token function\">voteExists</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_executeVote</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Forwarding fns</span>\n\n    <span class=\"token comment\">/**\n    * @notice Tells whether the Voting app is a forwarder or not\n    * @dev IForwarder interface conformance\n    * @return Always true\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">isForwarder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @notice Creates a vote to execute the desired action, and casts a support vote if possible\n    * @dev IForwarder interface conformance\n    * @param _evmScript Start vote with script\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">forward</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> _evmScript<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">canForward</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _evmScript<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ERROR_CAN_NOT_FORWARD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_newVote</span><span class=\"token punctuation\">(</span>_evmScript<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n        * @notice Tells whether `_sender` can forward actions or not\n        * @dev IForwarder interface conformance\n        * @param _sender Address of the account intending to forward an action\n        * @return True if the given address can create votes, false otherwise\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">canForward</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Note that `canPerform()` implicitly does an initialization check itself</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">canPerform</span><span class=\"token punctuation\">(</span>_sender<span class=\"token punctuation\">,</span> CREATE_VOTES_ROLE<span class=\"token punctuation\">,</span> <span class=\"token function\">arr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">canCreateNewVote</span><span class=\"token punctuation\">(</span>_sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Getter fns</span>\n\n    <span class=\"token comment\">/**\n        * @notice Tells whether a vote #`_voteId` can be executed or not\n        * @dev Initialization check is implicitly provided by `voteExists()` as new votes can only be\n        *      created via `newVote(),` which requires initialization\n        * @return True if the given vote can be executed, false otherwise\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">canExecute</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token function\">voteExists</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_canExecute</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n        * @notice Tells whether `_sender` can participate in the vote #`_voteId` or not\n        * @dev Initialization check is implicitly provided by `voteExists()` as new votes can only be\n        *      created via `newVote(),` which requires initialization\n        * @return True if the given voter can participate a certain vote, false otherwise\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">canVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _voter<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token function\">voteExists</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_canVote</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">,</span> _voter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">canCreateNewVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _sender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> enableVoteCreation <span class=\"token operator\">&amp;&amp;</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>_sender<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> minBalance <span class=\"token operator\">&amp;&amp;</span>  block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>minTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> lastCreateVoteTimes<span class=\"token punctuation\">[</span>_sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n        * @dev Return all information for a vote by its ID\n        * @param _voteId Vote identifier\n        * @return Vote open status\n        * @return Vote executed status\n        * @return Vote start date\n        * @return Vote snapshot block\n        * @return Vote support required\n        * @return Vote minimum acceptance quorum\n        * @return Vote yeas amount\n        * @return Vote nays amount\n        * @return Vote power\n        * @return Vote script\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">public</span>\n        <span class=\"token keyword\">view</span>\n        <span class=\"token function\">voteExists</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token builtin\">bool</span> open<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">bool</span> executed<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">uint64</span> startDate<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">uint64</span> snapshotBlock<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">uint64</span> supportRequired<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">uint64</span> minAcceptQuorum<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">uint256</span> yea<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">uint256</span> nay<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">uint256</span> votingPower<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">bytes</span> script\n        <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        Vote <span class=\"token keyword\">storage</span> vote_ <span class=\"token operator\">=</span> votes<span class=\"token punctuation\">[</span>_voteId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        open <span class=\"token operator\">=</span> <span class=\"token function\">_isVoteOpen</span><span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        executed <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>executed<span class=\"token punctuation\">;</span>\n        startDate <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>startDate<span class=\"token punctuation\">;</span>\n        snapshotBlock <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>snapshotBlock<span class=\"token punctuation\">;</span>\n        supportRequired <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>supportRequiredPct<span class=\"token punctuation\">;</span>\n        minAcceptQuorum <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>minAcceptQuorumPct<span class=\"token punctuation\">;</span>\n        yea <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>yea<span class=\"token punctuation\">;</span>\n        nay <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>nay<span class=\"token punctuation\">;</span>\n        votingPower <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>votingPower<span class=\"token punctuation\">;</span>\n        script <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>executionScript<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n        * @dev Return the state of a voter for a given vote by its ID\n        * @param _voteId Vote identifier\n        * @return VoterState of the requested voter for a certain vote\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getVoterState</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _voter<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token function\">voteExists</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span>VoterState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> votes<span class=\"token punctuation\">[</span>_voteId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>voters<span class=\"token punctuation\">[</span>_voter<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Internal fns</span>\n\n    <span class=\"token comment\">/**\n        * @dev Internal function to create a new vote\n        * @return voteId id for newly created vote\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_newVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> _executionScript<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> _metadata<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> _castVote<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> _executesIfDecided<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> voteId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">canCreateNewVote</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint64</span> snapshotBlock <span class=\"token operator\">=</span> <span class=\"token function\">getBlockNumber64</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// avoid double voting in this very block</span>\n        <span class=\"token builtin\">uint256</span> votingPower <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">totalSupplyAt</span><span class=\"token punctuation\">(</span>snapshotBlock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>votingPower <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ERROR_NO_VOTING_POWER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        voteId <span class=\"token operator\">=</span> votesLength<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n        Vote <span class=\"token keyword\">storage</span> vote_ <span class=\"token operator\">=</span> votes<span class=\"token punctuation\">[</span>voteId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        vote_<span class=\"token punctuation\">.</span>startDate <span class=\"token operator\">=</span> <span class=\"token function\">getTimestamp64</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        vote_<span class=\"token punctuation\">.</span>snapshotBlock <span class=\"token operator\">=</span> snapshotBlock<span class=\"token punctuation\">;</span>\n        vote_<span class=\"token punctuation\">.</span>supportRequiredPct <span class=\"token operator\">=</span> supportRequiredPct<span class=\"token punctuation\">;</span>\n        vote_<span class=\"token punctuation\">.</span>minAcceptQuorumPct <span class=\"token operator\">=</span> minAcceptQuorumPct<span class=\"token punctuation\">;</span>\n        vote_<span class=\"token punctuation\">.</span>votingPower <span class=\"token operator\">=</span> votingPower<span class=\"token punctuation\">;</span>\n        vote_<span class=\"token punctuation\">.</span>executionScript <span class=\"token operator\">=</span> _executionScript<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">StartVote</span><span class=\"token punctuation\">(</span>voteId<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _metadata<span class=\"token punctuation\">,</span> minBalance<span class=\"token punctuation\">,</span> minTime<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOfAt</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> snapshotBlock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        lastCreateVoteTimes<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getTimestamp64</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_castVote <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">_canVote</span><span class=\"token punctuation\">(</span>voteId<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">_vote</span><span class=\"token punctuation\">(</span>voteId<span class=\"token punctuation\">,</span> PCT_BASE<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _executesIfDecided<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n        * @dev Internal function to cast a vote. It assumes the queried vote exists.\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_vote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _yeaPct<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _nayPct<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _voter<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> _executesIfDecided<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        Vote <span class=\"token keyword\">storage</span> vote_ <span class=\"token operator\">=</span> votes<span class=\"token punctuation\">[</span>_voteId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        VoterState state <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>voters<span class=\"token punctuation\">[</span>_voter<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>state <span class=\"token operator\">==</span> VoterState<span class=\"token punctuation\">.</span>Absent<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can't change votes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// This could re-enter, though we can assume the governance token is not malicious</span>\n        <span class=\"token builtin\">uint256</span> balance <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOfAt</span><span class=\"token punctuation\">(</span>_voter<span class=\"token punctuation\">,</span> vote_<span class=\"token punctuation\">.</span>snapshotBlock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> voterStake <span class=\"token operator\">=</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">.</span>startDate<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>voteTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTimestamp64</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>voteTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>voterStake <span class=\"token operator\">></span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            voterStake <span class=\"token operator\">=</span> balance<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token builtin\">uint256</span> yea <span class=\"token operator\">=</span> voterStake<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_yeaPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>PCT_BASE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> nay <span class=\"token operator\">=</span> voterStake<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_nayPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>PCT_BASE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>yea <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            vote_<span class=\"token punctuation\">.</span>yea <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>yea<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>yea<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nay <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            vote_<span class=\"token punctuation\">.</span>nay <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>nay<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>nay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        vote_<span class=\"token punctuation\">.</span>voters<span class=\"token punctuation\">[</span>_voter<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> yea <span class=\"token operator\">==</span> nay <span class=\"token operator\">?</span> VoterState<span class=\"token punctuation\">.</span>Even <span class=\"token punctuation\">:</span> yea <span class=\"token operator\">></span> nay <span class=\"token operator\">?</span> VoterState<span class=\"token punctuation\">.</span>Yea <span class=\"token punctuation\">:</span> VoterState<span class=\"token punctuation\">.</span>Nay<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>yea <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">emit</span> <span class=\"token function\">CastVote</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">,</span> _voter<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> yea<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nay <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">emit</span> <span class=\"token function\">CastVote</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">,</span> _voter<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> nay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_executesIfDecided <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">_canExecute</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// We've already checked if the vote can be executed with `_canExecute()`</span>\n            <span class=\"token function\">_unsafeExecuteVote</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @dev Internal function to execute a vote. It assumes the queried vote exists.\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_executeVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">_canExecute</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ERROR_CAN_NOT_EXECUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_unsafeExecuteVote</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @dev Unsafe version of _executeVote that assumes you have already checked if the vote can be executed and exists\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_unsafeExecuteVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        Vote <span class=\"token keyword\">storage</span> vote_ <span class=\"token operator\">=</span> votes<span class=\"token punctuation\">[</span>_voteId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        vote_<span class=\"token punctuation\">.</span>executed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TODO: Consider input for voting scripts</span>\n        <span class=\"token function\">runScript</span><span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">.</span>executionScript<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">ExecuteVote</span><span class=\"token punctuation\">(</span>_voteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @dev Internal function to check if a vote can be executed. It assumes the queried vote exists.\n    * @return True if the given vote can be executed, false otherwise\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_canExecute</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        Vote <span class=\"token keyword\">storage</span> vote_ <span class=\"token operator\">=</span> votes<span class=\"token punctuation\">[</span>_voteId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">_isVoteOpen</span><span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">.</span>executed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">// Voting is already decided</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">_isValuePct</span><span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">.</span>yea<span class=\"token punctuation\">,</span> vote_<span class=\"token punctuation\">.</span>votingPower<span class=\"token punctuation\">,</span> vote_<span class=\"token punctuation\">.</span>supportRequiredPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">// Vote ended?</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">_isVoteOpen</span><span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// Has enough support?</span>\n        <span class=\"token builtin\">uint256</span> totalVotes <span class=\"token operator\">=</span> vote_<span class=\"token punctuation\">.</span>yea<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">.</span>nay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">_isValuePct</span><span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">.</span>yea<span class=\"token punctuation\">,</span> totalVotes<span class=\"token punctuation\">,</span> vote_<span class=\"token punctuation\">.</span>supportRequiredPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// Has min quorum?</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">_isValuePct</span><span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">.</span>yea<span class=\"token punctuation\">,</span> vote_<span class=\"token punctuation\">.</span>votingPower<span class=\"token punctuation\">,</span> vote_<span class=\"token punctuation\">.</span>minAcceptQuorumPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @dev Internal function to check if a voter can participate on a vote. It assumes the queried vote exists.\n    * @return True if the given voter can participate a certain vote, false otherwise\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_canVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _voteId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _voter<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        Vote <span class=\"token keyword\">storage</span> vote_ <span class=\"token operator\">=</span> votes<span class=\"token punctuation\">[</span>_voteId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_isVoteOpen</span><span class=\"token punctuation\">(</span>vote_<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOfAt</span><span class=\"token punctuation\">(</span>_voter<span class=\"token punctuation\">,</span> vote_<span class=\"token punctuation\">.</span>snapshotBlock<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @dev Internal function to check if a vote is still open\n    * @return True if the given vote is open, false otherwise\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_isVoteOpen</span><span class=\"token punctuation\">(</span>Vote <span class=\"token keyword\">storage</span> vote_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getTimestamp64</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> vote_<span class=\"token punctuation\">.</span>startDate<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>voteTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>vote_<span class=\"token punctuation\">.</span>executed<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n    * @dev Calculates whether `_value` is more than a percentage `_pct` of `_total`\n    */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_isValuePct</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _value<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _total<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _pct<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_total <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token builtin\">uint256</span> computedPct <span class=\"token operator\">=</span> _value<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>PCT_BASE<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _total<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> computedPct <span class=\"token operator\">></span> _pct<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n        * @dev Decodes data by performing bitwise operations.\n        * @param _value Value containing the data\n        * @param _shiftValue Number of bits to shift to the right\n        * @param _maskValue Number of bits to apply as a mask to the value\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_decodeData</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _value<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _shiftValue<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _maskValue<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_value <span class=\"token operator\">>></span> _shiftValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> _maskValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-4\"><a href=\"#Analyze-4\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>为Governance合约，可以创建新的proposal并进行投票，投票权中以veCRV.balanceAt[voter][snapshot block(start block)]计算，创建新的提案时，创建者可以选择是否将自己的的全部票数对所创建的提案进行投票，投票时候会判断是否满足执行条件，如果满足则执行</p>\n<p>执行过程是，调用合约的runScript函数，将创建时的运行脚本进行运行，首先delegatecall合约callScript，合约callScript再call向target合约执行对应的oprate</p>\n","text":" Flow chart Curve TokenCode# @version 0.2.4 \"\"\" @title Curve DAO Token @author Curve Finance @license MIT @notice ERC20 with piecewise-linea...","link":"","photos":[],"count_time":{"symbolsCount":"107k","symbolsTime":"1:37"},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Flow-chart\"><span class=\"toc-text\">Flow chart</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Curve-Token\"><span class=\"toc-text\">Curve Token</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze\"><span class=\"toc-text\">Analyze</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Voting-Escrow\"><span class=\"toc-text\">Voting Escrow</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-1\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-1\"><span class=\"toc-text\">Analyze</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Gauge-Controller\"><span class=\"toc-text\">Gauge Controller</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-2\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-2\"><span class=\"toc-text\">Analyze</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#One-Gauge-Gauge-0\"><span class=\"toc-text\">One Gauge(Gauge[0])</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-3\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-3\"><span class=\"toc-text\">Analyze</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Voting\"><span class=\"toc-text\">Voting</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-4\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-4\"><span class=\"toc-text\">Analyze</span></a></li></ol></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"The 2nd Trusted Chain--Blockchain Attack and Defense Competition","uid":"9588ceed135f9fd2fe04406d687effc0","slug":"The 2nd Trusted Chain","date":"2022-08-20T07:50:42.857Z","updated":"2022-08-20T07:50:42.857Z","comments":true,"path":"api/articles/The 2nd Trusted Chain.json","keywords":null,"cover":null,"text":"总共十道题，事件原因总共打了五道题（4，5，6，8，9），但是团队成员间的配合，实现了全解，后续其他题目的wp我日后更新上来 OwnerBuyCodepragma solidity ^0.5.0; import \"./contracts/ERC20.sol\"; import \"....","link":"","photos":[],"count_time":{"symbolsCount":"53k","symbolsTime":"49 mins."},"categories":[],"tags":[{"name":"区块链 ctf","slug":"区块链-ctf","count":9,"path":"api/tags/区块链-ctf.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"real world ctf->TransferFrom","uid":"0d3f2f790504b07f55c87ed185dd8ea8","slug":"real world ctf","date":"2022-08-03T06:30:11.232Z","updated":"2022-08-03T06:30:11.232Z","comments":true,"path":"api/articles/real world ctf.json","keywords":null,"cover":null,"text":"real world ctf TransferFrom复现 real world ctf 题目要求：nc 47.102.47.140 20000，We design a pretty easy contract challenge. Enjoy it! Your goal is ...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"区块链 ctf","slug":"区块链-ctf","count":9,"path":"api/tags/区块链-ctf.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}