{"title":"Find abnormal transactions","uid":"6aeab2a5cd77c3106ff796f4ea68ab90","slug":"Find-abnormal-transactions","date":"2022-08-02T02:37:38.068Z","updated":"2022-12-16T07:30:59.247Z","comments":true,"path":"api/articles/Find-abnormal-transactions.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/image-20221216153041111.png","content":"<p>一道新颖的区块链安全方向ctf题目，交易详情：<a href=\"https://kovan.etherscan.io/address/0x16537776395108789FE5cC5420545CAb210a7D30\">https://kovan.etherscan.io/address/0x16537776395108789FE5cC5420545CAb210a7D30</a></p>\n<h1 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目描述：</p>\n<p>The funds are lost somewhere on this platform. Find the missing funds from draftdown labs. We need it to fund our mission. Use our script to validate the transaction.<br>Note: No brute force or fuzzing is needed for the search! Just use your eyes.<br>Use CYBERLEAGUE{} flag format</p>\n<p>Our motherland have engaged a vendor to develop smart contract embedded in our fuel tank. We wanna make sure that the amount of fuel is recorded in an immutable blockchain. (In russian) Chert by pobral etikh idiotov! The smart contract is broken and our funds are stolen. Investigate and find out the culprite immediately! \\r\\nSmart contract link: <a href=\"https://kovan.etherscan.io/address/0x16537776395108789FE5cC5420545CAb210a7D30&quot;\">https://kovan.etherscan.io/address/0x16537776395108789FE5cC5420545CAb210a7D30&quot;</a></p></blockquote>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IERC20</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> amount\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">Address</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">isContract</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> account<span class=\"token punctuation\">.</span>code<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sendValue</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> recipient<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">>=</span> amount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address: insufficient balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> recipient<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amount<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address: unable to send value, recipient may have reverted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">functionCall</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">functionCall</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address: low-level call failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">functionCall</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> errorMessage\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">functionCallWithValue</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> errorMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">functionCallWithValue</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> value\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">functionCallWithValue</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address: low-level call with value failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">functionCallWithValue</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> errorMessage\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">>=</span> value<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address: insufficient balance for call\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isContract</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address: call to non-contract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> returndata<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">verifyCallResult</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> returndata<span class=\"token punctuation\">,</span> errorMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">functionStaticCall</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">functionStaticCall</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address: low-level static call failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">functionStaticCall</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> errorMessage\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isContract</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address: static call to non-contract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> returndata<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">staticcall</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">verifyCallResult</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> returndata<span class=\"token punctuation\">,</span> errorMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">functionDelegateCall</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">functionDelegateCall</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address: low-level delegate call failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">functionDelegateCall</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> errorMessage\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isContract</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address: delegate call to non-contract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> returndata<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">verifyCallResult</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> returndata<span class=\"token punctuation\">,</span> errorMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">verifyCallResult</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> returndata<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> errorMessage\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> returndata<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Look for revert reason and bubble it up if present</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>returndata<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// The easiest way to bubble the revert reason is using memory via assembly</span>\n\n                <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">let</span> returndata_size <span class=\"token operator\">:=</span> <span class=\"token function\">mload</span><span class=\"token punctuation\">(</span>returndata<span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">revert</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> returndata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> returndata_size<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">revert</span><span class=\"token punctuation\">(</span>errorMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">SafeERC20</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span>\n        IERC20 token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> value\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_callOptionalReturn</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSelector</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>transfer<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n        IERC20 token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> value\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_callOptionalReturn</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSelector</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>transferFrom<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safeApprove</span><span class=\"token punctuation\">(</span>\n        IERC20 token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> value\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            <span class=\"token punctuation\">(</span>value <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"SafeERC20: approve from non-zero to non-zero allowance\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_callOptionalReturn</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSelector</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>approve<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safeIncreaseAllowance</span><span class=\"token punctuation\">(</span>\n        IERC20 token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> value\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> newAllowance <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_callOptionalReturn</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSelector</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>approve<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> newAllowance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safeDecreaseAllowance</span><span class=\"token punctuation\">(</span>\n        IERC20 token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> value\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        unchecked <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">uint256</span> oldAllowance <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>oldAllowance <span class=\"token operator\">>=</span> value<span class=\"token punctuation\">,</span> <span class=\"token string\">\"SafeERC20: decreased allowance below zero\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">uint256</span> newAllowance <span class=\"token operator\">=</span> oldAllowance <span class=\"token operator\">-</span> value<span class=\"token punctuation\">;</span>\n            <span class=\"token function\">_callOptionalReturn</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSelector</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>approve<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> newAllowance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_callOptionalReturn</span><span class=\"token punctuation\">(</span>IERC20 token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> returndata <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">functionCall</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token string\">\"SafeERC20: low-level call failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>returndata<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Return data is optional</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>returndata<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SafeERC20: ERC20 operation did not succeed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\nabstract <span class=\"token keyword\">contract</span> <span class=\"token class-name\">Context</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> virtual <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_msgData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> virtual <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> msg<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nabstract <span class=\"token keyword\">contract</span> <span class=\"token class-name\">Pausable</span> <span class=\"token keyword\">is</span> Context <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Paused</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Unpaused</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">bool</span> <span class=\"token keyword\">private</span> _paused<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        _paused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">paused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> virtual <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _paused<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">whenNotPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">paused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pausable: paused\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">whenPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">paused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pausable: not paused\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual whenNotPaused <span class=\"token punctuation\">&#123;</span>\n        _paused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Paused</span><span class=\"token punctuation\">(</span><span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_unpause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual whenPaused <span class=\"token punctuation\">&#123;</span>\n        _paused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Unpaused</span><span class=\"token punctuation\">(</span><span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IOracle</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getTokenPrice</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Market</span> <span class=\"token keyword\">is</span> Pausable <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeERC20</span> <span class=\"token keyword\">for</span> IERC20<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Position</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> locked<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> lockedToken<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> borrowed<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> borrowedToken<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> oracle<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> liquidationThreshold<span class=\"token punctuation\">;</span> <span class=\"token comment\">// in bps</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> liquidationBonus<span class=\"token punctuation\">;</span> <span class=\"token comment\">// in bps</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> <span class=\"token keyword\">internal</span> WETH <span class=\"token operator\">=</span> <span class=\"token number\">0xd0A1E359811322d97991E03f863a0C30C2cF029C</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">constant</span> <span class=\"token keyword\">internal</span> ONE <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> allowedLockTokens<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> allowedBorrowTokens<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint8</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> tokenDecimals<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> Position<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> positions<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">CreatePosition</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Borrow</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Repay</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Liquidated</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> liquidator<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">onlyOwner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> owner<span class=\"token punctuation\">,</span> <span class=\"token string\">\"onlyOwner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _oracle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        oracle <span class=\"token operator\">=</span> _oracle<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getTokenPrice</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> token <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> ONE<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> price<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">IOracle</span><span class=\"token punctuation\">(</span>oracle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTokenPrice</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> price<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getHealthFactor</span><span class=\"token punctuation\">(</span>Position <span class=\"token keyword\">storage</span> position<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> lockedTokenPrice <span class=\"token operator\">=</span> <span class=\"token function\">getTokenPrice</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> borrowedTokenPrice <span class=\"token operator\">=</span> <span class=\"token function\">getTokenPrice</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> scaledLocked <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>locked <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> tokenDecimals<span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> scaledBorrowed <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>borrowed <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> tokenDecimals<span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> lockedValue <span class=\"token operator\">=</span> scaledLocked <span class=\"token operator\">*</span> lockedTokenPrice <span class=\"token operator\">/</span> ONE<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> borrowedValue <span class=\"token operator\">=</span> scaledBorrowed <span class=\"token operator\">*</span> borrowedTokenPrice <span class=\"token operator\">/</span> ONE<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>borrowedValue <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> ONE<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> healthFactor <span class=\"token operator\">=</span> lockedValue <span class=\"token operator\">*</span> liquidationThreshold <span class=\"token operator\">*</span> ONE <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>borrowedValue <span class=\"token operator\">*</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> healthFactor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getHealthFactor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pid <span class=\"token operator\">&lt;</span> positions<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"InvalidPID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Position <span class=\"token keyword\">storage</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getHealthFactor</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">isPositionSafe</span><span class=\"token punctuation\">(</span>Position <span class=\"token keyword\">storage</span> position<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> healthFactor <span class=\"token operator\">=</span> <span class=\"token function\">getHealthFactor</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> healthFactor <span class=\"token operator\">>=</span> ONE<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">isPositionSafe</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pid <span class=\"token operator\">&lt;</span> positions<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"InvalidPID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Position <span class=\"token keyword\">storage</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">isPositionSafe</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createPosition</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> lockedToken<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> borrowedToken<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> whenNotPaused <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>allowedLockTokens<span class=\"token punctuation\">[</span>lockedToken<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> allowedBorrowTokens<span class=\"token punctuation\">[</span>borrowedToken<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"InvalidToken\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> pid <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        Position <span class=\"token keyword\">memory</span> position <span class=\"token operator\">=</span> <span class=\"token function\">Position</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            locked<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            lockedToken<span class=\"token punctuation\">:</span> lockedToken<span class=\"token punctuation\">,</span>\n            borrowed<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            borrowedToken<span class=\"token punctuation\">:</span> borrowedToken\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        positions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">CreatePosition</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> whenNotPaused <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pid <span class=\"token operator\">&lt;</span> positions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"InvalidPID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Position <span class=\"token keyword\">storage</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        position<span class=\"token punctuation\">.</span>locked <span class=\"token operator\">+=</span> amount<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">receiveToken</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Lock</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> whenNotPaused <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pid <span class=\"token operator\">&lt;</span> positions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"InvalidPID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Position <span class=\"token keyword\">storage</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        position<span class=\"token punctuation\">.</span>locked <span class=\"token operator\">-=</span> amount<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">sendToken</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isPositionSafe</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"UnsafePosition\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Unlock</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">borrow</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> whenNotPaused <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pid <span class=\"token operator\">&lt;</span> positions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"InvalidPID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Position <span class=\"token keyword\">storage</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        position<span class=\"token punctuation\">.</span>borrowed <span class=\"token operator\">+=</span> amount<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">sendToken</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isPositionSafe</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"UnsafePosition\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Borrow</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">repay</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> whenNotPaused <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pid <span class=\"token operator\">&lt;</span> positions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"InvalidPID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Position <span class=\"token keyword\">storage</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        position<span class=\"token punctuation\">.</span>borrowed <span class=\"token operator\">-=</span> amount<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">receiveToken</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Repay</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">liquidate</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> whenNotPaused <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pid <span class=\"token operator\">&lt;</span> positions<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"InvalidPID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Position <span class=\"token keyword\">storage</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isPositionSafe</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"SafePosition\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> borrowedTokenPrice <span class=\"token operator\">=</span> <span class=\"token function\">getTokenPrice</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> lockedTokenPrice <span class=\"token operator\">=</span> <span class=\"token function\">getTokenPrice</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> scaledAmount <span class=\"token operator\">=</span> amount <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> tokenDecimals<span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> borrowedValue <span class=\"token operator\">=</span> scaledAmount <span class=\"token operator\">*</span> borrowedTokenPrice <span class=\"token operator\">/</span> ONE<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> scaledLiquidated <span class=\"token operator\">=</span> borrowedValue <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10000</span> <span class=\"token operator\">+</span> liquidationBonus<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> ONE <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>lockedTokenPrice <span class=\"token operator\">*</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> liquidated <span class=\"token operator\">=</span> scaledLiquidated <span class=\"token operator\">/</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> tokenDecimals<span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>liquidated <span class=\"token operator\">></span> position<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">)</span> liquidated <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>locked<span class=\"token punctuation\">;</span>\n        position<span class=\"token punctuation\">.</span>borrowed <span class=\"token operator\">-=</span> amount<span class=\"token punctuation\">;</span>\n        position<span class=\"token punctuation\">.</span>locked <span class=\"token operator\">-=</span> liquidated<span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">receiveToken</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">sendToken</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">,</span> liquidated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Liquidated</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">,</span> pid<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">,</span> liquidated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">receiveToken</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> amount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"NotEnoughFunds\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sendToken</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>token <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amount<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> <span class=\"token string\">\"SendETHError\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setAllowedLockToken</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        allowedLockTokens<span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setAllowedBorrowToken</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        allowedBorrowTokens<span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setTokenDecimals</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> decimals<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        tokenDecimals<span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> decimals<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setLiquidationThreshold</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _liquidationThreshold<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        liquidationThreshold <span class=\"token operator\">=</span> _liquidationThreshold<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setLiquidationBonus</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _liquidationBonus<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        liquidationBonus <span class=\"token operator\">=</span> _liquidationBonus<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//  0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD dai  demical:18</span>\n<span class=\"token comment\">//  0x13512979ADE267AB5100878E2e0f485B568328a4 usdt demical:6</span>\n<span class=\"token comment\">//  0xad5ce863ae3e4e9394ab43d4ba0d80f419f61789 link demical:18</span>\n<span class=\"token comment\">//  0xd1b98b6607330172f1d991521145a22bce793277 btc demical:8</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"analyze\"><a href=\"#analyze\" class=\"headerlink\" title=\"analyze\"></a>analyze</h1><p>做这道题的时候简单学习了一下defi中关于清算的部分，虽然在做题的过程中基本用不到，但是对于理解代码总体的功能非常有帮助，参考：<a href=\"https://new.qq.com/omn/20210223/20210223A0BIBO00.html\">https://new.qq.com/omn/20210223/20210223A0BIBO00.html</a></p>\n<p>在给出的IOracle合约中可以获取代币价格，可以发现usdt的价格为0，所以在计算时borrowvalue就会一直是0，所以issafeposition会一直返回true，就可以一直进行borrow并且不用repay而不会被清算，所以凡是借出usdt的交易都是异常交易，同时，创建这些异常position的交易也属于异常交易。</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">getHealthFactor</span><span class=\"token punctuation\">(</span>Position <span class=\"token keyword\">storage</span> position<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token builtin\">uint</span> lockedTokenPrice <span class=\"token operator\">=</span> <span class=\"token function\">getTokenPrice</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> borrowedTokenPrice <span class=\"token operator\">=</span> <span class=\"token function\">getTokenPrice</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> scaledLocked <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>locked <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> tokenDecimals<span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">.</span>lockedToken<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> scaledBorrowed <span class=\"token operator\">=</span> position<span class=\"token punctuation\">.</span>borrowed <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span><span class=\"token number\">18</span> <span class=\"token operator\">-</span> tokenDecimals<span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">.</span>borrowedToken<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> lockedValue <span class=\"token operator\">=</span> scaledLocked <span class=\"token operator\">*</span> lockedTokenPrice <span class=\"token operator\">/</span> ONE<span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> borrowedValue <span class=\"token operator\">=</span> scaledBorrowed <span class=\"token operator\">*</span> borrowedTokenPrice <span class=\"token operator\">/</span> ONE<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>borrowedValue <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> ONE<span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> healthFactor <span class=\"token operator\">=</span> lockedValue <span class=\"token operator\">*</span> liquidationThreshold <span class=\"token operator\">*</span> ONE <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>borrowedValue <span class=\"token operator\">*</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">return</span> healthFactor<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token keyword\">function</span> <span class=\"token function\">getHealthFactor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pid <span class=\"token operator\">&lt;</span> positions<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"InvalidPID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       Position <span class=\"token keyword\">storage</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">return</span> <span class=\"token function\">getHealthFactor</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token keyword\">function</span> <span class=\"token function\">isPositionSafe</span><span class=\"token punctuation\">(</span>Position <span class=\"token keyword\">storage</span> position<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token builtin\">uint</span> healthFactor <span class=\"token operator\">=</span> <span class=\"token function\">getHealthFactor</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">return</span> healthFactor <span class=\"token operator\">>=</span> ONE<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token keyword\">function</span> <span class=\"token function\">isPositionSafe</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> pid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pid <span class=\"token operator\">&lt;</span> positions<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"InvalidPID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       Position <span class=\"token keyword\">storage</span> position <span class=\"token operator\">=</span> positions<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">return</span> <span class=\"token function\">isPositionSafe</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>分析这段代码可以看出来，只要borrow为0，结果将会一直返回true</p>\n<p>0xb09c603ea024b4435d74db07d1f728a80e6e36ae：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205091316461.png\"></p>\n<p>0x941c73fBB405a9024C08A52cBEeAF80D02d2B1A1：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205091318209.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205091317840.png\"></p>\n<p>0x488daD0ce94f34e33069b8Ae5E16826b63f0F575：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205091319210.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205091319962.png\"></p>\n<p>—0x13512979ADE267AB5100878E2e0f485B568328a4是usdt代币的合约地址—</p>\n<p>确定了异常posotion的user和pid，浏览hash判断参数就可以了。17个borrow+5个createPosition共22个hash</p>\n<h1 id=\"solve\"><a href=\"#solve\" class=\"headerlink\" title=\"solve\"></a>solve</h1><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> hashlib\n\ntxs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n<span class=\"token string\">'0xf8cb1d747b53bbd4b4346eb8522fa3df36025dafedeb5b19bf54a9fff946ae8a'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x95bc3879debc5ffbe9932d5a60dd53146374e7dd553fef5f00152371bbb75f38'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x0635eeabe77d53672c227c0938f73f43c8f43b984e2c02d4e4a7b4e4d9740a09'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0xcfb692d772f8acb90bc14a5da06f72c8ed9d871bbe76787ac0fa8a40e1ef11aa'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x6ce3f133f0d925b125b6d8861b582cfd3b9abc8df4ce6ecd9607751b5fa6e796'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x6287be53eb87e475cfdabfe85c7db800c5262a469a4c270e55b8ddf481b6dae3'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0xdd588f3c2a9f25aa57d27e3257fe93882cf211470bd92e56b5271f95ab3c955f'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x8b0b5a0d65a1272d811f1db90cf7a24e43c64cf0d4767a78accf0dd9afce954c'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x3a109f0754113742eaae4bad747261aa7d9a1a9e2fb4d12704631b333b790006'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x6b52684eda64076701e647911f55019fb18b30d980554dd2df5ee0e777506c3a'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0xdb3f9da9cc6600ba9c2ca0685cd5c29818dae632fb3be65d530ef404b3ade202'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x13240bc2ce9333db092704b057083d23fa4e365b1b049ea839eb9955591ffd4d'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x657b24138cea98eca019de351d60c69210334926c46d9bfb7a59f5c0db5d16f4'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x6705735d1d4c526cd5db6c5810de6b11ba196fb93715a67ae855d037bfeaeaec'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x8beb80929a026d68fe9e80d0e46dadf43f9b8c68dc1db7e53b996e9654a3c71c'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0xea24903d0a72b56457b88bdfd842f4065b0371b9c118dae08aca8dadb43c81b4'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0x99a5722bb73a73c6b47967f9b457e888d6503b0f9e1bf23fbf36de56ebad1522'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0xef40506ae849c17dfbb75f97331860750217602f9c0a9c7718e50d04f0e233b8'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0xc20e2ac5792a3350febd9a7e62527faccf4e07de2c1454572380e6f629ecca18'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0xb1f54b9969ba60075775a3168d2ad16482e672cbf386ba4f9d6f433fe9d86fbe'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0xcc8ff167cc6a1014f5c4b7445f26b17f68cc95bcc0c578c5330278dda8229d0b'</span><span class=\"token punctuation\">,</span>\n<span class=\"token string\">'0xf7a6068687cfd85a24c8fd169c3c95133ff7a957c843171733902925990b4b74'</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token triple-quoted-string string\">'''\ne.g.,\ntxs = [\n    '0x0000000000000000000000000000000000000000000000000000000000000000',\n    '0x0000000000000000000000000000000000000000000000000000000000000001',\n    '0x0000000000000000000000000000000000000000000000000000000000000002',\n    ...\n]\n'''</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>txs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>txs<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">22</span>\nsalt <span class=\"token operator\">=</span> <span class=\"token string\">b'hint: find abnormal transactions'</span>\nm <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> tx_hash <span class=\"token keyword\">in</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span>txs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>tx_hash<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">66</span> <span class=\"token keyword\">and</span> tx_hash<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0x'</span>\n    m<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>salt <span class=\"token operator\">+</span> tx_hash<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">assert</span> m<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'bf22a2d63563554c'</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flag&#123;'</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&#125;'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>运行得到flag：flag{bf22a2d63563554c2073f9480867794e17297ce17c7ec4cc3502979828e4253f}</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205091322122.png\"></p>\n","text":"一道新颖的区块链安全方向ctf题目，交易详情：https://kovan.etherscan.io/address/0x16537776395108789FE5cC5420545CAb210a7D30 code 题目描述： The funds are lost somewhere...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#code\"><span class=\"toc-text\">code</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#analyze\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#solve\"><span class=\"toc-text\">solve</span></a></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Understand create and create2 algorithms according to two challenges","uid":"e5737740b784095b2d07fd3a962c9c2b","slug":"Understand create and create2 algorithms according to two challenges","date":"2022-08-02T02:38:41.514Z","updated":"2022-12-16T07:41:26.789Z","comments":true,"path":"api/articles/Understand create and create2 algorithms according to two challenges.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/image-20221216154105583.png","text":"0x00 合约地址计算合约地址按照一定的规律计算而来，所以在合约部署之前即可计算出合约地址。 地址计算有两种方式 Create : Web3.sha3(rlp.encode(deployingAddress, nonce))[12:] Create2 : Web3.keccak(...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Capture the ether","uid":"952425ce98802e57d25bf360642d44c0","slug":"capture the ether","date":"2022-08-02T02:04:12.275Z","updated":"2022-12-16T07:18:18.444Z","comments":true,"path":"api/articles/capture the ether.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202208011833656.png","text":"题库地址：https://capturetheether.com/ warmup1.Deploy a contractCodepragma solidity ^0.4.21; contract DeployChallenge &#123; // This tells the Ca...","link":"","photos":[],"count_time":{"symbolsCount":"34k","symbolsTime":"31 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}