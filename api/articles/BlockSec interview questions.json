{"title":"BlockSec interview questions","uid":"c4192ee28bd2d2701353c24c31e1eb4a","slug":"BlockSec interview questions","date":"2022-08-02T02:51:50.704Z","updated":"2022-12-05T18:41:38.733Z","comments":true,"path":"api/articles/BlockSec interview questions.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/image-20221206022747242.png","content":"<h1 id=\"1-任务\"><a href=\"#1-任务\" class=\"headerlink\" title=\"1.任务\"></a>1.任务</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>任务要求：用brownie（python）或者hardhat（js）这种框架，用alchemy提供的历史数据功能，写一个在uniswap v2上借flash loan的合约，flash loan借出来之后用uniswap v3的router上做一次swap（uniswap v2选ETH&#x2F;USDC的pair，借ETH，用v3的router swap），最后revert</p></blockquote>\n<p>首先编写合约</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> abicoder v2<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">$</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV2_FACTORY <span class=\"token operator\">=</span> <span class=\"token number\">0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// rinkeby</span>\n\t<span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV2_ROUTER02 <span class=\"token operator\">=</span> <span class=\"token number\">0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// rinkeby</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> weth <span class=\"token operator\">=</span> <span class=\"token number\">0xc778417E063141139Fce010982780140Aa0cD5Ab</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// rinkeby</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> usdc <span class=\"token operator\">=</span> <span class=\"token number\">0xeb8f08a975Ab53E34D8a0330E0D34de942C95926</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//rinkeby</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV3_SWAPROUTER <span class=\"token operator\">=</span> <span class=\"token number\">0xE592427A0AEce92De3Edee1F18E0157C05861564</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// rinkeby</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> pair <span class=\"token operator\">=</span> <span class=\"token number\">0xB1bC33810F9e6E8D417925236991Fcc5012AaaE8</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//rinkeby  eth/usdc</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">BorrowAndSwap</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> pair<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> factory<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> v2router<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> v3router<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> WETH9<span class=\"token operator\">=</span>$<span class=\"token punctuation\">.</span>weth<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> USDC<span class=\"token operator\">=</span>$<span class=\"token punctuation\">.</span>usdc<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> balan<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        factory<span class=\"token operator\">=</span>$<span class=\"token punctuation\">.</span>UniswapV2_FACTORY<span class=\"token punctuation\">;</span>\n        v2router<span class=\"token operator\">=</span>$<span class=\"token punctuation\">.</span>UniswapV2_ROUTER02<span class=\"token punctuation\">;</span>\n        v3router<span class=\"token operator\">=</span>$<span class=\"token punctuation\">.</span>UniswapV3_SWAPROUTER<span class=\"token punctuation\">;</span>\n        pair<span class=\"token operator\">=</span>$<span class=\"token punctuation\">.</span>pair<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">BorrowOneTokenAndSwap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flash loan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//借出eth</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//借，并去uniswap v3进行swap</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">DoSwap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Must pass non 0 ETH amount\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> deadline <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">+</span> <span class=\"token number\">15</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> tokenIn <span class=\"token operator\">=</span> WETH9<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> tokenOut <span class=\"token operator\">=</span> USDC<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint24</span> fee <span class=\"token operator\">=</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> recipient <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountIn <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountOutMinimum <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint160</span> sqrtPriceLimitX96 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  \n        ISwapRouter<span class=\"token punctuation\">.</span>ExactInputSingleParams <span class=\"token keyword\">memory</span> params <span class=\"token operator\">=</span> ISwapRouter<span class=\"token punctuation\">.</span><span class=\"token function\">ExactInputSingleParams</span><span class=\"token punctuation\">(</span>\n            tokenIn<span class=\"token punctuation\">,</span>\n            tokenOut<span class=\"token punctuation\">,</span>\n            fee<span class=\"token punctuation\">,</span>\n            recipient<span class=\"token punctuation\">,</span>\n            deadline<span class=\"token punctuation\">,</span>\n            amountIn<span class=\"token punctuation\">,</span>\n            amountOutMinimum<span class=\"token punctuation\">,</span>\n            sqrtPriceLimitX96\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n        <span class=\"token function\">IUniswapRouter</span><span class=\"token punctuation\">(</span>v3router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exactInputSingle<span class=\"token punctuation\">&#123;</span> value<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IUniswapRouter</span><span class=\"token punctuation\">(</span>v3router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">refundETH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span> value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> <span class=\"token string\">\"refund failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">uniswapV2Call</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _amount1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> _data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> fee<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_amount0<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">997</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH9</span><span class=\"token punctuation\">(</span>WETH9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>_amount0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>DoSwap<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> _amount0<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH9</span><span class=\"token punctuation\">(</span>WETH9<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span> value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> token0 <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IERC20</span><span class=\"token punctuation\">&#123;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> amount\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Pair</span> <span class=\"token keyword\">is</span> IERC20\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">token1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">price0CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _price0CumulativeLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">price1CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _price1CumulativeLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint32</span> _blockTimestampLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapV2Router</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">WETH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">addLiquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _tokenB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountADesired<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBDesired<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountAMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _tokenB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountAMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> _path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> _amounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapETHForExactTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> _path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> _amounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _reserveOut<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapV2Factory</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">PairCreated</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> token0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> token1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">feeTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">feeToSetter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getPair</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allPairs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allPairsLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createPair</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setFeeTo</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setFeeToSetter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapV3SwapCallback</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">uniswapV3SwapCallback</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">int256</span> amount0Delta<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">int256</span> amount1Delta<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ISwapRouter</span> <span class=\"token keyword\">is</span> IUniswapV3SwapCallback <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">ExactInputSingleParams</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> tokenIn<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> tokenOut<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint24</span> fee<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> recipient<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> deadline<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountIn<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountOutMinimum<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint160</span> sqrtPriceLimitX96<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">exactInputSingle</span><span class=\"token punctuation\">(</span>ExactInputSingleParams <span class=\"token keyword\">calldata</span> params<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">ExactInputParams</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">bytes</span> path<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> recipient<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> deadline<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountIn<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountOutMinimum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">exactInput</span><span class=\"token punctuation\">(</span>ExactInputParams <span class=\"token keyword\">calldata</span> params<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">ExactOutputSingleParams</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> tokenIn<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> tokenOut<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint24</span> fee<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> recipient<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> deadline<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountOut<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountInMaximum<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint160</span> sqrtPriceLimitX96<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">exactOutputSingle</span><span class=\"token punctuation\">(</span>ExactOutputSingleParams <span class=\"token keyword\">calldata</span> params<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amountIn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">ExactOutputParams</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">bytes</span> path<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> recipient<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> deadline<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountOut<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountInMaximum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">exactOutput</span><span class=\"token punctuation\">(</span>ExactOutputParams <span class=\"token keyword\">calldata</span> params<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amountIn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapRouter</span> <span class=\"token keyword\">is</span> ISwapRouter <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">refundETH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IWETH9</span> <span class=\"token keyword\">is</span> IERC20 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>配置环境，连接至rinkeby测试网络（配合alchemyapi）</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token literal-property property\">networks</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token literal-property property\">rinkeby</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://eth-rinkeby.alchemyapi.io/v2/API KEY</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n     <span class=\"token literal-property property\">accounts</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"私钥\"</span><span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>部署并进行对应函数调用</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> hre <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hardhat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> wContract <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> ethers<span class=\"token punctuation\">.</span><span class=\"token function\">getContractFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BorrowAndSwap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> contr <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> wContract<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">await</span> contr<span class=\"token punctuation\">.</span><span class=\"token function\">deployed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"contr deployed to:\"</span><span class=\"token punctuation\">,</span> contr<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> BorrowOneTokenAndSwapTx <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> contr<span class=\"token punctuation\">.</span><span class=\"token function\">BorrowOneTokenAndSwap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> BorrowOneTokenAndSwapTx<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"transaction hash:\"</span><span class=\"token punctuation\">,</span>BorrowOneTokenAndSwapTx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    process<span class=\"token punctuation\">.</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>下图为不revert情况下的链上测试数据</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202206191526017.png\"></p>\n<p>下图为加上require(false,”success”)代码的hardhat框架下结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202206191524315.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202206191524948.png\"></p>\n<h1 id=\"2-面试总结\"><a href=\"#2-面试总结\" class=\"headerlink\" title=\"2.面试总结\"></a>2.面试总结</h1><p>问题：</p>\n<p>1.区块链的基础知识，比如产生这个概念的动机</p>\n<p>2.关于evm特性，比如create和create2的不同，delegatecall的处理这些</p>\n<p>3.有没有看过evm虚拟机本身的实现代码，指的是go-ethereum（没有了解过）</p>\n<p>4.是否熟悉go语言（都在go化，有必要学好go语言）</p>\n<p>5.对于defi的相关了解，更趋向于代码和原理层面</p>\n<p>6.漏洞扫描工具的思路（问的时候我是不懂的，大家可以着手布局一下这方面的知识）</p>\n<p>7.另外就是一些工具的使用，比如说alchemy提供的archive node（不是很了解，正在熟悉中）</p>\n<p>8.最终给出的测试，用brownie（python）或者hardhat（js）这种框架，用alchemy提供的历史数据功能，写一个在uniswap v2上借flash loan的合约，flash loan借出来之后用uniswap v3的router上做一次swap（uniswap v2选ETH&#x2F;USDC的pair，借ETH，用v3的router swap），最后revert</p>\n<p>总结一下：</p>\n<p>①相对而言更看重学习能力，大家要注重提升自己的学习能力，新知识的适应能力②对于一些比较常见的evm特性一定要掌握③学习go语言④了解defi的知识（相对比较难，但是很重要）⑤着手了解一下自己写工具之类的事情，有过工具开发经历在面试时候很吃香⑥熟悉更多工具，不要局限于remix和区块链浏览器，工具很多，平时多看看github上边的大佬或者一些国外大佬的博客，notion上边有分享的⑦平时做任务时候一定不要忽略实践，不能分析分析就结束，一定要进行测试，本地或者链上测试</p>\n","text":"1.任务 任务要求：用brownie（python）或者hardhat（js）这种框架，用alchemy提供的历史数据功能，写一个在uniswap v2上借flash loan的合约，flash loan借出来之后用uniswap v3的router上做一次swap（uniswa...","link":"","photos":[],"count_time":{"symbolsCount":"9.3k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">1.任务</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">2.面试总结</span></a></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"real world ctf->TransferFrom","uid":"0d3f2f790504b07f55c87ed185dd8ea8","slug":"real world ctf","date":"2022-08-03T06:30:11.232Z","updated":"2022-12-16T07:16:17.939Z","comments":true,"path":"api/articles/real world ctf.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/1*-DI8Ns24Q2ml2_EqN5v3JA.png","text":"real world ctf TransferFrom复现 real world ctf 题目要求：nc 47.102.47.140 20000，We design a pretty easy contract challenge. Enjoy it! Your goal is ...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"区块链 ctf","slug":"区块链-ctf","count":10,"path":"api/tags/区块链-ctf.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"The 15th National College Student Information Security Competition","uid":"7a7dc284a8f031161ea186b2342a420d","slug":"The 15th National College Student Information Security Competition","date":"2022-08-02T02:49:40.287Z","updated":"2022-08-02T02:49:40.287Z","comments":true,"path":"api/articles/The 15th National College Student Information Security Competition.json","keywords":null,"cover":[],"text":" 周日打了一下2022国赛的区块链题目，拿出来分享一下 1.Codepragma solidity ^0.4.26; contract Lib &#123; uint public score; function setScore(uint _score) public &#12...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}