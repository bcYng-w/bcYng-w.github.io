{"title":"Understanding DAO with an example","uid":"9577d25fd5332f28e4fb9b967ac228a0","slug":"one-example-to-know-DAO","date":"2022-08-01T10:30:36.709Z","updated":"2022-12-16T07:36:31.407Z","comments":true,"path":"api/articles/one-example-to-know-DAO.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202208011825170.png","content":"<h1 id=\"Intro\"><a href=\"#Intro\" class=\"headerlink\" title=\"Intro\"></a>Intro</h1><h2 id=\"What-is-DAO？\"><a href=\"#What-is-DAO？\" class=\"headerlink\" title=\"What is DAO？\"></a>What is DAO？</h2><p>DAO的英文全称为Decentralized A utonomous O rganization，常见的中文翻译为去中心化自治组织（社区），是一种以公开透明的计算机代码来体现的组织，其受控于股东，并不受中央政府影响。一个分布式自治组织的金融交易记录和程序规则是保存在区块链中的。目前分布式自治组织确切的法律地位还不清楚。</p>\n<h2 id=\"Why-DAO？\"><a href=\"#Why-DAO？\" class=\"headerlink\" title=\"Why DAO？\"></a>Why DAO？</h2><h3 id=\"DAO的优点\"><a href=\"#DAO的优点\" class=\"headerlink\" title=\"DAO的优点\"></a><strong>DAO的优点</strong></h3><p><strong>1、消除营私舞弊：</strong>DAO的资金都是按照公开透明的方式获得以及使用的，每一笔资金的来源与去向都十分清晰，不存在地下交易。 <strong>2、降低沟通成本：</strong>执行某一个决策没有商量的余地，只需要根据合约和投票得出的提案运行即可。 <strong>3、降低管理成本：</strong>DAO没有层级结构，没有CEO，没有经理，不需要付出管理成本。 <strong>4、平等：</strong>DAO没有层级结构，所有人都是平等的。 <strong>5、没有独裁：</strong>所有人都可以为组织提出方案并可能被使用。 <strong>6、团结：</strong>所有的参与者都持有DAO的通证，DAO运行得越好，通证就会越有价值。所有参与者会有相同的目标，即让DAO更好地运行。同时，提出提案以及投票都需要消耗一定量的通证。因此，投票人都会从DAO的角度出发，真心真意为DAO谋福利。</p>\n<h3 id=\"DAO组织的性质特点\"><a href=\"#DAO组织的性质特点\" class=\"headerlink\" title=\"DAO组织的性质特点\"></a><strong>DAO组织的性质特点</strong></h3><p><strong>1、分布式与去中心化：</strong>DAO 中不存在中心节点以及层级化的管理架构，它通过自下而上的网络节点之间的交互、竞争与协作来实现组织目标。因此，DAO中节点与节点之间、节点与组织之间的业务往来不再由行政隶属关系所决定，而是遵循平等、自愿、互惠、互利的原则，由彼此的资源禀赋、互补优势和利益共赢所驱动。每个组织节点都将根据自己的资源优势和才能资质，在通证的激励机制的作用下有效协作，从而产生强大的协同效应。 <strong>2、自主性与自动化：</strong>在一个理想状态的 DAO中，管理是代码化、程序化且自动化的。“代码即法律”，组织不再是金字塔式而是分布式，权力不再是中心化而是去中心化，管理不再是科层制而是社区自治，组织运行不再需要公司而是由高度自治的社区所替代。此外，由于 DAO运行在由利益相关者共同确定的运行标准和协作模式下，组织内部的共识和信任更易达成， 可以最大限度地降低组织的信任成本、沟通成本和交易成本。 <strong>3、组织化与有序性</strong>：依赖于智能合约，DAO中的运转规则、参与者的职责权利以及奖惩机制等均公开透明。此外，通过一系列高效的自治原则，相关参与者的权益得到精准分化与降维，即给那些付出劳动、做出贡献、承担责任的个体匹配相应的权利和收益，以促进产业分工以及权利、责任、利益均等，使得组织运转更加协调、有序。 <strong>4、智能化与通证化 ：</strong>DAO底层以封装了支持DAO（及其衍生应用的所有基础设施——互联网基础协议、区块链技术、人工智能、<a href=\"https://cloud.tencent.com/solution/bigdata?from=10680\">大数据</a>、物联网等为技术支撑，以数字化、智能化、链上链下协同治理为治理手段，改变了传统的科层制以及人为式管理方式，实现了组织的智能化管理。通证（token）作为DAO（岛）治理过程中的重要激励手段，将组织中的各个元素（例如人、组织、知识、事件、产品等）数字化、通证化，从而使得货币资本、人力资本以及其他要素资本充分融合，更好地激发组织的效能和实现价值流转。</p>\n<h3 id=\"DAO的优势\"><a href=\"#DAO的优势\" class=\"headerlink\" title=\"DAO的优势\"></a><strong>DAO的优势</strong></h3><p><strong>1、快速、无边界的业务决策：</strong>如果在A国的某人想跟B国、C国等国家的创始人一起创业，当前做个事情的过程非常复杂。不同的司法管辖区有不同的要求。决策所需的时间范围也有所不同。例如，假设A国的某人只需一天即可正式成立业务，而在B国的那位需要3个月时间来启动。显然，在B国的人并不拥有跟A国的那位一样的资源。 DAO则提供了一种解决方案，可以通过遵守一套标准规则，让每个人都可以在同等条件下工作，而不用考虑所在的地理位置。本质上说，创建DAO的一个主要原因之一是为组织的成立和运营提供平等的体系。 <strong>2、组织范围内的投票：</strong>很多公司都有董事会来做重要决策。这么做的问题是这些组织通常只对少数选出的问题进行投票，且并不一定代表组织的大多数。DAO可以改变这一点，它允许组织的任何人都可以就他们关心的问题进行投票。例如，A可能会关心问题A和问题C，但不怎么关心问题B。 通过DAO，A可以根据自己关心的程度来对提案进行相应比例的代币投票。DAO（岛）不会使用对组织内成员的输入忽略或不加计入的系统，而是确保所有投票都被统计并向所有人显示。 <strong>3、无法篡改规则：</strong>在任何组织内，政策和规则决定什么能做以及什么不能做。例如，在一家公司，不遵守规定的员工可能会遭受惩罚。如果某人上班迟到，这可能会也可能不会导致相应地扣减工资。这个决定可以通过时间戳来自动执行，但并非所有组织都会强制执行。 会议是形成想法和讨论想法的机会。DAO可以让远程组织更容易评估成员兴趣，更容易让想法从构想变为现实。</p>\n<p><strong>ps:Why is DAO 处内容来自:<a href=\"https://cloud.tencent.com/developer/article/1944775\">为什么DAO会成为资本市场的新战场？DAO的未来怎么样？</a></strong></p>\n<h1 id=\"Example\"><a href=\"#Example\" class=\"headerlink\" title=\"Example\"></a>Example</h1><h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">/**\n *Submitted for verification at Etherscan.io on 2019-02-18\n*/</span>\n\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.3</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Moloch</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/***************\n    GLOBAL CONSTANTS\n    ***************/</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> periodDuration<span class=\"token punctuation\">;</span> <span class=\"token comment\">// default = 17280 = 4.8 hours in seconds (5 periods per day)</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> votingPeriodLength<span class=\"token punctuation\">;</span> <span class=\"token comment\">// default = 35 periods (7 days)</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> gracePeriodLength<span class=\"token punctuation\">;</span> <span class=\"token comment\">// default = 35 periods (7 days)</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> abortWindow<span class=\"token punctuation\">;</span> <span class=\"token comment\">// default = 5 periods (1 day)</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> proposalDeposit<span class=\"token punctuation\">;</span> <span class=\"token comment\">// default = 10 ETH (~$1,000 worth of ETH at contract deployment)</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> dilutionBound<span class=\"token punctuation\">;</span> <span class=\"token comment\">// default = 3 - maximum multiplier a YES voter will be obligated to pay in case of mass ragequit</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> processingReward<span class=\"token punctuation\">;</span> <span class=\"token comment\">// default = 0.1 - amount of ETH to give to whoever processes a proposal</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> summoningTime<span class=\"token punctuation\">;</span> <span class=\"token comment\">// needed to determine the current period</span>\n\n    IERC20 <span class=\"token keyword\">public</span> approvedToken<span class=\"token punctuation\">;</span> <span class=\"token comment\">// approved token contract reference; default = wETH</span>\n    GuildBank <span class=\"token keyword\">public</span> guildBank<span class=\"token punctuation\">;</span> <span class=\"token comment\">// guild bank contract reference</span>\n\n    <span class=\"token comment\">// HARD-CODED LIMITS</span>\n    <span class=\"token comment\">// These numbers are quite arbitrary; they are small enough to avoid overflows when doing calculations</span>\n    <span class=\"token comment\">// with periods or shares, yet big enough to not limit reasonable use cases.</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">constant</span> MAX_VOTING_PERIOD_LENGTH <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// maximum length of voting period</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">constant</span> MAX_GRACE_PERIOD_LENGTH <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// maximum length of grace period</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">constant</span> MAX_DILUTION_BOUND <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// maximum dilution bound</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">constant</span> MAX_NUMBER_OF_SHARES <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// maximum number of shares that can be minted</span>\n\n    <span class=\"token comment\">/***************\n    EVENTS\n    ***************/</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">SubmitProposal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> proposalIndex<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> delegateKey<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> memberAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> applicant<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> tokenTribute<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">SubmitVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> <span class=\"token keyword\">indexed</span> proposalIndex<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> delegateKey<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> memberAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> uintVote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">ProcessProposal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> <span class=\"token keyword\">indexed</span> proposalIndex<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> applicant<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> memberAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> tokenTribute<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> sharesRequested<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> didPass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Ragequit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> memberAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> sharesToBurn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Abort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> <span class=\"token keyword\">indexed</span> proposalIndex<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> applicantAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">UpdateDelegateKey</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> memberAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> newDelegateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">SummonComplete</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> summoner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> shares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/******************\n    INTERNAL ACCOUNTING\n    ******************/</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> totalShares <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// total shares across all members</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> totalSharesRequested <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// total shares that have been requested in unprocessed proposals</span>\n\n    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">Vote</span> <span class=\"token punctuation\">&#123;</span>\n        Null<span class=\"token punctuation\">,</span> <span class=\"token comment\">// default value, counted as abstention</span>\n        Yes<span class=\"token punctuation\">,</span>\n        No\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Member</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> delegateKey<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the key responsible for submitting proposals and voting - defaults to member address unless updated</span>\n        <span class=\"token builtin\">uint256</span> shares<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the # of shares assigned to this member</span>\n        <span class=\"token builtin\">bool</span> exists<span class=\"token punctuation\">;</span> <span class=\"token comment\">// always true once a member has been created</span>\n        <span class=\"token builtin\">uint256</span> highestIndexYesVote<span class=\"token punctuation\">;</span> <span class=\"token comment\">// highest proposal index # on which the member voted YES</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Proposal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> proposer<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the member who submitted the proposal</span>\n        <span class=\"token builtin\">address</span> applicant<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the applicant who wishes to become a member - this key will be used for withdrawals</span>\n        <span class=\"token builtin\">uint256</span> sharesRequested<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the # of shares the applicant is requesting</span>\n        <span class=\"token builtin\">uint256</span> startingPeriod<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the period in which voting can start for this proposal</span>\n        <span class=\"token builtin\">uint256</span> yesVotes<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the total number of YES votes for this proposal</span>\n        <span class=\"token builtin\">uint256</span> noVotes<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the total number of NO votes for this proposal</span>\n        <span class=\"token builtin\">bool</span> processed<span class=\"token punctuation\">;</span> <span class=\"token comment\">// true only if the proposal has been processed</span>\n        <span class=\"token builtin\">bool</span> didPass<span class=\"token punctuation\">;</span> <span class=\"token comment\">// true only if the proposal passed</span>\n        <span class=\"token builtin\">bool</span> aborted<span class=\"token punctuation\">;</span> <span class=\"token comment\">// true only if applicant calls \"abort\" fn before end of voting period</span>\n        <span class=\"token builtin\">uint256</span> tokenTribute<span class=\"token punctuation\">;</span> <span class=\"token comment\">// amount of tokens offered as tribute</span>\n        <span class=\"token builtin\">string</span> details<span class=\"token punctuation\">;</span> <span class=\"token comment\">// proposal details - could be IPFS hash, plaintext, or JSON</span>\n        <span class=\"token builtin\">uint256</span> maxTotalSharesAtYesVote<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the maximum # of total shares encountered at a yes vote on this proposal</span>\n        <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> Vote<span class=\"token punctuation\">)</span> votesByMember<span class=\"token punctuation\">;</span> <span class=\"token comment\">// the votes on this proposal by each member</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> Member<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> members<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> memberAddressByDelegateKey<span class=\"token punctuation\">;</span>\n    Proposal<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> proposalQueue<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/********\n    MODIFIERS\n    ********/</span>\n    <span class=\"token keyword\">modifier</span> onlyMember <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>shares <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::onlyMember - not a member\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">modifier</span> onlyDelegate <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">[</span>memberAddressByDelegateKey<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>shares <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::onlyDelegate - not a delegate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/********\n    FUNCTIONS\n    ********/</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> summoner<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> _approvedToken<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _periodDuration<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _votingPeriodLength<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _gracePeriodLength<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _abortWindow<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _proposalDeposit<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _dilutionBound<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _processingReward\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>summoner <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - summoner cannot be 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_approvedToken <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - _approvedToken cannot be 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_periodDuration <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - _periodDuration cannot be 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_votingPeriodLength <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - _votingPeriodLength cannot be 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_votingPeriodLength <span class=\"token operator\">&lt;=</span> MAX_VOTING_PERIOD_LENGTH<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - _votingPeriodLength exceeds limit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_gracePeriodLength <span class=\"token operator\">&lt;=</span> MAX_GRACE_PERIOD_LENGTH<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - _gracePeriodLength exceeds limit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_abortWindow <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - _abortWindow cannot be 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_abortWindow <span class=\"token operator\">&lt;=</span> _votingPeriodLength<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - _abortWindow must be smaller than or equal to _votingPeriodLength\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_dilutionBound <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - _dilutionBound cannot be 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_dilutionBound <span class=\"token operator\">&lt;=</span> MAX_DILUTION_BOUND<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - _dilutionBound exceeds limit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_proposalDeposit <span class=\"token operator\">>=</span> _processingReward<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::constructor - _proposalDeposit cannot be smaller than _processingReward\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        approvedToken <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_approvedToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        guildBank <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GuildBank</span><span class=\"token punctuation\">(</span>_approvedToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        periodDuration <span class=\"token operator\">=</span> _periodDuration<span class=\"token punctuation\">;</span>\n        votingPeriodLength <span class=\"token operator\">=</span> _votingPeriodLength<span class=\"token punctuation\">;</span>\n        gracePeriodLength <span class=\"token operator\">=</span> _gracePeriodLength<span class=\"token punctuation\">;</span>\n        abortWindow <span class=\"token operator\">=</span> _abortWindow<span class=\"token punctuation\">;</span>\n        proposalDeposit <span class=\"token operator\">=</span> _proposalDeposit<span class=\"token punctuation\">;</span>\n        dilutionBound <span class=\"token operator\">=</span> _dilutionBound<span class=\"token punctuation\">;</span>\n        processingReward <span class=\"token operator\">=</span> _processingReward<span class=\"token punctuation\">;</span>\n\n        summoningTime <span class=\"token operator\">=</span> now<span class=\"token punctuation\">;</span>\n\n        members<span class=\"token punctuation\">[</span>summoner<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">Member</span><span class=\"token punctuation\">(</span>summoner<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        memberAddressByDelegateKey<span class=\"token punctuation\">[</span>summoner<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> summoner<span class=\"token punctuation\">;</span>\n        totalShares <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">SummonComplete</span><span class=\"token punctuation\">(</span>summoner<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/*****************\n    PROPOSAL FUNCTIONS\n    *****************/</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">submitProposal</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> applicant<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> tokenTribute<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> sharesRequested<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> details\n    <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">public</span>\n        onlyDelegate\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>applicant <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitProposal - applicant cannot be 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Make sure we won't run into overflows when doing calculations with shares.</span>\n        <span class=\"token comment\">// Note that totalShares + totalSharesRequested + sharesRequested is an upper bound</span>\n        <span class=\"token comment\">// on the number of shares that can exist until this proposal has been processed.</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>totalShares<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>totalSharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sharesRequested<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> MAX_NUMBER_OF_SHARES<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitProposal - too many shares requested\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        totalSharesRequested <span class=\"token operator\">=</span> totalSharesRequested<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">address</span> memberAddress <span class=\"token operator\">=</span> memberAddressByDelegateKey<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// collect proposal deposit from proposer and store it in the Moloch until the proposal is processed</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> proposalDeposit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitProposal - proposal deposit token transfer failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// collect tribute from applicant and store it in the Moloch until the proposal is processed</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>applicant<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tokenTribute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitProposal - tribute token transfer failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// compute startingPeriod for proposal</span>\n        <span class=\"token builtin\">uint256</span> startingPeriod <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">getCurrentPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            proposalQueue<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> proposalQueue<span class=\"token punctuation\">[</span>proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>startingPeriod\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// create proposal ...</span>\n        Proposal <span class=\"token keyword\">memory</span> proposal <span class=\"token operator\">=</span> <span class=\"token function\">Proposal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n            proposer<span class=\"token punctuation\">:</span> memberAddress<span class=\"token punctuation\">,</span>\n            applicant<span class=\"token punctuation\">:</span> applicant<span class=\"token punctuation\">,</span>\n            sharesRequested<span class=\"token punctuation\">:</span> sharesRequested<span class=\"token punctuation\">,</span>\n            startingPeriod<span class=\"token punctuation\">:</span> startingPeriod<span class=\"token punctuation\">,</span>\n            yesVotes<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            noVotes<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n            processed<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            didPass<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            aborted<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n            tokenTribute<span class=\"token punctuation\">:</span> tokenTribute<span class=\"token punctuation\">,</span>\n            details<span class=\"token punctuation\">:</span> details<span class=\"token punctuation\">,</span>\n            maxTotalSharesAtYesVote<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// ... and append it to the queue</span>\n        proposalQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> proposalIndex <span class=\"token operator\">=</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">SubmitProposal</span><span class=\"token punctuation\">(</span>proposalIndex<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> memberAddress<span class=\"token punctuation\">,</span> applicant<span class=\"token punctuation\">,</span> tokenTribute<span class=\"token punctuation\">,</span> sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">submitVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> proposalIndex<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> uintVote<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyDelegate <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> memberAddress <span class=\"token operator\">=</span> memberAddressByDelegateKey<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        Member <span class=\"token keyword\">storage</span> member <span class=\"token operator\">=</span> members<span class=\"token punctuation\">[</span>memberAddress<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">&lt;</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - proposal does not exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Proposal <span class=\"token keyword\">storage</span> proposal <span class=\"token operator\">=</span> proposalQueue<span class=\"token punctuation\">[</span>proposalIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>uintVote <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - uintVote must be less than 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Vote vote <span class=\"token operator\">=</span> <span class=\"token function\">Vote</span><span class=\"token punctuation\">(</span>uintVote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> proposal<span class=\"token punctuation\">.</span>startingPeriod<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - voting period has not started\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasVotingPeriodExpired</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>startingPeriod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - proposal voting period has expired\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>votesByMember<span class=\"token punctuation\">[</span>memberAddress<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Vote<span class=\"token punctuation\">.</span>Null<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - member has already voted on this proposal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>vote <span class=\"token operator\">==</span> Vote<span class=\"token punctuation\">.</span>Yes <span class=\"token operator\">||</span> vote <span class=\"token operator\">==</span> Vote<span class=\"token punctuation\">.</span>No<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - vote must be either Yes or No\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>proposal<span class=\"token punctuation\">.</span>aborted<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - proposal has been aborted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// store vote</span>\n        proposal<span class=\"token punctuation\">.</span>votesByMember<span class=\"token punctuation\">[</span>memberAddress<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> vote<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// count vote</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vote <span class=\"token operator\">==</span> Vote<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            proposal<span class=\"token punctuation\">.</span>yesVotes <span class=\"token operator\">=</span> proposal<span class=\"token punctuation\">.</span>yesVotes<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>shares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\">// set highest index (latest) yes vote - must be processed for member to ragequit</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">></span> member<span class=\"token punctuation\">.</span>highestIndexYesVote<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                member<span class=\"token punctuation\">.</span>highestIndexYesVote <span class=\"token operator\">=</span> proposalIndex<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token comment\">// set maximum of total shares encountered at a yes vote - used to bound dilution for yes voters</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>totalShares <span class=\"token operator\">></span> proposal<span class=\"token punctuation\">.</span>maxTotalSharesAtYesVote<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                proposal<span class=\"token punctuation\">.</span>maxTotalSharesAtYesVote <span class=\"token operator\">=</span> totalShares<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vote <span class=\"token operator\">==</span> Vote<span class=\"token punctuation\">.</span>No<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            proposal<span class=\"token punctuation\">.</span>noVotes <span class=\"token operator\">=</span> proposal<span class=\"token punctuation\">.</span>noVotes<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>shares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">SubmitVote</span><span class=\"token punctuation\">(</span>proposalIndex<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> memberAddress<span class=\"token punctuation\">,</span> uintVote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">processProposal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> proposalIndex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">&lt;</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::processProposal - proposal does not exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Proposal <span class=\"token keyword\">storage</span> proposal <span class=\"token operator\">=</span> proposalQueue<span class=\"token punctuation\">[</span>proposalIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> proposal<span class=\"token punctuation\">.</span>startingPeriod<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>votingPeriodLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>gracePeriodLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::processProposal - proposal is not ready to be processed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>processed <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::processProposal - proposal has already been processed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> proposalQueue<span class=\"token punctuation\">[</span>proposalIndex<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>processed<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::processProposal - previous proposal must be processed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        proposal<span class=\"token punctuation\">.</span>processed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        totalSharesRequested <span class=\"token operator\">=</span> totalSharesRequested<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">bool</span> didPass <span class=\"token operator\">=</span> proposal<span class=\"token punctuation\">.</span>yesVotes <span class=\"token operator\">></span> proposal<span class=\"token punctuation\">.</span>noVotes<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Make the proposal fail if the dilutionBound is exceeded</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>totalShares<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>dilutionBound<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> proposal<span class=\"token punctuation\">.</span>maxTotalSharesAtYesVote<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            didPass <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// PROPOSAL PASSED</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>didPass <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>proposal<span class=\"token punctuation\">.</span>aborted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            proposal<span class=\"token punctuation\">.</span>didPass <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// if the applicant is already a member, add to their existing shares</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                members<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>shares <span class=\"token operator\">=</span> members<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>shares<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// the applicant is a new member, create a new record for them</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// if the applicant address is already taken by a member's delegateKey, reset it to their member address</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">[</span>memberAddressByDelegateKey<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token builtin\">address</span> memberToOverride <span class=\"token operator\">=</span> memberAddressByDelegateKey<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    memberAddressByDelegateKey<span class=\"token punctuation\">[</span>memberToOverride<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> memberToOverride<span class=\"token punctuation\">;</span>\n                    members<span class=\"token punctuation\">[</span>memberToOverride<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>delegateKey <span class=\"token operator\">=</span> memberToOverride<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token comment\">// use applicant address as delegateKey by default</span>\n                members<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">Member</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">,</span> proposal<span class=\"token punctuation\">.</span>sharesRequested<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                memberAddressByDelegateKey<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// mint new shares</span>\n            totalShares <span class=\"token operator\">=</span> totalShares<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// transfer tokens to guild bank</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n                approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>guildBank<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> proposal<span class=\"token punctuation\">.</span>tokenTribute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"Moloch::processProposal - token transfer to guild bank failed\"</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// PROPOSAL FAILED OR ABORTED</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// return all tokens to the applicant</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n                approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">,</span> proposal<span class=\"token punctuation\">.</span>tokenTribute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"Moloch::processProposal - failing vote token transfer failed\"</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// send msg.sender the processingReward</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> processingReward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Moloch::processProposal - failed to send processing reward to msg.sender\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// return deposit to proposer (subtract processing reward)</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>proposer<span class=\"token punctuation\">,</span> proposalDeposit<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>processingReward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Moloch::processProposal - failed to return proposal deposit to proposer\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">ProcessProposal</span><span class=\"token punctuation\">(</span>\n            proposalIndex<span class=\"token punctuation\">,</span>\n            proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">,</span>\n            proposal<span class=\"token punctuation\">.</span>proposer<span class=\"token punctuation\">,</span>\n            proposal<span class=\"token punctuation\">.</span>tokenTribute<span class=\"token punctuation\">,</span>\n            proposal<span class=\"token punctuation\">.</span>sharesRequested<span class=\"token punctuation\">,</span>\n            didPass\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">ragequit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> sharesToBurn<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyMember <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> initialTotalShares <span class=\"token operator\">=</span> totalShares<span class=\"token punctuation\">;</span>\n\n        Member <span class=\"token keyword\">storage</span> member <span class=\"token operator\">=</span> members<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>shares <span class=\"token operator\">>=</span> sharesToBurn<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::ragequit - insufficient shares\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">canRagequit</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>highestIndexYesVote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::ragequit - cant ragequit until highest index proposal member voted YES on is processed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// burn shares</span>\n        member<span class=\"token punctuation\">.</span>shares <span class=\"token operator\">=</span> member<span class=\"token punctuation\">.</span>shares<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>sharesToBurn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        totalShares <span class=\"token operator\">=</span> totalShares<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>sharesToBurn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// instruct guildBank to transfer fair share of tokens to the ragequitter</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            guildBank<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> sharesToBurn<span class=\"token punctuation\">,</span> initialTotalShares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Moloch::ragequit - withdrawal of tokens from guildBank failed\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Ragequit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> sharesToBurn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> proposalIndex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">&lt;</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::abort - proposal does not exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Proposal <span class=\"token keyword\">storage</span> proposal <span class=\"token operator\">=</span> proposalQueue<span class=\"token punctuation\">[</span>proposalIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::abort - msg.sender must be applicant\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> proposal<span class=\"token punctuation\">.</span>startingPeriod<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>abortWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::abort - abort window must not have passed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>proposal<span class=\"token punctuation\">.</span>aborted<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::abort - proposal must not have already been aborted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> tokensToAbort <span class=\"token operator\">=</span> proposal<span class=\"token punctuation\">.</span>tokenTribute<span class=\"token punctuation\">;</span>\n        proposal<span class=\"token punctuation\">.</span>tokenTribute <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        proposal<span class=\"token punctuation\">.</span>aborted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// return all tokens to the applicant</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">,</span> tokensToAbort<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Moloch::processProposal - failed to return tribute to applicant\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Abort</span><span class=\"token punctuation\">(</span>proposalIndex<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">updateDelegateKey</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> newDelegateKey<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyMember <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>newDelegateKey <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::updateDelegateKey - newDelegateKey cannot be 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// skip checks if member is setting the delegate key to their member address</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newDelegateKey <span class=\"token operator\">!=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>members<span class=\"token punctuation\">[</span>newDelegateKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::updateDelegateKey - cant overwrite existing members\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>members<span class=\"token punctuation\">[</span>memberAddressByDelegateKey<span class=\"token punctuation\">[</span>newDelegateKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::updateDelegateKey - cant overwrite existing delegate keys\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        Member <span class=\"token keyword\">storage</span> member <span class=\"token operator\">=</span> members<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        memberAddressByDelegateKey<span class=\"token punctuation\">[</span>member<span class=\"token punctuation\">.</span>delegateKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        memberAddressByDelegateKey<span class=\"token punctuation\">[</span>newDelegateKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        member<span class=\"token punctuation\">.</span>delegateKey <span class=\"token operator\">=</span> newDelegateKey<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">UpdateDelegateKey</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> newDelegateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/***************\n    GETTER FUNCTIONS\n    ***************/</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> x <span class=\"token operator\">>=</span> y <span class=\"token operator\">?</span> x <span class=\"token punctuation\">:</span> y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getCurrentPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> now<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>summoningTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>periodDuration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getProposalQueueLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// can only ragequit if the latest proposal you voted YES on has been processed</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">canRagequit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> highestIndexYesVote<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>highestIndexYesVote <span class=\"token operator\">&lt;</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::canRagequit - proposal does not exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> proposalQueue<span class=\"token punctuation\">[</span>highestIndexYesVote<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>processed<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">hasVotingPeriodExpired</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> startingPeriod<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getCurrentPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> startingPeriod<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>votingPeriodLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getMemberProposalVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> memberAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> proposalIndex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span>Vote<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">[</span>memberAddress<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::getMemberProposalVote - member doesn't exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">&lt;</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::getMemberProposalVote - proposal doesn't exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> proposalQueue<span class=\"token punctuation\">[</span>proposalIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>votesByMember<span class=\"token punctuation\">[</span>memberAddress<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IERC20</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> who<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Ownable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">private</span> _owner<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">OwnershipTransferred</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> previousOwner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> newOwner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n     * account.\n     */</span>\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        _owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">OwnershipTransferred</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _owner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @return the address of the owner.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">owner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _owner<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @dev Throws if called by any account other than the owner.\n     */</span>\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">onlyOwner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isOwner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @return true if `msg.sender` is the owner of the contract.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">isOwner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> _owner<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @dev Allows the current owner to relinquish control of the contract.\n     * @notice Renouncing to ownership will leave the contract without an owner.\n     * It will not be possible to call the functions with the `onlyOwner`\n     * modifier anymore.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">renounceOwnership</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">OwnershipTransferred</span><span class=\"token punctuation\">(</span>_owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _owner <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @dev Allows the current owner to transfer control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferOwnership</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> newOwner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_transferOwnership</span><span class=\"token punctuation\">(</span>newOwner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @dev Transfers control of the contract to a newOwner.\n     * @param newOwner The address to transfer ownership to.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_transferOwnership</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> newOwner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>newOwner <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">OwnershipTransferred</span><span class=\"token punctuation\">(</span>_owner<span class=\"token punctuation\">,</span> newOwner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _owner <span class=\"token operator\">=</span> newOwner<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">GuildBank</span> <span class=\"token keyword\">is</span> Ownable <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n\n    IERC20 <span class=\"token keyword\">public</span> approvedToken<span class=\"token punctuation\">;</span> <span class=\"token comment\">// approved token contract reference</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Withdrawal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> receiver<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> approvedTokenAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        approvedToken <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>approvedTokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> receiver<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> shares<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> totalShares<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> amount <span class=\"token operator\">=</span> approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>shares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>totalShares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Withdrawal</span><span class=\"token punctuation\">(</span>receiver<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>receiver<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">/**\n     * @dev Multiplies two unsigned integers, reverts on overflow.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Gas optimization: this is cheaper than requiring 'a' not being zero, but the</span>\n        <span class=\"token comment\">// benefit is lost if 'b' is also tested.</span>\n        <span class=\"token comment\">// See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token builtin\">uint256</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">/</span> a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @dev Integer division of two unsigned integers truncating the quotient, reverts on division by zero.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Solidity only automatically asserts when dividing by 0</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">/</span> b<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// assert(a == b * c + a % b); // There is no case in which this doesn't hold</span>\n\n        <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @dev Subtracts two unsigned integers, reverts on overflow (i.e. if subtrahend is greater than minuend).\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">&lt;=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @dev Adds two unsigned integers, reverts on overflow.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">>=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @dev Divides two unsigned integers and returns the remainder (unsigned integer modulo),\n     * reverts when dividing by zero.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze\"><a href=\"#Analyze\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><h3 id=\"变量注解\"><a href=\"#变量注解\" class=\"headerlink\" title=\"变量注解\"></a>变量注解</h3><p>periodDuration：默认值为4.8 hours</p>\n<p>votingPeriodLengthL：投票进行期限，默认为7 days</p>\n<p>gracePeriodLength：宽限期限，默认为7 days</p>\n<p>abortWindow：再star后的abortWindow时间内可以进行中止操作</p>\n<p>proposalDeposit：每提交一份提案就要像dao合约地址存入proposalDeposit，默认值为10ETH。</p>\n<p>dilutionBound：maxTotalSharesAtYesVote不能大于totalshares*dilutionBound，否则视为不通过，默认值为3</p>\n<p>processingReward：给处理提案人的奖励，默认值为0.1ETH</p>\n<p>summoningTime：部署时的时间</p>\n<h3 id=\"函数解析\"><a href=\"#函数解析\" class=\"headerlink\" title=\"函数解析\"></a>函数解析</h3><p>前段时间只有summoner满足onlydelegate条件，只有投票通过后才能成为member并将applicant添加到memberAddressByDelegateKey[proposal.applicant]同时将sharequest添加到member中去，才可以满足onlydelegate条件，所以前几个提案的只有一票（summoner的share只有1）。</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">submitProposal</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> applicant<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint256</span> tokenTribute<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint256</span> sharesRequested<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> details\n<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span>\n    onlyDelegate\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>applicant <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitProposal - applicant cannot be 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Make sure we won't run into overflows when doing calculations with shares.</span>\n    <span class=\"token comment\">// Note that totalShares + totalSharesRequested + sharesRequested is an upper bound</span>\n    <span class=\"token comment\">// on the number of shares that can exist until this proposal has been processed.</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>totalShares<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>totalSharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sharesRequested<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> MAX_NUMBER_OF_SHARES<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitProposal - too many shares requested\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    totalSharesRequested <span class=\"token operator\">=</span> totalSharesRequested<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">address</span> memberAddress <span class=\"token operator\">=</span> memberAddressByDelegateKey<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// collect proposal deposit from proposer and store it in the Moloch until the proposal is processed</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> proposalDeposit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitProposal - proposal deposit token transfer failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// collect tribute from applicant and store it in the Moloch until the proposal is processed</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>applicant<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tokenTribute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitProposal - tribute token transfer failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// compute startingPeriod for proposal</span>\n    <span class=\"token builtin\">uint256</span> startingPeriod <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>\n        <span class=\"token function\">getCurrentPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        proposalQueue<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span> proposalQueue<span class=\"token punctuation\">[</span>proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>startingPeriod\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// create proposal ...</span>\n    Proposal <span class=\"token keyword\">memory</span> proposal <span class=\"token operator\">=</span> <span class=\"token function\">Proposal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n        proposer<span class=\"token punctuation\">:</span> memberAddress<span class=\"token punctuation\">,</span>\n        applicant<span class=\"token punctuation\">:</span> applicant<span class=\"token punctuation\">,</span>\n        sharesRequested<span class=\"token punctuation\">:</span> sharesRequested<span class=\"token punctuation\">,</span>\n        startingPeriod<span class=\"token punctuation\">:</span> startingPeriod<span class=\"token punctuation\">,</span>\n        yesVotes<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        noVotes<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        processed<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        didPass<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        aborted<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        tokenTribute<span class=\"token punctuation\">:</span> tokenTribute<span class=\"token punctuation\">,</span>\n        details<span class=\"token punctuation\">:</span> details<span class=\"token punctuation\">,</span>\n        maxTotalSharesAtYesVote<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// ... and append it to the queue</span>\n    proposalQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint256</span> proposalIndex <span class=\"token operator\">=</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">SubmitProposal</span><span class=\"token punctuation\">(</span>proposalIndex<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> memberAddress<span class=\"token punctuation\">,</span> applicant<span class=\"token punctuation\">,</span> tokenTribute<span class=\"token punctuation\">,</span> sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>submitProposal函数用于提交一个提案，只能是delegate</p>\n<p>首先判断申请人是否为非零地址，再判断在总共股权加上总共的请求股权是否会超出最大值MAX_NUMBER_OF_SHARES，之后会从msg.sender向合约地址转账10ETH，并且从申请人向合约地址转账tokenTribute。</p>\n<p>起始期就是CurrentPeriod+1，然后将新的proposal添加到proposalQueue数组中去。</p>\n<p>之后进行投票，投票通过，applicant将会成为member</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">submitVote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> proposalIndex<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> uintVote<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyDelegate <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> memberAddress <span class=\"token operator\">=</span> memberAddressByDelegateKey<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    Member <span class=\"token keyword\">storage</span> member <span class=\"token operator\">=</span> members<span class=\"token punctuation\">[</span>memberAddress<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">&lt;</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - proposal does not exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Proposal <span class=\"token keyword\">storage</span> proposal <span class=\"token operator\">=</span> proposalQueue<span class=\"token punctuation\">[</span>proposalIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>uintVote <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - uintVote must be less than 3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Vote vote <span class=\"token operator\">=</span> <span class=\"token function\">Vote</span><span class=\"token punctuation\">(</span>uintVote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> proposal<span class=\"token punctuation\">.</span>startingPeriod<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - voting period has not started\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasVotingPeriodExpired</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>startingPeriod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - proposal voting period has expired\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>votesByMember<span class=\"token punctuation\">[</span>memberAddress<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> Vote<span class=\"token punctuation\">.</span>Null<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - member has already voted on this proposal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>vote <span class=\"token operator\">==</span> Vote<span class=\"token punctuation\">.</span>Yes <span class=\"token operator\">||</span> vote <span class=\"token operator\">==</span> Vote<span class=\"token punctuation\">.</span>No<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - vote must be either Yes or No\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>proposal<span class=\"token punctuation\">.</span>aborted<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::submitVote - proposal has been aborted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// store vote</span>\n    proposal<span class=\"token punctuation\">.</span>votesByMember<span class=\"token punctuation\">[</span>memberAddress<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> vote<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// count vote</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vote <span class=\"token operator\">==</span> Vote<span class=\"token punctuation\">.</span>Yes<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        proposal<span class=\"token punctuation\">.</span>yesVotes <span class=\"token operator\">=</span> proposal<span class=\"token punctuation\">.</span>yesVotes<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>shares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// set highest index (latest) yes vote - must be processed for member to ragequit</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">></span> member<span class=\"token punctuation\">.</span>highestIndexYesVote<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            member<span class=\"token punctuation\">.</span>highestIndexYesVote <span class=\"token operator\">=</span> proposalIndex<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">// set maximum of total shares encountered at a yes vote - used to bound dilution for yes voters</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>totalShares <span class=\"token operator\">></span> proposal<span class=\"token punctuation\">.</span>maxTotalSharesAtYesVote<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            proposal<span class=\"token punctuation\">.</span>maxTotalSharesAtYesVote <span class=\"token operator\">=</span> totalShares<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vote <span class=\"token operator\">==</span> Vote<span class=\"token punctuation\">.</span>No<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        proposal<span class=\"token punctuation\">.</span>noVotes <span class=\"token operator\">=</span> proposal<span class=\"token punctuation\">.</span>noVotes<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>shares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">SubmitVote</span><span class=\"token punctuation\">(</span>proposalIndex<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> memberAddress<span class=\"token punctuation\">,</span> uintVote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>对应两个参数分别是提案编号以及所投的票类型（弃权，同意，否定），同时记录用户所投的票种</p>\n<p>如果为YES票，提案的YesVote将会加上member的所有股权，同时记录最近一次投yes票的提案编号（此次）</p>\n<p>如果为No票，提案的NoVote将会加上member的所有股权</p>\n<p>之后进入第三轮，处理提案</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">processProposal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> proposalIndex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">&lt;</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::processProposal - proposal does not exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Proposal <span class=\"token keyword\">storage</span> proposal <span class=\"token operator\">=</span> proposalQueue<span class=\"token punctuation\">[</span>proposalIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> proposal<span class=\"token punctuation\">.</span>startingPeriod<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>votingPeriodLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>gracePeriodLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::processProposal - proposal is not ready to be processed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>processed <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::processProposal - proposal has already been processed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> proposalQueue<span class=\"token punctuation\">[</span>proposalIndex<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>processed<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::processProposal - previous proposal must be processed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    proposal<span class=\"token punctuation\">.</span>processed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    totalSharesRequested <span class=\"token operator\">=</span> totalSharesRequested<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bool</span> didPass <span class=\"token operator\">=</span> proposal<span class=\"token punctuation\">.</span>yesVotes <span class=\"token operator\">></span> proposal<span class=\"token punctuation\">.</span>noVotes<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Make the proposal fail if the dilutionBound is exceeded</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>totalShares<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>dilutionBound<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> proposal<span class=\"token punctuation\">.</span>maxTotalSharesAtYesVote<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        didPass <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// PROPOSAL PASSED</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>didPass <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>proposal<span class=\"token punctuation\">.</span>aborted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        proposal<span class=\"token punctuation\">.</span>didPass <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// if the applicant is already a member, add to their existing shares</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            members<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>shares <span class=\"token operator\">=</span> members<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>shares<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// the applicant is a new member, create a new record for them</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// if the applicant address is already taken by a member's delegateKey, reset it to their member address</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>members<span class=\"token punctuation\">[</span>memberAddressByDelegateKey<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token builtin\">address</span> memberToOverride <span class=\"token operator\">=</span> memberAddressByDelegateKey<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                memberAddressByDelegateKey<span class=\"token punctuation\">[</span>memberToOverride<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> memberToOverride<span class=\"token punctuation\">;</span>\n                members<span class=\"token punctuation\">[</span>memberToOverride<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>delegateKey <span class=\"token operator\">=</span> memberToOverride<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// use applicant address as delegateKey by default</span>\n            members<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">Member</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">,</span> proposal<span class=\"token punctuation\">.</span>sharesRequested<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            memberAddressByDelegateKey<span class=\"token punctuation\">[</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// mint new shares</span>\n        totalShares <span class=\"token operator\">=</span> totalShares<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>sharesRequested<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// transfer tokens to guild bank</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>guildBank<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> proposal<span class=\"token punctuation\">.</span>tokenTribute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Moloch::processProposal - token transfer to guild bank failed\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// PROPOSAL FAILED OR ABORTED</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// return all tokens to the applicant</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">,</span> proposal<span class=\"token punctuation\">.</span>tokenTribute<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Moloch::processProposal - failing vote token transfer failed\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// send msg.sender the processingReward</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n        approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> processingReward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Moloch::processProposal - failed to send processing reward to msg.sender\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// return deposit to proposer (subtract processing reward)</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n        approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>proposer<span class=\"token punctuation\">,</span> proposalDeposit<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>processingReward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Moloch::processProposal - failed to return proposal deposit to proposer\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">ProcessProposal</span><span class=\"token punctuation\">(</span>\n        proposalIndex<span class=\"token punctuation\">,</span>\n        proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">,</span>\n        proposal<span class=\"token punctuation\">.</span>proposer<span class=\"token punctuation\">,</span>\n        proposal<span class=\"token punctuation\">.</span>tokenTribute<span class=\"token punctuation\">,</span>\n        proposal<span class=\"token punctuation\">.</span>sharesRequested<span class=\"token punctuation\">,</span>\n        didPass\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>任何人都可以处理，参数为所要处理的提案的编号，参数有所限制，此编号对应的上一个提案必须已被处理，要求当前时间大于开始时间+投票期限+宽限期限，只要提案的同意票数大于否定票数即视为通过</p>\n<h4 id=\"case0-false\"><a href=\"#case0-false\" class=\"headerlink\" title=\"case0 false\"></a>case0 false</h4><p>将申请者的tokenTribute原路退回</p>\n<h4 id=\"case1-true\"><a href=\"#case1-true\" class=\"headerlink\" title=\"case1 true\"></a>case1 true</h4><p>通过后如果申请人已经是member，则直接将申请人的股权加上申请的股权，否则如果申请者地址已经被成员的delegateKey占用，则将其重置为成员地址。之后铸造新的股权，并将tokenTribute转入guildbank</p>\n<p>最后，将会给处理提案的人processingReward数量的奖励，剩余的proposalDeposit发送给applicant。</p>\n<p>molochDAO的特色功能—-怒退</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">ragequit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> sharesToBurn<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyMember <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">uint256</span> initialTotalShares <span class=\"token operator\">=</span> totalShares<span class=\"token punctuation\">;</span>\n\n    Member <span class=\"token keyword\">storage</span> member <span class=\"token operator\">=</span> members<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>shares <span class=\"token operator\">>=</span> sharesToBurn<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::ragequit - insufficient shares\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">canRagequit</span><span class=\"token punctuation\">(</span>member<span class=\"token punctuation\">.</span>highestIndexYesVote<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::ragequit - cant ragequit until highest index proposal member voted YES on is processed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// burn shares</span>\n    member<span class=\"token punctuation\">.</span>shares <span class=\"token operator\">=</span> member<span class=\"token punctuation\">.</span>shares<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>sharesToBurn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    totalShares <span class=\"token operator\">=</span> totalShares<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>sharesToBurn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// instruct guildBank to transfer fair share of tokens to the ragequitter</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n        guildBank<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> sharesToBurn<span class=\"token punctuation\">,</span> initialTotalShares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Moloch::ragequit - withdrawal of tokens from guildBank failed\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Ragequit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> sharesToBurn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>首先检测是否满足可以ragequit的条件，满足则燃烧部分股权取回资产</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">abort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> proposalIndex<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>proposalIndex <span class=\"token operator\">&lt;</span> proposalQueue<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::abort - proposal does not exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Proposal <span class=\"token keyword\">storage</span> proposal <span class=\"token operator\">=</span> proposalQueue<span class=\"token punctuation\">[</span>proposalIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::abort - msg.sender must be applicant\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> proposal<span class=\"token punctuation\">.</span>startingPeriod<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>abortWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::abort - abort window must not have passed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>proposal<span class=\"token punctuation\">.</span>aborted<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::abort - proposal must not have already been aborted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint256</span> tokensToAbort <span class=\"token operator\">=</span> proposal<span class=\"token punctuation\">.</span>tokenTribute<span class=\"token punctuation\">;</span>\n    proposal<span class=\"token punctuation\">.</span>tokenTribute <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    proposal<span class=\"token punctuation\">.</span>aborted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// return all tokens to the applicant</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n        approvedToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>proposal<span class=\"token punctuation\">.</span>applicant<span class=\"token punctuation\">,</span> tokensToAbort<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"Moloch::processProposal - failed to return tribute to applicant\"</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Abort</span><span class=\"token punctuation\">(</span>proposalIndex<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>终止函数，终止指定编号的提案，只有applicant可执行此操作，同时返还所有tribute</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">updateDelegateKey</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> newDelegateKey<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyMember <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>newDelegateKey <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::updateDelegateKey - newDelegateKey cannot be 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// skip checks if member is setting the delegate key to their member address</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newDelegateKey <span class=\"token operator\">!=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>members<span class=\"token punctuation\">[</span>newDelegateKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::updateDelegateKey - cant overwrite existing members\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>members<span class=\"token punctuation\">[</span>memberAddressByDelegateKey<span class=\"token punctuation\">[</span>newDelegateKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Moloch::updateDelegateKey - cant overwrite existing delegate keys\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    Member <span class=\"token keyword\">storage</span> member <span class=\"token operator\">=</span> members<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    memberAddressByDelegateKey<span class=\"token punctuation\">[</span>member<span class=\"token punctuation\">.</span>delegateKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    memberAddressByDelegateKey<span class=\"token punctuation\">[</span>newDelegateKey<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    member<span class=\"token punctuation\">.</span>delegateKey <span class=\"token operator\">=</span> newDelegateKey<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">UpdateDelegateKey</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> newDelegateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>更新delegatekey，只有member可以操作。</p>\n","text":"IntroWhat is DAO？DAO的英文全称为Decentralized A utonomous O rganization，常见的中文翻译为去中心化自治组织（社区），是一种以公开透明的计算机代码来体现的组织，其受控于股东，并不受中央政府影响。一个分布式自治组织的金融交易记...","link":"","photos":[],"count_time":{"symbolsCount":"38k","symbolsTime":"35 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":19,"path":"api/tags/区块链.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Intro\"><span class=\"toc-text\">Intro</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#What-is-DAO%EF%BC%9F\"><span class=\"toc-text\">What is DAO？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Why-DAO%EF%BC%9F\"><span class=\"toc-text\">Why DAO？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DAO%E7%9A%84%E4%BC%98%E7%82%B9\"><span class=\"toc-text\">DAO的优点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DAO%E7%BB%84%E7%BB%87%E7%9A%84%E6%80%A7%E8%B4%A8%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">DAO组织的性质特点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#DAO%E7%9A%84%E4%BC%98%E5%8A%BF\"><span class=\"toc-text\">DAO的优势</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Example\"><span class=\"toc-text\">Example</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze\"><span class=\"toc-text\">Analyze</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\">变量注解</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">函数解析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#case0-false\"><span class=\"toc-text\">case0 false</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#case1-true\"><span class=\"toc-text\">case1 true</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Smart Contract ctf","uid":"2dde006a1ba2b506fb11671b03da33e3","slug":"blockchain-ctf","date":"2022-08-01T10:35:33.060Z","updated":"2022-12-16T07:35:44.134Z","comments":true,"path":"api/articles/blockchain-ctf.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/image-20221216153527666.png","text":"题库地址：https://blockchain-ctf.securityinnovation.com/#/ 1.DonationCodepragma solidity 0.4.24; import \"../CtfFramework.sol\"; import \"../../node...","link":"","photos":[],"count_time":{"symbolsCount":"29k","symbolsTime":"26 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":19,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}