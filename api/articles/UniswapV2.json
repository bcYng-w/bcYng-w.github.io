{"title":"Analysis of uniswapV2","uid":"e27183e0e340d83abbd9dfc8e53b323b","slug":"UniswapV2","date":"2022-08-01T10:44:56.839Z","updated":"2022-08-01T10:44:56.839Z","comments":true,"path":"api/articles/UniswapV2.json","keywords":null,"cover":[],"content":"<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207040930606.png\"></p>\n<span id=\"more\"></span>\n\n<p>相对系统且深入的了解了一下uniswapV2</p>\n<p>whitepaper：</p>\n<p><a href=\"https://uniswap.org/whitepaper.pdf\">https://uniswap.org/whitepaper.pdf</a></p>\n<p>EIP-2612：</p>\n<p><a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2612.md?ref=learnblockchain.cn\">https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2612.md?ref=learnblockchain.cn</a></p>\n<h1 id=\"UniswapV2-Factory\"><a href=\"#UniswapV2-Factory\" class=\"headerlink\" title=\"UniswapV2 Factory\"></a>UniswapV2 Factory</h1><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token number\">.16</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapV2Factory</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">PairCreated</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> token0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> token1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">feeTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">feeToSetter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getPair</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allPairs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allPairsLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createPair</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setFeeTo</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setFeeToSetter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapV2Pair</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">decimals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">DOMAIN_SEPARATOR</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">PERMIT_TYPEHASH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">nonces</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">permit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Burn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> sender<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amount0In<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amount1In<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Sync</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">MINIMUM_LIQUIDITY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">factory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">token1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> reserve1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint32</span> blockTimestampLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">price0CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">price1CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">kLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">burn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">skim</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapV2ERC20</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">decimals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">DOMAIN_SEPARATOR</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">PERMIT_TYPEHASH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">nonces</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">permit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IERC20</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">decimals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapV2Callee</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">uniswapV2Call</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">UniswapV2ERC20</span> <span class=\"token keyword\">is</span> IUniswapV2ERC20 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Uniswap V2'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> symbol <span class=\"token operator\">=</span> <span class=\"token string\">'UNI-V2'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint8</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> decimals <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span>  <span class=\"token keyword\">public</span> totalSupply<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> balanceOf<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> allowance<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> DOMAIN_SEPARATOR<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> PERMIT_TYPEHASH <span class=\"token operator\">=</span> <span class=\"token number\">0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> nonces<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> chainId<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span>\n            chainId <span class=\"token operator\">:=</span> chainid\n        <span class=\"token punctuation\">&#125;</span>\n        DOMAIN_SEPARATOR <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>\n            abi<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>\n                <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">'EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                chainId<span class=\"token punctuation\">,</span>\n                <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        totalSupply <span class=\"token operator\">=</span> totalSupply<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span>to<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balanceOf<span class=\"token punctuation\">[</span>to<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_burn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        balanceOf<span class=\"token punctuation\">[</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balanceOf<span class=\"token punctuation\">[</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        totalSupply <span class=\"token operator\">=</span> totalSupply<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        allowance<span class=\"token punctuation\">[</span>owner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>spender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span>owner<span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        balanceOf<span class=\"token punctuation\">[</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balanceOf<span class=\"token punctuation\">[</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span>to<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balanceOf<span class=\"token punctuation\">[</span>to<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_approve</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>allowance<span class=\"token punctuation\">[</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            allowance<span class=\"token punctuation\">[</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> allowance<span class=\"token punctuation\">[</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token function\">_transfer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">permit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>deadline <span class=\"token operator\">>=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: EXPIRED'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">bytes32</span> digest <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>\n            abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string\">'\\x19\\x01'</span><span class=\"token punctuation\">,</span>\n                DOMAIN_SEPARATOR<span class=\"token punctuation\">,</span>\n                <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>PERMIT_TYPEHASH<span class=\"token punctuation\">,</span> owner<span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> nonces<span class=\"token punctuation\">[</span>owner<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> recoveredAddress <span class=\"token operator\">=</span> <span class=\"token function\">ecrecover</span><span class=\"token punctuation\">(</span>digest<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>recoveredAddress <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> recoveredAddress <span class=\"token operator\">==</span> owner<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INVALID_SIGNATURE'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_approve</span><span class=\"token punctuation\">(</span>owner<span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">UniswapV2Pair</span> <span class=\"token keyword\">is</span> IUniswapV2Pair<span class=\"token punctuation\">,</span> UniswapV2ERC20 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span>  <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">UQ112x112</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint224</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MINIMUM_LIQUIDITY <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes4</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> SELECTOR <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes4</span><span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'transfer(address,uint256)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> factory<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> token0<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> token1<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint112</span> <span class=\"token keyword\">private</span> reserve0<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// uses single storage slot, accessible via getReserves</span>\n    <span class=\"token builtin\">uint112</span> <span class=\"token keyword\">private</span> reserve1<span class=\"token punctuation\">;</span>           <span class=\"token comment\">// uses single storage slot, accessible via getReserves</span>\n    <span class=\"token builtin\">uint32</span>  <span class=\"token keyword\">private</span> blockTimestampLast<span class=\"token punctuation\">;</span> <span class=\"token comment\">// uses single storage slot, accessible via getReserves</span>\n\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> price0CumulativeLast<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> price1CumulativeLast<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> kLast<span class=\"token punctuation\">;</span> <span class=\"token comment\">// reserve0 * reserve1, as of immediately after the most recent liquidity event</span>\n\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">private</span> unlocked <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>unlocked <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: LOCKED'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        unlocked <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n        unlocked <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint32</span> _blockTimestampLast<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        _reserve0 <span class=\"token operator\">=</span> reserve0<span class=\"token punctuation\">;</span>\n        _reserve1 <span class=\"token operator\">=</span> reserve1<span class=\"token punctuation\">;</span>\n        _blockTimestampLast <span class=\"token operator\">=</span> blockTimestampLast<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSelector</span><span class=\"token punctuation\">(</span>SELECTOR<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>success <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: TRANSFER_FAILED'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Burn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> sender<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amount0In<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amount1In<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Sync</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        factory <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// called once by the factory at time of deployment</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _token1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> factory<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: FORBIDDEN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// sufficient check</span>\n        token0 <span class=\"token operator\">=</span> _token0<span class=\"token punctuation\">;</span>\n        token1 <span class=\"token operator\">=</span> _token1<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// update reserves and, on the first call per block, price accumulators</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> balance0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> balance1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balance0 <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">uint112</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> balance1 <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">uint112</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: OVERFLOW'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint32</span> blockTimestamp <span class=\"token operator\">=</span> <span class=\"token builtin\">uint32</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint32</span> timeElapsed <span class=\"token operator\">=</span> blockTimestamp <span class=\"token operator\">-</span> blockTimestampLast<span class=\"token punctuation\">;</span> <span class=\"token comment\">// overflow is desired</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timeElapsed <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _reserve0 <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _reserve1 <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// * never overflows, and + overflow is desired</span>\n            price0CumulativeLast <span class=\"token operator\">+=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>UQ112x112<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">uqdiv</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> timeElapsed<span class=\"token punctuation\">;</span>\n            price1CumulativeLast <span class=\"token operator\">+=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>UQ112x112<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">uqdiv</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> timeElapsed<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        reserve0 <span class=\"token operator\">=</span> <span class=\"token builtin\">uint112</span><span class=\"token punctuation\">(</span>balance0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        reserve1 <span class=\"token operator\">=</span> <span class=\"token builtin\">uint112</span><span class=\"token punctuation\">(</span>balance1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        blockTimestampLast <span class=\"token operator\">=</span> blockTimestamp<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Sync</span><span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">,</span> reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// if fee is on, mint liquidity equivalent to 1/6th of the growth in sqrt(k)</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_mintFee</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> feeOn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> feeTo <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Factory</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">feeTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        feeOn <span class=\"token operator\">=</span> feeTo <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> _kLast <span class=\"token operator\">=</span> kLast<span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feeOn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_kLast <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token builtin\">uint</span> rootK <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token builtin\">uint</span> rootKLast <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>_kLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rootK <span class=\"token operator\">></span> rootKLast<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token builtin\">uint</span> numerator <span class=\"token operator\">=</span> totalSupply<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>rootK<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>rootKLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token builtin\">uint</span> denominator <span class=\"token operator\">=</span> rootK<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>rootKLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token builtin\">uint</span> liquidity <span class=\"token operator\">=</span> numerator <span class=\"token operator\">/</span> denominator<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>liquidity <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>feeTo<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_kLast <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            kLast <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// this low-level function should be called from a contract which performs important safety checks</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> lock <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n        <span class=\"token builtin\">uint</span> balance0 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> balance1 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amount0 <span class=\"token operator\">=</span> balance0<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amount1 <span class=\"token operator\">=</span> balance1<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bool</span> feeOn <span class=\"token operator\">=</span> <span class=\"token function\">_mintFee</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">,</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> _totalSupply <span class=\"token operator\">=</span> totalSupply<span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings, must be defined here since totalSupply can update in _mintFee</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_totalSupply <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            liquidity <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>amount0<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>amount1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>MINIMUM_LIQUIDITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MINIMUM_LIQUIDITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// permanently lock the first MINIMUM_LIQUIDITY tokens</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            liquidity <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>amount0<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_totalSupply<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _reserve0<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_totalSupply<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>liquidity <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span>balance0<span class=\"token punctuation\">,</span> balance1<span class=\"token punctuation\">,</span> _reserve0<span class=\"token punctuation\">,</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feeOn<span class=\"token punctuation\">)</span> kLast <span class=\"token operator\">=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// reserve0 and reserve1 are up-to-date</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount0<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// this low-level function should be called from a contract which performs important safety checks</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">burn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> lock <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n        <span class=\"token builtin\">address</span> _token0 <span class=\"token operator\">=</span> token0<span class=\"token punctuation\">;</span>                                <span class=\"token comment\">// gas savings</span>\n        <span class=\"token builtin\">address</span> _token1 <span class=\"token operator\">=</span> token1<span class=\"token punctuation\">;</span>                                <span class=\"token comment\">// gas savings</span>\n        <span class=\"token builtin\">uint</span> balance0 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> balance1 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> liquidity <span class=\"token operator\">=</span> balanceOf<span class=\"token punctuation\">[</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bool</span> feeOn <span class=\"token operator\">=</span> <span class=\"token function\">_mintFee</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">,</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> _totalSupply <span class=\"token operator\">=</span> totalSupply<span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings, must be defined here since totalSupply can update in _mintFee</span>\n        amount0 <span class=\"token operator\">=</span> liquidity<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>balance0<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _totalSupply<span class=\"token punctuation\">;</span> <span class=\"token comment\">// using balances ensures pro-rata distribution</span>\n        amount1 <span class=\"token operator\">=</span> liquidity<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>balance1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _totalSupply<span class=\"token punctuation\">;</span> <span class=\"token comment\">// using balances ensures pro-rata distribution</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount0 <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> amount1 <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_burn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amount0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balance0 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balance1 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span>balance0<span class=\"token punctuation\">,</span> balance1<span class=\"token punctuation\">,</span> _reserve0<span class=\"token punctuation\">,</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feeOn<span class=\"token punctuation\">)</span> kLast <span class=\"token operator\">=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// reserve0 and reserve1 are up-to-date</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Burn</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount0<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// this low-level function should be called from a contract which performs important safety checks</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> lock <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount0Out <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> amount1Out <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount0Out <span class=\"token operator\">&lt;</span> _reserve0 <span class=\"token operator\">&amp;&amp;</span> amount1Out <span class=\"token operator\">&lt;</span> _reserve1<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INSUFFICIENT_LIQUIDITY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint</span> balance0<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> balance1<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// scope for _token&#123;0,1&#125;, avoids stack too deep errors</span>\n        <span class=\"token builtin\">address</span> _token0 <span class=\"token operator\">=</span> token0<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> _token1 <span class=\"token operator\">=</span> token1<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>to <span class=\"token operator\">!=</span> _token0 <span class=\"token operator\">&amp;&amp;</span> to <span class=\"token operator\">!=</span> _token1<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INVALID_TO'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>amount0Out <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amount0Out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// optimistically transfer tokens</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>amount1Out <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// optimistically transfer tokens</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">IUniswapV2Callee</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">uniswapV2Call</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount0Out<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balance0 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balance1 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token builtin\">uint</span> amount0In <span class=\"token operator\">=</span> balance0 <span class=\"token operator\">></span> _reserve0 <span class=\"token operator\">-</span> amount0Out <span class=\"token operator\">?</span> balance0 <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>_reserve0 <span class=\"token operator\">-</span> amount0Out<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amount1In <span class=\"token operator\">=</span> balance1 <span class=\"token operator\">></span> _reserve1 <span class=\"token operator\">-</span> amount1Out <span class=\"token operator\">?</span> balance1 <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>_reserve1 <span class=\"token operator\">-</span> amount1Out<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount0In <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> amount1In <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INSUFFICIENT_INPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// scope for reserve&#123;0,1&#125;Adjusted, avoids stack too deep errors</span>\n        <span class=\"token builtin\">uint</span> balance0Adjusted <span class=\"token operator\">=</span> balance0<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>amount0In<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> balance1Adjusted <span class=\"token operator\">=</span> balance1<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>amount1In<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balance0Adjusted<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>balance1Adjusted<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: K'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span>balance0<span class=\"token punctuation\">,</span> balance1<span class=\"token punctuation\">,</span> _reserve0<span class=\"token punctuation\">,</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount0In<span class=\"token punctuation\">,</span> amount1In<span class=\"token punctuation\">,</span> amount0Out<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// force balances to match reserves</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">skim</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> lock <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> _token0 <span class=\"token operator\">=</span> token0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n        <span class=\"token builtin\">address</span> _token1 <span class=\"token operator\">=</span> token1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n        <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// force reserves to match balances</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> lock <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> reserve0<span class=\"token punctuation\">,</span> reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">UniswapV2Factory</span> <span class=\"token keyword\">is</span> IUniswapV2Factory <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> feeTo<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> feeToSetter<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> getPair<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> allPairs<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">PairCreated</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> token0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> token1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _feeToSetter<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        feeToSetter <span class=\"token operator\">=</span> _feeToSetter<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allPairsLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> allPairs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createPair</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>tokenA <span class=\"token operator\">!=</span> tokenB<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: IDENTICAL_ADDRESSES'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> tokenA <span class=\"token operator\">&lt;</span> tokenB <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>tokenB<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>token0 <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: ZERO_ADDRESS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>getPair<span class=\"token punctuation\">[</span>token0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>token1<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: PAIR_EXISTS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// single check is sufficient</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> bytecode <span class=\"token operator\">=</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>UniswapV2Pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>creationCode<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">bytes32</span> salt <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">,</span> token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span>\n            pair <span class=\"token operator\">:=</span> <span class=\"token function\">create2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>bytecode<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">mload</span><span class=\"token punctuation\">(</span>bytecode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">,</span> token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        getPair<span class=\"token punctuation\">[</span>token0<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>token1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pair<span class=\"token punctuation\">;</span>\n        getPair<span class=\"token punctuation\">[</span>token1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>token0<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pair<span class=\"token punctuation\">;</span> <span class=\"token comment\">// populate mapping in the reverse direction</span>\n        allPairs<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">PairCreated</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">,</span> token1<span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">,</span> allPairs<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setFeeTo</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _feeTo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> feeToSetter<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: FORBIDDEN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        feeTo <span class=\"token operator\">=</span> _feeTo<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setFeeToSetter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _feeToSetter<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> feeToSetter<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: FORBIDDEN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        feeToSetter <span class=\"token operator\">=</span> _feeToSetter<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)</span>\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> x<span class=\"token punctuation\">,</span> <span class=\"token string\">'ds-math-add-overflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>z <span class=\"token operator\">=</span> x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> x<span class=\"token punctuation\">,</span> <span class=\"token string\">'ds-math-sub-underflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">=</span> x <span class=\"token operator\">*</span> y<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> y <span class=\"token operator\">==</span> x<span class=\"token punctuation\">,</span> <span class=\"token string\">'ds-math-mul-overflow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// a library for performing various math operations</span>\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">Math</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        z <span class=\"token operator\">=</span> x <span class=\"token operator\">&lt;</span> y <span class=\"token operator\">?</span> x <span class=\"token punctuation\">:</span> y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            z <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">uint</span> x <span class=\"token operator\">=</span> y <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                z <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n                x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">/</span> x <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            z <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">UQ112x112</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">uint224</span> <span class=\"token keyword\">constant</span> Q112 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">112</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// encode a uint112 as a UQ112x112</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint224</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        z <span class=\"token operator\">=</span> <span class=\"token builtin\">uint224</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Q112<span class=\"token punctuation\">;</span> <span class=\"token comment\">// never overflows</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// divide a UQ112x112 by a uint112, returning a UQ112x112</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">uqdiv</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint224</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint224</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        z <span class=\"token operator\">=</span> x <span class=\"token operator\">/</span> <span class=\"token builtin\">uint224</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze\"><a href=\"#Analyze\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>1.UniswapV2ERC20.sol</p>\n<p>首先是UniswapV2ERC20.sol，显而易见这部分代码实现了一个ERC-20的合约，但是此处多了一个permit方法，具体功能类似于approve</p>\n<p>permit, which allows users to modify the <code>allowance</code> mapping using a signed message, instead of through <code>msg.sender</code></p>\n<p><a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2612.md?ref=learnblockchain.cn\">官方文档</a>给出如上解释</p>\n<p><code>DOMAIN_SEPARATOR</code>只不过是唯一标识智能合约的哈希。 它是由EIP712Domain的字符串，包含代币合约的名称，版本，所在的chainId以及合约部署的地址构成。</p>\n<p><code>PERMIT_TYPEHASH</code> 是函数名称(<strong>大写开头</strong>)和所有参数(包括类型和名称)的哈希。 目的是清楚的标志签名的函数。</p>\n<p>2.UniswapV2Factory.sol</p>\n<p>feeTo–收费地址</p>\n<p>feeToSetter–可以修改feeto的地址</p>\n<p>getPair–记录交易对</p>\n<p>allPairs–全部交易对</p>\n<p>该部分有三个方法，setfeeto,setfeetosetter和createpair，feeto只有feetosetter可以修改，feeToSetter只有feeToSetter可以修改</p>\n<p>createpair会创建交易对，对于token地址会进行排序，小的小的作为token0，大的作为token1，之后使用hash(token0，token1)作为salt，使用create2进行pair合约的部署，并将新的pair添加到getpair和allpair中。由于salt值可以线下计算出来，所以pair的地址是可以自行计算的。</p>\n<p>3.UniswapV2Pair.sol</p>\n<p>了解到这部分时要了解到UQ112x112部分</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">library</span> <span class=\"token class-name\">UQ112x112</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">uint224</span> <span class=\"token keyword\">constant</span> Q112 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">112</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// encode a uint112 as a UQ112x112</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint224</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        z <span class=\"token operator\">=</span> <span class=\"token builtin\">uint224</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Q112<span class=\"token punctuation\">;</span> <span class=\"token comment\">// never overflows</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// divide a UQ112x112 by a uint112, returning a UQ112x112</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">uqdiv</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint224</span> x<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint224</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        z <span class=\"token operator\">=</span> x <span class=\"token operator\">/</span> <span class=\"token builtin\">uint224</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>因为solidity中不允许出现小数，但是token数量又一定会出现小数，所以使用uint224，其中112位作为整数部分，另112位作为小数部分，这样精度即可达到1&#x2F;2**112,最后的uint32用来存储timestamp</p>\n<p>initialize函数会在合约创建时被调用，初始化factory地址，以及两个token的address</p>\n<p>以下为mint函数和burn函数</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> lock <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n       <span class=\"token builtin\">uint</span> balance0 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> balance1 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> amount0 <span class=\"token operator\">=</span> balance0<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> amount1 <span class=\"token operator\">=</span> balance1<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       <span class=\"token builtin\">bool</span> feeOn <span class=\"token operator\">=</span> <span class=\"token function\">_mintFee</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">,</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> _totalSupply <span class=\"token operator\">=</span> totalSupply<span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings, must be defined here since totalSupply can update in _mintFee</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_totalSupply <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n           liquidity <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>amount0<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>amount1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>MINIMUM_LIQUIDITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MINIMUM_LIQUIDITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// permanently lock the first MINIMUM_LIQUIDITY tokens</span>\n       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n           liquidity <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>amount0<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_totalSupply<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _reserve0<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_totalSupply<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">&#125;</span>\n       <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>liquidity <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INSUFFICIENT_LIQUIDITY_MINTED'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span>balance0<span class=\"token punctuation\">,</span> balance1<span class=\"token punctuation\">,</span> _reserve0<span class=\"token punctuation\">,</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feeOn<span class=\"token punctuation\">)</span> kLast <span class=\"token operator\">=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// reserve0 and reserve1 are up-to-date</span>\n       <span class=\"token keyword\">emit</span> <span class=\"token function\">Mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount0<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">burn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> lock <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n       <span class=\"token builtin\">address</span> _token0 <span class=\"token operator\">=</span> token0<span class=\"token punctuation\">;</span>                                <span class=\"token comment\">// gas savings</span>\n       <span class=\"token builtin\">address</span> _token1 <span class=\"token operator\">=</span> token1<span class=\"token punctuation\">;</span>                                <span class=\"token comment\">// gas savings</span>\n       <span class=\"token builtin\">uint</span> balance0 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> balance1 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> liquidity <span class=\"token operator\">=</span> balanceOf<span class=\"token punctuation\">[</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n       <span class=\"token builtin\">bool</span> feeOn <span class=\"token operator\">=</span> <span class=\"token function\">_mintFee</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">,</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> _totalSupply <span class=\"token operator\">=</span> totalSupply<span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings, must be defined here since totalSupply can update in _mintFee</span>\n       amount0 <span class=\"token operator\">=</span> liquidity<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>balance0<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _totalSupply<span class=\"token punctuation\">;</span> <span class=\"token comment\">// using balances ensures pro-rata distribution</span>\n       amount1 <span class=\"token operator\">=</span> liquidity<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>balance1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _totalSupply<span class=\"token punctuation\">;</span> <span class=\"token comment\">// using balances ensures pro-rata distribution</span>\n       <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount0 <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> amount1 <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INSUFFICIENT_LIQUIDITY_BURNED'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token function\">_burn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amount0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       balance0 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       balance1 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n       <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span>balance0<span class=\"token punctuation\">,</span> balance1<span class=\"token punctuation\">,</span> _reserve0<span class=\"token punctuation\">,</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feeOn<span class=\"token punctuation\">)</span> kLast <span class=\"token operator\">=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// reserve0 and reserve1 are up-to-date</span>\n       <span class=\"token keyword\">emit</span> <span class=\"token function\">Burn</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount0<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>铸币流程发生在<code>router</code>合约向<code>pair</code>合约发送代币之后，因此此次的储备量和合约的<code>token</code>余额是不相等的，中间的差值就是需要铸币的<code>token</code>金额。然后获取总的流动性的供应量<code>totoalSupply</code>，如果<code>totalSupply</code>等于0的话，就代表是首次铸币。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207040921738.png\"></p>\n<p>具体参考<a href=\"https://uniswap.org/whitepaper.pdf\">whitepaper</a>第3.4节</p>\n<p>其中给出了如下的解释</p>\n<p>For example, suppose that the price of 1 ABC is currently 100 XYZ. If the initial deposit had been 2 ABC and 200 XYZ (a ratio of 1:100), the depositor would have received √ 2 · 200 &#x3D; 20 shares. Those shares should now still be worth 2 ABC and 200 XYZ, plus accumulated fees. If the initial deposit had been 2 ABC and 800 XYZ (a ratio of 1:400), the depositor would have received √ 2 · 800 &#x3D; 40 pool shares.</p>\n<p>至于为什么在第一次mint时要有最小的限额，是为了防止恶意抬高价格，比如先以1，进行mint，在使用大额数量的token，比如说1000000000token进行sync，此时totalsupply还是为1，但reserve0和reserve，一个为1，一个为100000001，所以lptoken得价格就变成了1000000001，使得散户难以参与</p>\n<p>销毁逻辑参照代码</p>\n<p>如果开启了手续费，就重新计算k值</p>\n<p>swap函数：</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> lock <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount0Out <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> amount1Out <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount0Out <span class=\"token operator\">&lt;</span> _reserve0 <span class=\"token operator\">&amp;&amp;</span> amount1Out <span class=\"token operator\">&lt;</span> _reserve1<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INSUFFICIENT_LIQUIDITY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n     <span class=\"token builtin\">uint</span> balance0<span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">uint</span> balance1<span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// scope for _token&#123;0,1&#125;, avoids stack too deep errors</span>\n     <span class=\"token builtin\">address</span> _token0 <span class=\"token operator\">=</span> token0<span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">address</span> _token1 <span class=\"token operator\">=</span> token1<span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>to <span class=\"token operator\">!=</span> _token0 <span class=\"token operator\">&amp;&amp;</span> to <span class=\"token operator\">!=</span> _token1<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INVALID_TO'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>amount0Out <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amount0Out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// optimistically transfer tokens</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>amount1Out <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// optimistically transfer tokens</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">IUniswapV2Callee</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">uniswapV2Call</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount0Out<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     balance0 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     balance1 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token builtin\">uint</span> amount0In <span class=\"token operator\">=</span> balance0 <span class=\"token operator\">></span> _reserve0 <span class=\"token operator\">-</span> amount0Out <span class=\"token operator\">?</span> balance0 <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>_reserve0 <span class=\"token operator\">-</span> amount0Out<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">uint</span> amount1In <span class=\"token operator\">=</span> balance1 <span class=\"token operator\">></span> _reserve1 <span class=\"token operator\">-</span> amount1Out <span class=\"token operator\">?</span> balance1 <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>_reserve1 <span class=\"token operator\">-</span> amount1Out<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount0In <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> amount1In <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: INSUFFICIENT_INPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// scope for reserve&#123;0,1&#125;Adjusted, avoids stack too deep errors</span>\n     <span class=\"token builtin\">uint</span> balance0Adjusted <span class=\"token operator\">=</span> balance0<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>amount0In<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">uint</span> balance1Adjusted <span class=\"token operator\">=</span> balance1<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>amount1In<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balance0Adjusted<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>balance1Adjusted<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token operator\">**</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: K'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n\n     <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span>balance0<span class=\"token punctuation\">,</span> balance1<span class=\"token punctuation\">,</span> _reserve0<span class=\"token punctuation\">,</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">emit</span> <span class=\"token function\">Swap</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount0In<span class=\"token punctuation\">,</span> amount1In<span class=\"token punctuation\">,</span> amount0Out<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>交换<code>token</code>方法一般通过router合约调用，功能是交换<code>token</code>，首先确认<code>amount0Out</code>或者<code>amount1Out</code>有一个大于0，然后确保储备量大于要取出的金额。然后确保<code>address(to)</code>不等于对应的<code>token</code>地址。然后发送<code>token</code>到对应的地址上。如果data非空，就执行闪电贷的调用。通过调用address(to)下的uniswapV2Call函数进行闪电贷以及手续费的归还</p>\n<p>amount0in和amount1in判断调用者是否转入另一token，如果没有就revert，如果有输入，还需要保证交换之后的储备量的乘积大于等于<code>k</code>,具体代码中计算公式如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207040921378.png\"></p>\n<p>之所以写作这样是因为solidity中没有小数，所以代码中表示为：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207040922566.png\"></p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">_mintFee</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> feeOn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token builtin\">address</span> feeTo <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Factory</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">feeTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       feeOn <span class=\"token operator\">=</span> feeTo <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token builtin\">uint</span> _kLast <span class=\"token operator\">=</span> kLast<span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>feeOn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_kLast <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n               <span class=\"token builtin\">uint</span> rootK <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n               <span class=\"token builtin\">uint</span> rootKLast <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>_kLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n               <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rootK <span class=\"token operator\">></span> rootKLast<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                   <span class=\"token builtin\">uint</span> numerator <span class=\"token operator\">=</span> totalSupply<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>rootK<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>rootKLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                   <span class=\"token builtin\">uint</span> denominator <span class=\"token operator\">=</span> rootK<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>rootKLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                   <span class=\"token builtin\">uint</span> liquidity <span class=\"token operator\">=</span> numerator <span class=\"token operator\">/</span> denominator<span class=\"token punctuation\">;</span>\n                   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>liquidity <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>feeTo<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n               <span class=\"token punctuation\">&#125;</span>\n           <span class=\"token punctuation\">&#125;</span>\n       <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_kLast <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n           kLast <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>mintfeee函数可用于判断平台是否收取手续费，因为每一笔交易都会有千分之三的手续费，那么<code>k</code>值也会随着缓慢增加，所以连续两个时刻之间的<code>k</code>值差值就是这段时间的手续费。即</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207050851966.png\"></p>\n<p>再进行流动性计算并且铸造给feeto，公式为</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207040922509.png\"></p>\n<p>.</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> balance0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> balance1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balance0 <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">uint112</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> balance1 <span class=\"token operator\">&lt;=</span> <span class=\"token builtin\">uint112</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2: OVERFLOW'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint32</span> blockTimestamp <span class=\"token operator\">=</span> <span class=\"token builtin\">uint32</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">%</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint32</span> timeElapsed <span class=\"token operator\">=</span> blockTimestamp <span class=\"token operator\">-</span> blockTimestampLast<span class=\"token punctuation\">;</span> <span class=\"token comment\">// overflow is desired</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>timeElapsed <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _reserve0 <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> _reserve1 <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// * never overflows, and + overflow is desired</span>\n            price0CumulativeLast <span class=\"token operator\">+=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>UQ112x112<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">uqdiv</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> timeElapsed<span class=\"token punctuation\">;</span>\n            price1CumulativeLast <span class=\"token operator\">+=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span>UQ112x112<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">uqdiv</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> timeElapsed<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        reserve0 <span class=\"token operator\">=</span> <span class=\"token builtin\">uint112</span><span class=\"token punctuation\">(</span>balance0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        reserve1 <span class=\"token operator\">=</span> <span class=\"token builtin\">uint112</span><span class=\"token punctuation\">(</span>balance1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        blockTimestampLast <span class=\"token operator\">=</span> blockTimestamp<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Sync</span><span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">,</span> reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>update函数会计算出时间间隔，更新储备量，并且计算“累计”价格时间值，price0CumulativeLast 是一个每秒钟按两个储量的比率递增的值。要将此值转换回价格，需要两个时间点值 price0CumulativeLast，使用以下公式：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207040923946.png\"></p>\n<p>通过将两个样本中价格累计的差值除以这两个样本之间的秒数，过程被逆转，结果就是该时段的时间加权价格。</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">skim</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> lock <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> _token0 <span class=\"token operator\">=</span> token0<span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n    <span class=\"token builtin\">address</span> _token1 <span class=\"token operator\">=</span> token1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// gas savings</span>\n    <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// force reserves to match balances</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> lock <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">_update</span><span class=\"token punctuation\">(</span><span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> reserve0<span class=\"token punctuation\">,</span> reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>skim</code>方法是强制让余额与储备量对等，<code>sync</code>方法则是强制让储备量与余额对等</p>\n<h1 id=\"UniswapV2Library\"><a href=\"#UniswapV2Library\" class=\"headerlink\" title=\"UniswapV2Library\"></a><strong>UniswapV2Library</strong></h1><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">library</span> <span class=\"token class-name\">UniswapV2Library</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// returns sorted token addresses, used to handle return values from pairs sorted in this order</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>tokenA <span class=\"token operator\">!=</span> tokenB<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: IDENTICAL_ADDRESSES'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">,</span> token1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> tokenA <span class=\"token operator\">&lt;</span> tokenB <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>tokenB<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>token0 <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: ZERO_ADDRESS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// calculates the CREATE2 address for a pair without making any external calls</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> factory<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pair <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>\n                hex<span class=\"token string\">'ff'</span><span class=\"token punctuation\">,</span>\n                factory<span class=\"token punctuation\">,</span>\n                <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">,</span> token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                hex<span class=\"token string\">'96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f'</span> <span class=\"token comment\">// init code hash</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// fetches and sorts the reserves for a pair</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> factory<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserveA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>reserveA<span class=\"token punctuation\">,</span> reserveB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> tokenA <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">,</span> reserve1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>reserve1<span class=\"token punctuation\">,</span> reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// given some amount of an asset and pair reserves, returns an equivalent amount of the other asset</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">quote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountA <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>reserveA <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> reserveB <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_LIQUIDITY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amountB <span class=\"token operator\">=</span> amountA<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>reserveB<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> reserveA<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// given an input amount of an asset and pair reserves, returns the maximum output amount of the other asset</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOut<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountIn <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>reserveIn <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> reserveOut <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_LIQUIDITY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amountInWithFee <span class=\"token operator\">=</span> amountIn<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">997</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> numerator <span class=\"token operator\">=</span> amountInWithFee<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>reserveOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> denominator <span class=\"token operator\">=</span> reserveIn<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>amountInWithFee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amountOut <span class=\"token operator\">=</span> numerator <span class=\"token operator\">/</span> denominator<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// given an output amount of an asset and pair reserves, returns a required input amount of the other asset</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountIn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOut<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountOut <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>reserveIn <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> reserveOut <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_LIQUIDITY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> numerator <span class=\"token operator\">=</span> reserveIn<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> denominator <span class=\"token operator\">=</span> reserveOut<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">997</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amountIn <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>numerator <span class=\"token operator\">/</span> denominator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// performs chained getAmountOut calculations on any number of pairs</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> factory<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> amountIn<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOut<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            amounts<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reserveIn<span class=\"token punctuation\">,</span> reserveOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// performs chained getAmountIn calculations on any number of pairs</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> factory<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> amountOut<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOut<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            amounts<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getAmountIn</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reserveIn<span class=\"token punctuation\">,</span> reserveOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-1\"><a href=\"#Analyze-1\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>tokenA <span class=\"token operator\">!=</span> tokenB<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: IDENTICAL_ADDRESSES'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">,</span> token1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> tokenA <span class=\"token operator\">&lt;</span> tokenB <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>tokenB<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>token0 <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: ZERO_ADDRESS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>首先是sorttokens函数，该函数首先判断token0和token1是否指向同一个地址，在进行大小区分，小的为token0，大的为token1，并且判断没有token的地址为0，和上述createpair函数内的地址排序功能相同</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> factory<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pair <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>\n            hex<span class=\"token string\">'ff'</span><span class=\"token punctuation\">,</span>\n            factory<span class=\"token punctuation\">,</span>\n            <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">,</span> token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            hex<span class=\"token string\">'96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f'</span> <span class=\"token comment\">// init code hash</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>pairFor函数用于计算生成的交易对的地址，具体参考<a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1014.md\">create2</a>方法</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207041003857.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207041006951.png\"></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">function getReserves(address factory, address tokenA, address tokenB) internal view returns (uint reserveA, uint reserveB) &#123;\n    (address token0,) &#x3D; sortTokens(tokenA, tokenB);\n    (uint reserve0, uint reserve1,) &#x3D; IUniswapV2Pair(pairFor(factory, tokenA, tokenB)).getReserves();\n    (reserveA, reserveB) &#x3D; tokenA &#x3D;&#x3D; token0 ? (reserve0, reserve1) : (reserve1, reserve0);\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>getReserves函数获取token0以及token1的储备值（恒定乘积的各资产的值）</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">quote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountA <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>reserveA <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> reserveB <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_LIQUIDITY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    amountB <span class=\"token operator\">=</span> amountA<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>reserveB<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> reserveA<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>quote函数根据给定的两个 token 的储备量和其中一个 token 数量，计算得到另一个 token 等值的数值</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOut<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountIn <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_INPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>reserveIn <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> reserveOut <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_LIQUIDITY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amountInWithFee <span class=\"token operator\">=</span> amountIn<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">997</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> numerator <span class=\"token operator\">=</span> amountInWithFee<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>reserveOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> denominator <span class=\"token operator\">=</span> reserveIn<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>amountInWithFee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amountOut <span class=\"token operator\">=</span> numerator <span class=\"token operator\">/</span> denominator<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>根据恒定k值，应有公式如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207041030043.png\"></p>\n<p>上述为不考虑手续费的情况下，而实际上会收取千分之三的手续费，所以amountIn变成了amountIn*997&#x2F;1000</p>\n<p>代入公式（注意solidity中没有小数，分子分母同时乘以1000）得到如下公式</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202207041030843.png\"></p>\n<p>即代码中实现的计算公式</p>\n<p>getAmountIn函数逻辑类似</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> factory<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    amounts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> amountIn<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOut<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> reserveIn<span class=\"token punctuation\">,</span> reserveOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>getAmountsOut函数实现了沿着一个路径进行兑换的功能，比如Token0-&gt;Token1-&gt;Token2-&gt;Token3，并将计算出的amounts以数组形式返回，每次兑换都会调用getAmountOut和getAmountIn函数，所以每次兑换都会扣除手续费，因此兑换路径不宜过长，越长手续费越高。getAmountsIn函数同理</p>\n<h1 id=\"UniswapV2Router02\"><a href=\"#UniswapV2Router02\" class=\"headerlink\" title=\"UniswapV2Router02\"></a>UniswapV2Router02</h1><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">UniswapV2Router02</span> <span class=\"token keyword\">is</span> IUniswapV2Router02 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> immutable override factory<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> immutable override WETH<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>deadline <span class=\"token operator\">>=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: EXPIRED'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _factory<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _WETH<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        factory <span class=\"token operator\">=</span> _factory<span class=\"token punctuation\">;</span>\n        WETH <span class=\"token operator\">=</span> _WETH<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// only accept ETH via fallback from the WETH contract</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// **** ADD LIQUIDITY ****</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_addLiquidity</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountADesired<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountBDesired<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountAMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountBMin\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// create the pair if it doesn't exist yet</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IUniswapV2Factory</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPair</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">IUniswapV2Factory</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPair</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserveA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>reserveA <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> reserveB <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>amountADesired<span class=\"token punctuation\">,</span> amountBDesired<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">uint</span> amountBOptimal <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">quote</span><span class=\"token punctuation\">(</span>amountADesired<span class=\"token punctuation\">,</span> reserveA<span class=\"token punctuation\">,</span> reserveB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>amountBOptimal <span class=\"token operator\">&lt;=</span> amountBDesired<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountBOptimal <span class=\"token operator\">>=</span> amountBMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_B_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>amountADesired<span class=\"token punctuation\">,</span> amountBOptimal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token builtin\">uint</span> amountAOptimal <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">quote</span><span class=\"token punctuation\">(</span>amountBDesired<span class=\"token punctuation\">,</span> reserveB<span class=\"token punctuation\">,</span> reserveA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>amountAOptimal <span class=\"token operator\">&lt;=</span> amountADesired<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountAOptimal <span class=\"token operator\">>=</span> amountAMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_A_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>amountAOptimal<span class=\"token punctuation\">,</span> amountBDesired<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">addLiquidity</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountADesired<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountBDesired<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountAMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountBMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">_addLiquidity</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">,</span> amountADesired<span class=\"token punctuation\">,</span> amountBDesired<span class=\"token punctuation\">,</span> amountAMin<span class=\"token punctuation\">,</span> amountBMin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">,</span> amountA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>tokenB<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        liquidity <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mint</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">addLiquidityETH</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountTokenDesired<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountTokenMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountETHMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token keyword\">payable</span> <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountToken<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountETH<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span>amountToken<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">_addLiquidity</span><span class=\"token punctuation\">(</span>\n            token<span class=\"token punctuation\">,</span>\n            WETH<span class=\"token punctuation\">,</span>\n            amountTokenDesired<span class=\"token punctuation\">,</span>\n            msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>\n            amountTokenMin<span class=\"token punctuation\">,</span>\n            amountETHMin\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">,</span> amountToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amountETH<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        liquidity <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mint</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// refund dust eth, if any</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">></span> amountETH<span class=\"token punctuation\">)</span> TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-</span> amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// **** REMOVE LIQUIDITY ****</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountAMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountBMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// send liquidity to pair</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">burn</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> tokenA <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>amount0<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>amount1<span class=\"token punctuation\">,</span> amount0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountA <span class=\"token operator\">>=</span> amountAMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_A_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountB <span class=\"token operator\">>=</span> amountBMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_B_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidityETH</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountTokenMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountETHMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountToken<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span>amountToken<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span>\n            token<span class=\"token punctuation\">,</span>\n            WETH<span class=\"token punctuation\">,</span>\n            liquidity<span class=\"token punctuation\">,</span>\n            amountTokenMin<span class=\"token punctuation\">,</span>\n            amountETHMin<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            deadline\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amountToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidityWithPermit</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountAMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountBMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bool</span> approveMax<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> value <span class=\"token operator\">=</span> approveMax <span class=\"token operator\">?</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> liquidity<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">,</span> amountAMin<span class=\"token punctuation\">,</span> amountBMin<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidityETHWithPermit</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountTokenMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountETHMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bool</span> approveMax<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountToken<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> value <span class=\"token operator\">=</span> approveMax <span class=\"token operator\">?</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> liquidity<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>amountToken<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">removeLiquidityETH</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">,</span> amountTokenMin<span class=\"token punctuation\">,</span> amountETHMin<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// **** REMOVE LIQUIDITY (supporting fee-on-transfer tokens) ****</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidityETHSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountTokenMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountETHMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span>\n            token<span class=\"token punctuation\">,</span>\n            WETH<span class=\"token punctuation\">,</span>\n            liquidity<span class=\"token punctuation\">,</span>\n            amountTokenMin<span class=\"token punctuation\">,</span>\n            amountETHMin<span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            deadline\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidityETHWithPermitSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountTokenMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountETHMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bool</span> approveMax<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> value <span class=\"token operator\">=</span> approveMax <span class=\"token operator\">?</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> liquidity<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amountETH <span class=\"token operator\">=</span> <span class=\"token function\">removeLiquidityETHSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n            token<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">,</span> amountTokenMin<span class=\"token punctuation\">,</span> amountETHMin<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> deadline\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// **** SWAP ****</span>\n    <span class=\"token comment\">// requires the initial amount to have already been sent to the first pair</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> input<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> output<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">uint</span> amountOut <span class=\"token operator\">=</span> amounts<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> input <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">address</span> to <span class=\"token operator\">=</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> _to<span class=\"token punctuation\">;</span>\n            <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>\n                amount0Out<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountIn<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapTokensForExactTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountInMax<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> amountInMax<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactETHForTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token keyword\">payable</span>\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapTokensForExactETH</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountInMax<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> amountInMax<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForETH</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountIn<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapETHForExactTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token keyword\">payable</span>\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// refund dust eth, if any</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">></span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// **** SWAP (supporting fee-on-transfer tokens) ****</span>\n    <span class=\"token comment\">// requires the initial amount to have already been sent to the first pair</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_swapSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> input<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> output<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            IUniswapV2Pair pair <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">uint</span> amountInput<span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">uint</span> amountOutput<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// scope to avoid stack too deep errors</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> pair<span class=\"token punctuation\">.</span><span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserveInput<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOutput<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> input <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">,</span> reserve1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>reserve1<span class=\"token punctuation\">,</span> reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            amountInput <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>reserveInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            amountOutput <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span>amountInput<span class=\"token punctuation\">,</span> reserveInput<span class=\"token punctuation\">,</span> reserveOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> input <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountOutput<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>amountOutput<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">address</span> to <span class=\"token operator\">=</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> _to<span class=\"token punctuation\">;</span>\n            pair<span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>amount0Out<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForTokensSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountIn\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> balanceBefore <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swapSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>balanceBefore<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactETHForTokensSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token keyword\">payable</span>\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amountIn <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amountIn<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountIn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> balanceBefore <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swapSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>balanceBefore<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForETHSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountIn\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swapSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amountOut <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountOut <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// **** LIBRARY FUNCTIONS ****</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">quote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">quote</span><span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> reserveA<span class=\"token punctuation\">,</span> reserveB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOut<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">public</span>\n        <span class=\"token keyword\">pure</span>\n        virtual\n        override\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span>amountIn<span class=\"token punctuation\">,</span> reserveIn<span class=\"token punctuation\">,</span> reserveOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountIn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOut<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">public</span>\n        <span class=\"token keyword\">pure</span>\n        virtual\n        override\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountIn</span><span class=\"token punctuation\">(</span>amountOut<span class=\"token punctuation\">,</span> reserveIn<span class=\"token punctuation\">,</span> reserveOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">public</span>\n        <span class=\"token keyword\">view</span>\n        virtual\n        override\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountIn<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">public</span>\n        <span class=\"token keyword\">view</span>\n        virtual\n        override\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-2\"><a href=\"#Analyze-2\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>添加流动性：</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">_addLiquidity</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountADesired<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountBDesired<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountAMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountBMin\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// create the pair if it doesn't exist yet</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">IUniswapV2Factory</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPair</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">IUniswapV2Factory</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPair</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserveA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>reserveA <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> reserveB <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>amountADesired<span class=\"token punctuation\">,</span> amountBDesired<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> amountBOptimal <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">quote</span><span class=\"token punctuation\">(</span>amountADesired<span class=\"token punctuation\">,</span> reserveA<span class=\"token punctuation\">,</span> reserveB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>amountBOptimal <span class=\"token operator\">&lt;=</span> amountBDesired<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountBOptimal <span class=\"token operator\">>=</span> amountBMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_B_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>amountADesired<span class=\"token punctuation\">,</span> amountBOptimal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">uint</span> amountAOptimal <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">quote</span><span class=\"token punctuation\">(</span>amountBDesired<span class=\"token punctuation\">,</span> reserveB<span class=\"token punctuation\">,</span> reserveA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>amountAOptimal <span class=\"token operator\">&lt;=</span> amountADesired<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountAOptimal <span class=\"token operator\">>=</span> amountAMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_A_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>amountAOptimal<span class=\"token punctuation\">,</span> amountBDesired<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addLiquidity</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountADesired<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountBDesired<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountAMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountBMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> deadline\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">_addLiquidity</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">,</span> amountADesired<span class=\"token punctuation\">,</span> amountBDesired<span class=\"token punctuation\">,</span> amountAMin<span class=\"token punctuation\">,</span> amountBMin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">,</span> amountA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>tokenB<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    liquidity <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mint</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">addLiquidityETH</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountTokenDesired<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountTokenMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountETHMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> deadline\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token keyword\">payable</span> <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountToken<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountETH<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">(</span>amountToken<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">_addLiquidity</span><span class=\"token punctuation\">(</span>\n        token<span class=\"token punctuation\">,</span>\n        WETH<span class=\"token punctuation\">,</span>\n        amountTokenDesired<span class=\"token punctuation\">,</span>\n        msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>\n        amountTokenMin<span class=\"token punctuation\">,</span>\n        amountETHMin\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">,</span> amountToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amountETH<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    liquidity <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mint</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// refund dust eth, if any</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">></span> amountETH<span class=\"token punctuation\">)</span> TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-</span> amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>该部分函数实现了添加流动性功能，支付两种Token换取LP Token，其中addLiquidity和addLiquidityETH函数有所不同，前者支持两种ERC-20Token添加流动性，后者的两个代币中必须有一个为ETH</p>\n<p>addLiquidity参数注释：</p>\n<p>tokenA 和 tokenB 就是配对的两个代币，amountADesired和amountBDesired是预期准备为添加流动性付出的Token数量，amountAMin和amountBMin是用户可以接受的最小交易数量（根据滑点计算），to是LP-Token的接收地址，deadline是这笔交易的有效期，超过有效期还没有交易就会直接失效</p>\n<p>addLiquidity函数调用内部函数_addLiquidity首先检测对应的pair是否存在，如果不存在进行pair创建。获得两种Token的储备量，如果为0，那(amountA, amountB) &#x3D; (amountADesired, amountBDesired)，如果不都为0就计算amountBOptimal，比较是否小于amountBDesired如果小于则需要满足amountBOptimal &gt;&#x3D; amountBMin，此时(amountA, amountB) &#x3D; (amountADesired, amountBOptimal)，如果amountBOptimal &gt; amountBDesired就计算amountAOptimal，要求amountAOptimal &lt;&#x3D; amountADesired并且amountAOptimal &gt;&#x3D; amountAMin否则回滚交易，如果满足，此时的(amountA, amountB) &#x3D; (amountAOptimal, amountBDesired)</p>\n<p>最后再调用pair合约下的的mint函数就可以得到 LP-Token了</p>\n<p>addLiquidityETH与addLiquidity逻辑类似，不过就是将一个ERC-20变成了ETH，。预期支付的 ETH 金额也是直接从 msg.value 读取的，所以入参里也不需要 ETH 的 Desired 参数，实际上这里的ETH也是转变为WETH进行输入的</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amountETH<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>这行代码将用户的ETh转变为了WETH</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">></span> amountETH<span class=\"token punctuation\">)</span> TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-</span> amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>将用户付出的多余的ETH进行回退</p>\n<p>移除流动性：</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountAMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountBMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> deadline\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// send liquidity to pair</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">burn</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> tokenA <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>amount0<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>amount1<span class=\"token punctuation\">,</span> amount0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountA <span class=\"token operator\">>=</span> amountAMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_A_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountB <span class=\"token operator\">>=</span> amountBMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_B_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidityETH</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountTokenMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountETHMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> deadline\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountToken<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">(</span>amountToken<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span>\n        token<span class=\"token punctuation\">,</span>\n        WETH<span class=\"token punctuation\">,</span>\n        liquidity<span class=\"token punctuation\">,</span>\n        amountTokenMin<span class=\"token punctuation\">,</span>\n        amountETHMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        deadline\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amountToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidityWithPermit</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountAMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountBMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">bool</span> approveMax<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> value <span class=\"token operator\">=</span> approveMax <span class=\"token operator\">?</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> liquidity<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">,</span> amountAMin<span class=\"token punctuation\">,</span> amountBMin<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidityETHWithPermit</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountTokenMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountETHMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">bool</span> approveMax<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountToken<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> value <span class=\"token operator\">=</span> approveMax <span class=\"token operator\">?</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> liquidity<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span>amountToken<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">removeLiquidityETH</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">,</span> amountTokenMin<span class=\"token punctuation\">,</span> amountETHMin<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// **** REMOVE LIQUIDITY (supporting fee-on-transfer tokens) ****</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidityETHSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountTokenMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountETHMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> deadline\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span>\n        token<span class=\"token punctuation\">,</span>\n        WETH<span class=\"token punctuation\">,</span>\n        liquidity<span class=\"token punctuation\">,</span>\n        amountTokenMin<span class=\"token punctuation\">,</span>\n        amountETHMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        deadline\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> amountETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidityETHWithPermitSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountTokenMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountETHMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">bool</span> approveMax<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> s\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountETH<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> value <span class=\"token operator\">=</span> approveMax <span class=\"token operator\">?</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> liquidity<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">permit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> deadline<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    amountETH <span class=\"token operator\">=</span> <span class=\"token function\">removeLiquidityETHSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n        token<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">,</span> amountTokenMin<span class=\"token punctuation\">,</span> amountETHMin<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> deadline\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>removeLiquidity和addLiquidity 对应，换回两种Token，removeLiquidityETH和addLiquidityETH ，换回Token和ETH，removeLiquidityWithPermit和removeLiquidityETHWithPermit是使用permit进行签名授权换回Token，后者其中之一为ETH，removeLiquidityETHSupportingFeeOnTransferTokens和removeLiquidityETHWithPermitSupportingFeeOnTransferTokens函数类似，类似于removeLiquidityETH ，不同之处在于支持在转账时支付费用的Token(<a href=\"https://github.com/ethereum/EIPs/issues/865\">ERC865</a>)，后者区别前者支持使用链下签名的方式进行授权</p>\n<p>移除流动性的核心代码为removeLiquidity </p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span>\n    <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> liquidity<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountAMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> amountBMin<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">uint</span> deadline\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pair<span class=\"token punctuation\">,</span> liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// send liquidity to pair</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">burn</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">,</span> tokenB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> tokenA <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>amount0<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>amount1<span class=\"token punctuation\">,</span> amount0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountA <span class=\"token operator\">>=</span> amountAMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_A_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountB <span class=\"token operator\">>=</span> amountBMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_B_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>逻辑比较简单，首先将LP-Token划转到pair合约下，在调用burn函数销毁流动性同时归还Token0和Token1，同时返回amountA 和 amountB，然后排序Token0和Token1从而确定amountA 和 amountB，最后检验是否满足滑点计算后的最小值.</p>\n<p>removeLiquidityETH 同理，因为pair实际存储的是WETH，所以调用removeLiquidity 时第二个参数为wETH，其余逻辑相同，最后调用WETH的withdraw函数将WETH转变为ETH，在调用safeTransferETH将ETh转给to地址</p>\n<p>removeLiquidityWithPermit函数实际就是在调用removeLiquidity函数钱先调用permit函数进行授权，从而免去调用approve函数的操作，逻辑同上</p>\n<p>removeLiquidityETHWithPermit函数和removeLiquidityETH 同理，区别于也添加了调用permit函数使用签名进行授权的操作，从而换回Token+ETH</p>\n<p><code>removeLiquidityETHSupportingFeeOnTransferTokens</code>和<code>removeLiquidityETHWithPermitSupportingFeeOnTransferTokens</code>函数这里放在一起进行分析逻辑与之前的<code>removeLiquidityETH </code>和<code>removeLiquidityWithPermit</code>是一样的，前者需要提前进行approve，后者使用permit进行签名验证后调用前者</p>\n<p>代币兑换：</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> input<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> output<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">uint</span> amountOut <span class=\"token operator\">=</span> amounts<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> input <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">address</span> to <span class=\"token operator\">=</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> _to<span class=\"token punctuation\">;</span>\n            <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>\n                amount0Out<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountIn<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapTokensForExactTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountInMax<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> amountInMax<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactETHForTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token keyword\">payable</span>\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapTokensForExactETH</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountInMax<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> amountInMax<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForETH</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountIn<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span>amounts<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapETHForExactTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token keyword\">payable</span>\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amounts <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: EXCESSIVE_INPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span>amounts<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// refund dust eth, if any</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">></span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-</span> amounts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// **** SWAP (supporting fee-on-transfer tokens) ****</span>\n    <span class=\"token comment\">// requires the initial amount to have already been sent to the first pair</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_swapSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> input<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> output<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            IUniswapV2Pair pair <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">uint</span> amountInput<span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">uint</span> amountOutput<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// scope to avoid stack too deep errors</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> pair<span class=\"token punctuation\">.</span><span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserveInput<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOutput<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> input <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">,</span> reserve1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>reserve1<span class=\"token punctuation\">,</span> reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            amountInput <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>reserveInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            amountOutput <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span>amountInput<span class=\"token punctuation\">,</span> reserveInput<span class=\"token punctuation\">,</span> reserveOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> input <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountOutput<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>amountOutput<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">address</span> to <span class=\"token operator\">=</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> _to<span class=\"token punctuation\">;</span>\n            pair<span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>amount0Out<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForTokensSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> virtual override <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountIn\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> balanceBefore <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swapSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>balanceBefore<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactETHForTokensSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token keyword\">payable</span>\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amountIn <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amountIn<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountIn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> balanceBefore <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swapSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>balanceBefore<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForETHSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> amountOutMin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> path<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> deadline\n    <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        virtual\n        override\n        <span class=\"token function\">ensure</span><span class=\"token punctuation\">(</span>deadline<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> WETH<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INVALID_PATH'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountIn\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_swapSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amountOut <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountOut <span class=\"token operator\">>=</span> amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IWETH</span><span class=\"token punctuation\">(</span>WETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>函数注解：</p>\n<p><strong>common Token</strong></p>\n<p><code>swapExactTokensForTokens</code>：用指定数量的TokenA兑换未确定数量的TokenB</p>\n<p><code>swapTokensForExactTokens</code>：用未确定数量的TokenA换取确定数量的TokenB</p>\n<p><code>swapExactETHForTokens</code>：用指定数量的的ETH兑换ERC20 Token</p>\n<p><code>swapTokensForExactETH</code>：用未指定数量的Token换取指定数量的ETH</p>\n<p><code>swapExactTokensForETH</code>：用指定数量的Token兑换回未指定数量的ETH</p>\n<p><code>swapETHForExactTokens</code>：用未指定数量的ETH兑换指定数量的Token</p>\n<p><strong>fee on transfer Token</strong></p>\n<p><code>swapExactTokensForTokensSupportingFeeOnTransferTokens</code>：指定数量的Token兑换Token，支持转账时扣费</p>\n<p><code>swapExactETHForTokensSupportingFeeOnTransferTokens</code>：：指定数量的ETH兑换Token，支持转账时扣费</p>\n<p><code>swapExactTokensForETHSupportingFeeOnTransferTokens</code>：指定数量的Token兑换 ETH，支持转账时扣费</p>\n<p>核心代码：</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">_swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> input<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> output<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amountOut <span class=\"token operator\">=</span> amounts<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> input <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> to <span class=\"token operator\">=</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> _to<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>\n            amount0Out<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>遍历整个兑换路径，path[i]为inp Token，path[i+1]为output Token，在进行amount的匹配，判断是否为最后一次兑换，是则to为为_to，否则to为下一个兑换匹配的pair合约地址，最后调用pair合约下的swap函数实现兑换</p>\n<p>swapExactTokensForTokens函数首先计算出兑换数量在判断是否低于滑点计算后的最小值，大于最小值就将Token转移到pair合约并带哦用内部swap函数。swapTokensForExactTokens函数同理，先计算出兑换需要花费的数量，在判断小于最大值，再转账到pair合约后进行swap</p>\n<p>swapExactETHForTokens和swapExactTokensForTokens函数逻辑相同，只是将amountIn换成了msg.value计算amountOut，并且多了一步将ETh存储为WETH的过程，其余逻辑一样。swapTokensForExactETH函数和swapTokensForExactTokens逻辑相同，不同点同上</p>\n<p>剩余的几个逻辑也都一样，就不再展开说了</p>\n<p>再看一下fee on transfer的Token的swap原理，核心代码如下：</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">_swapSupportingFeeOnTransferTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> input<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> output<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token0<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">sortTokens</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        IUniswapV2Pair pair <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Pair</span><span class=\"token punctuation\">(</span>UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amountInput<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amountOutput<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// scope to avoid stack too deep errors</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> pair<span class=\"token punctuation\">.</span><span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> reserveInput<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOutput<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> input <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>reserve0<span class=\"token punctuation\">,</span> reserve1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>reserve1<span class=\"token punctuation\">,</span> reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amountInput <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>reserveInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amountOutput <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span>amountInput<span class=\"token punctuation\">,</span> reserveInput<span class=\"token punctuation\">,</span> reserveOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> input <span class=\"token operator\">==</span> token0 <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountOutput<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>amountOutput<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> to <span class=\"token operator\">=</span> i <span class=\"token operator\">&lt;</span> path<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">pairFor</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> output<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> _to<span class=\"token punctuation\">;</span>\n        pair<span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>amount0Out<span class=\"token punctuation\">,</span> amount1Out<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>核心代码里边需要注意一下amountInput和amountOutput的计算，因为Token可能在转账的过程中进行了手续费的扣除，所以amountIn使用合约余额减去储备金的方法计算，再依据amountIn计算amountOut，其余逻辑同上</p>\n<p>其余三个进行兑换的函数除了是这样计算amount，其余逻辑没有不同，相同的swap原理，这里不再细说了</p>\n<p>最后是五个查询函数，对应着UniswapV2Library库内的函数</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">quote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">quote</span><span class=\"token punctuation\">(</span>amountA<span class=\"token punctuation\">,</span> reserveA<span class=\"token punctuation\">,</span> reserveB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOut<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span>\n    <span class=\"token keyword\">pure</span>\n    virtual\n    override\n    <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span>amountIn<span class=\"token punctuation\">,</span> reserveIn<span class=\"token punctuation\">,</span> reserveOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getAmountIn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveOut<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span>\n    <span class=\"token keyword\">pure</span>\n    virtual\n    override\n    <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountIn</span><span class=\"token punctuation\">(</span>amountOut<span class=\"token punctuation\">,</span> reserveIn<span class=\"token punctuation\">,</span> reserveOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span>\n    <span class=\"token keyword\">view</span>\n    virtual\n    override\n    <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsOut</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountIn<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> path<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span>\n    <span class=\"token keyword\">view</span>\n    virtual\n    override\n    <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> amounts<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getAmountsIn</span><span class=\"token punctuation\">(</span>factory<span class=\"token punctuation\">,</span> amountOut<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":" 相对系统且深入的了解了一下uniswapV2 whitepaper： https://uniswap.org/whitepaper.pdf EIP-2612： https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2612....","link":"","photos":[],"count_time":{"symbolsCount":"81k","symbolsTime":"1:14"},"categories":[],"tags":[{"name":"区块链 ctf","slug":"区块链-ctf","count":9,"path":"api/tags/区块链-ctf.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#UniswapV2-Factory\"><span class=\"toc-text\">UniswapV2 Factory</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze\"><span class=\"toc-text\">Analyze</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#UniswapV2Library\"><span class=\"toc-text\">UniswapV2Library</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-1\"><span class=\"toc-text\">Analyze</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#UniswapV2Router02\"><span class=\"toc-text\">UniswapV2Router02</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-2\"><span class=\"toc-text\">Analyze</span></a></li></ol></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"VNCTF2022 open tournament-> Blockchain-VNloan","uid":"f5b9fca07821fa4050ef59953395a72d","slug":"VNCTF2022 Blockchain-VNloan","date":"2022-08-01T10:45:15.790Z","updated":"2022-08-01T10:45:15.790Z","comments":true,"path":"api/articles/VNCTF2022 Blockchain-VNloan.json","keywords":null,"cover":[],"text":"0x00 背景基于 Uniswap V3 的 DeFi 流动性协议Visor Finance遭受黑客攻击，黑客利用重入漏洞耗尽了880万枚VISR代币，当时，VISR的交易价格约为0.93美元，总损失约为820万美元。 因为call调用产生的漏洞还是比较多的，比如重入漏洞，atn...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"区块链 ctf","slug":"区块链-ctf","count":9,"path":"api/tags/区块链-ctf.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"2022 *ctf-->Treasure Hunter","uid":"de2cba75e8e35434333862362c47f8f7","slug":"star ctf-treasure hunter","date":"2022-08-01T10:44:08.818Z","updated":"2022-08-01T10:44:08.818Z","comments":true,"path":"api/articles/star ctf-treasure hunter.json","keywords":null,"cover":[],"text":"周六时候打了一下*ctf，其中的区块链题目还是蛮有意思的，拿出来分享一下 codepragma solidity >=0.8.0 &lt;0.9.0; uint256 constant SMT_STACK_SIZE = 32; uint256 constant DEPTH = 1...","link":"","photos":[],"count_time":{"symbolsCount":"35k","symbolsTime":"32 mins."},"categories":[],"tags":[{"name":"区块链 ctf","slug":"区块链-ctf","count":9,"path":"api/tags/区块链-ctf.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}