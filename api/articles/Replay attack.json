{"title":"Replay attack","uid":"02422efed6266c39f6caa487b5070e3c","slug":"Replay attack","date":"2022-10-11T15:32:03.303Z","updated":"2022-12-16T07:01:32.059Z","comments":true,"path":"api/articles/Replay attack.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/image.png","content":"<p>简单的重放攻击分析</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Replay-attack\"><a href=\"#Replay-attack\" class=\"headerlink\" title=\"Replay attack\"></a>Replay attack</h1><p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/image.png\"></p>\n<h1 id=\"Analyse\"><a href=\"#Analyse\" class=\"headerlink\" title=\"Analyse\"></a>Analyse</h1><h2 id=\"Core-code\"><a href=\"#Core-code\" class=\"headerlink\" title=\"Core code\"></a>Core code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">transferProxy</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _from<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _value<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _fee<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint8</span> _v<span class=\"token punctuation\">,</span><span class=\"token builtin\">bytes32</span> _r<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes32</span> _s<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token function\">transferAllowed</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">)</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> _fee <span class=\"token operator\">+</span> _value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">revert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">uint256</span> nonce <span class=\"token operator\">=</span> nonces<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">bytes32</span> h <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">,</span>_to<span class=\"token punctuation\">,</span>_value<span class=\"token punctuation\">,</span>_fee<span class=\"token punctuation\">,</span>nonce<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_from <span class=\"token operator\">!=</span> <span class=\"token function\">ecrecover</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span>_v<span class=\"token punctuation\">,</span>_r<span class=\"token punctuation\">,</span>_s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">revert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> _value <span class=\"token operator\">&lt;</span> balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span>\n            <span class=\"token operator\">||</span> balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> _fee <span class=\"token operator\">&lt;</span> balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">revert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> _value<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">,</span> _to<span class=\"token punctuation\">,</span> _value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        balances<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> _fee<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _fee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        balances<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _value <span class=\"token operator\">+</span> _fee<span class=\"token punctuation\">;</span>\n        nonces<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nonce <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>为解决gas fee问题，在智能合约中会采取代理转账功能，即TransferProxy。比如在HXH token合约中，A想转账300Token给B，但是，A没有足够数量的ETH用来支付Gas fee，于是A可以找C做中间人，A支付一定的token做service fee，让C来代替A付出Gas fee，核心代码如上</p>\n<p>example：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  'from'<span class=\"token operator\">:</span>address(A)\n  'to'<span class=\"token operator\">:</span>address(B)\n\t'value'<span class=\"token operator\">:</span><span class=\"token number\">300</span>\n\t'fee'<span class=\"token operator\">:</span><span class=\"token number\">10</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>上述事例执行结果为A支付310token，其中300个转账给B，10个做为手续费转账给C，C获得10token奖励，消耗一定的手续费</p>\n<p>函数中的重点是keccak256以及ecrecover</p>\n<ol>\n<li>角色A(_from)先用<code>sha3</code>函数对 <code>_from,_to,_value,_fee,nonce,address(token)</code>进行处理得到<code>msg</code>值，然后使用<code>web3.eth.sign(address, msg)</code>得到签名<code>signature</code>；</li>\n<li>将<code>signature</code>取前 0<del>66 个字节作为 r， 66</del>130 之间的字节作为 s，130~132 的字节作为 v，然后把 v 转为整型，<code>角色A</code>把这些信息告知<code>角色C</code>，<code>角色C</code>调用合约的<code>transferProxy</code>进行转账；</li>\n<li>合约内<code>ecrecover</code>接收签名数据的哈希值以及 r&#x2F;s&#x2F;v 等参数作为输入，返回实施该签名的账户地址；</li>\n<li>校验步骤3中得到的账户地址与 _from 是否匹配；</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> msg <span class=\"token operator\">=</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">sha3</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">,</span>_to<span class=\"token punctuation\">,</span>_value<span class=\"token punctuation\">,</span>_fee<span class=\"token punctuation\">,</span>nonce<span class=\"token punctuation\">,</span><span class=\"token function\">address</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> signature <span class=\"token operator\">=</span> web3<span class=\"token punctuation\">.</span>eth<span class=\"token punctuation\">.</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> r <span class=\"token operator\">=</span> signature<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> s <span class=\"token operator\">=</span> <span class=\"token string\">'0x'</span> <span class=\"token operator\">+</span> signature<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">130</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> v <span class=\"token operator\">=</span> <span class=\"token string\">'0x'</span> <span class=\"token operator\">+</span> signature<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132</span><span class=\"token punctuation\">)</span>\nv <span class=\"token operator\">=</span> web3<span class=\"token punctuation\">.</span><span class=\"token function\">toDecimal</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'v'</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果匹配则执行，否则revert，但是在许多智能合约中采取了相同的签名方式，导致同一笔交易可能在另一个合约（下文我们说为FXH Token）中被重放</p>\n<p>比如上述事例，在以太坊浏览器中交易数据公开透明，交易的参数可以被查询到，此时如果B清楚重放攻击，就可以获取交易数据进行攻击，攻击成功的前提是 _from 账户在两个合约中的 nonce （一般在合约中自增）值是一样的，这样才能保证签名后的 hash 值相同。在FXH合约中执行相同的交易，相当于A转给了角色B 300HXH之后，又转给了角色B 300FXH（未授权的），造成了意料之外的损失</p>\n<p><strong>防御建议</strong></p>\n<ol>\n<li>nonce 生成算法不采用从 0 开始自增的设计，避免和场景的做法相同；</li>\n<li>去除 transferProxy 函数，改成其他方式实现代理的需求；</li>\n</ol>\n<h2 id=\"Other-related-contracts\"><a href=\"#Other-related-contracts\" class=\"headerlink\" title=\"Other related contracts\"></a><strong>Other related contracts</strong></h2><ul>\n<li><a href=\"https://etherscan.io/address/0x3AC6cb00f5a44712022a51fbace4C7497F56eE31#code\">M2C Mesh Network (mesh) 0x3AC6cb00f5a44712022a51fbace4C7497F56eE31</a></li>\n<li><a href=\"https://etherscan.io/address/0x8feBf7551EeA6Ce499F96537Ae0e2075c5A7301a#code\">M2C Mesh Network (MTC) 0x8feBf7551EeA6Ce499F96537Ae0e2075c5A7301a</a></li>\n<li><a href=\"https://etherscan.io/address/0x9E88770DA20ebea0Df87aD874c2F5cf8ab92f605#code\">First (FST) 0x9E88770DA20ebea0Df87aD874c2F5cf8ab92f605</a></li>\n<li><a href=\"https://etherscan.io/address/0xF20b76Ed9d5467fDcDc1444455e303257d2827c7#code\">GG Token (GG) 0xF20b76Ed9d5467fDcDc1444455e303257d2827c7</a></li>\n<li><a href=\"https://etherscan.io/address/0x43ee79e379e7b78d871100ed696e803e7893b644#code\">UG Token (UGT) old 0x43ee79e379e7b78d871100ed696e803e7893b644</a></li>\n</ul>\n<p>参考：[<a href=\"https://github.com/nkbai/defcon26/blob/master/docs/Replay%20Attacks%20on%20Ethereum%20Smart%20Contracts.md]\">https://github.com/nkbai/defcon26/blob/master/docs/Replay%20Attacks%20on%20Ethereum%20Smart%20Contracts.md]</a>(<a href=\"https://github.com/nkbai/defcon26/blob/master/docs/Replay\">https://github.com/nkbai/defcon26/blob/master/docs/Replay</a> Attacks on Ethereum Smart Contracts.md)</p>\n","feature":true,"text":"简单的重放攻击分析 Replay attack AnalyseCore codefunction transferProxy(address _from, address _to, uint256 _value, uint256 _fee, uint8 _v,bytes32 _r...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":18,"path":"api/tags/区块链.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Replay-attack\"><span class=\"toc-text\">Replay attack</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Analyse\"><span class=\"toc-text\">Analyse</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Core-code\"><span class=\"toc-text\">Core code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Other-related-contracts\"><span class=\"toc-text\">Other related contracts</span></a></li></ol></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Down Under CTF","uid":"37d952c359458cb6532fc36cd0258d93","slug":"DownUnder","date":"2022-10-11T15:34:16.219Z","updated":"2022-12-16T06:59:31.988Z","comments":true,"path":"api/articles/DownUnder.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/f67bba9809a0d5a0a679952624d88928527fc48cfe7fcd381ab21a60cb838f3f.png","text":"DownUnder ctf 2022-blockchain题解 Solve Me一道签到题，没什么难度，调用指定函数即可 function solveChallenge() external &#123; isSolved = true; &#125; Secret and Ep...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":18,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Chain Flag","uid":"d378808bbcd5d495f80cba891879084d","slug":"Chain Flag","date":"2022-08-21T08:00:13.497Z","updated":"2022-12-16T07:05:41.896Z","comments":true,"path":"api/articles/Chain Flag.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/80571913.png","text":"Upgrading！！ integer overflowbet 0x30d0a604d8c90064a0a3ca4beeea177eff3e9bcd@ropsten https://github.com/chainflag/ctf-blockchain-challenges/tr...","link":"","photos":[],"count_time":{"symbolsCount":"39k","symbolsTime":"36 mins."},"categories":[],"tags":[{"name":"区块链 ctf","slug":"区块链-ctf","count":11,"path":"api/tags/区块链-ctf.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}